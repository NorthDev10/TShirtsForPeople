{"version":3,"sources":["webpack:///2.build.js","webpack:///./resources/assets/js/components/body/Home/components/carrousel/carrousel.vue","webpack:///resources/assets/js/components/body/Home/components/carrousel/carrousel.vue","webpack:///./resources/assets/js/components/body/Home/components/carrousel/carrousel.vue?86e2","webpack:///./resources/assets/js/components/body/Home/components/carrousel/carrousel.vue?baa3","webpack:///./resources/assets/js/components/body/Home/components/carrousel/carrousel.vue?a0d2","webpack:///./resources/assets/js/components/body/Home/components/carrousel/carrousel.vue?46eb","webpack:///./node_modules/vue-awesome-swiper/dist/vue-awesome-swiper.js","webpack:///./node_modules/swiper/dist/js/swiper.js","webpack:///./resources/assets/js/components/body/Home/components/carrousel/carrousel.vue?4862","webpack:///./resources/assets/js/components/body/Home/components/carrousel/assets/slide_en_1.jpg","webpack:///./resources/assets/js/components/body/Home/components/carrousel/assets/slide_en_2.jpg","webpack:///./resources/assets/js/components/body/Home/components/carrousel/assets/slide_uk_1.jpg","webpack:///./resources/assets/js/components/body/Home/components/carrousel/assets/slide_uk_2.jpg"],"names":["webpackJsonp","180","module","__webpack_exports__","__webpack_require__","injectStyle","ssrContext","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_carrousel_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_777cb022_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_carrousel_vue__","normalizeComponent","__vue_styles__","Component","192","__WEBPACK_IMPORTED_MODULE_0_vue_awesome_swiper__","n","name","components","swiper","swiperSlide","data","swiperOption","spaceBetween","centeredSlides","autoplay","delay","disableOnInteraction","pagination","el","clickable","navigation","nextEl","prevEl","209","exports","content","i","locals","210","push","211","212","213","e","t","this","s","l","call","m","c","d","o","configurable","enumerable","get","__esModule","default","prototype","hasOwnProperty","p","r","a","u","options","render","staticRenderFns","_compiled","functional","_scopeId","$vnode","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","beforeCreate","_injectStyles","concat","esModule","install","Swiper","window","f","props","globalOptions","component","h","slideClass","ready","update","mounted","$parent","updated","attached","methods","assign","TypeError","arguments","length","writable","type","required","classes","wrapperClass","mountInstance","$nextTick","activated","beforeDestroy","destroy","$el","bindEvents","$emit","forEach","on","apply","Array","slice","replace","toLowerCase","$createElement","_self","_c","staticClass","_t","_v","class","214","global","factory","$","selector","context","arr","Dom7","els","tempParent","html","trim","indexOf","toCreate","doc","createElement","innerHTML","childNodes","match","querySelectorAll","getElementById","split","nodeType","win","unique","uniqueArray","addClass","className","j","classList","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","arguments$1","setAttribute","attrName","getAttribute","removeAttr","removeAttribute","key","dom7ElementDataStorage","dataKey","transform","elStyle","style","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","handleLiveEvent","target","eventData","dom7EventData","unshift","is","targetSelector","listener","parents","k","handleEvent","args","len","eventType","capture","undefined","events","event$1","dom7LiveListeners","proxyListener","addEventListener","event","dom7Listeners","off","handlers","handler","removeEventListener","splice","trigger","evt","CustomEvent","detail","bubbles","cancelable","createEvent","initEvent","filter","dataIndex","dispatchEvent","transitionEnd","callback","fireCallBack","dom","outerWidth","includeMargins","styles","offsetWidth","parseFloat","getPropertyValue","outerHeight","offsetHeight","offset","box","getBoundingClientRect","body","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","getComputedStyle","css","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parentNode","closest","find","foundElements","found","children","removeChild","toAdd","updateSize","width","height","params","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","Utils","extend","size","updateSlides","$wrapperEl","swiperSize","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesNumberEvenToRows","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slideSize","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","boxSizing$1","swiperSlideSize","abs","slidesPerGroup","newSlidesGrid","effect","Support","flexbox","setWrapperSize","i$1","slidesGridItem","i$2","slidesGridItem$1","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","loop","slideDuplicateClass","slideDuplicateActiveClass","nextSlide","slideNextClass","prevSlide","slidePrevClass","slideDuplicateNextClass","slideDuplicatePrevClass","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","getTranslate","axis","virtualTranslate","currentTranslate","setTranslate","byController","x","y","transforms3d","previousTranslate","newProgress","transitionStart","runCallbacks","direction","autoHeight","dir","transitionEnd$1","animating","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","prevIndex","normalizedTranslate","normalizedSnapGrid","map","prevSnap","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","nextTick","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged$1","loopDestroy","setGrabCursor","moving","touch","simulateTouch","isLocked","cursor","unsetGrabCursor","appendSlide","observer","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","screen","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","now","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","activeElement","blur","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","pow","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","grabCursor","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","clearTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","needsLoopFix","doBounce","bounceAmount","freeModeMomentumBounceRatio","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","bind","touchEventsTarget","pointerEvents","prefixedPointerEvents","passiveListener","start","passiveListeners","passive","move","end","Device","ios","android","detachEvents","keys","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","param","paramValue","breakpointParams","originalParams","needsReLoop","points","point","sort","b","breakpointsInverse","innerWidth","addClasses","classNames","suffixes","Browser","isIE","isEdge","suffix","containerModifierClass","join","removeClasses","loadImage","imageEl","src","srcset","sizes","checkForComplete","onReady","image","complete","Image","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","wasLocked","isEventSupported","isSupported","element","implementation","hasFeature","document","nodeName","querySelector","getElementsByTagName","location","hash","navigator","userAgent","history","Date","setTimeout","self","fn","Class","Methods","methodName","deleteProps","obj","object","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","parseUrlQuery","url","query","urlToParse","href","paramsPart","decodeURIComponent","isObject","constructor","len$1","to","nextSource","keysArray","nextIndex","nextKey","desc","getOwnPropertyDescriptor","testDiv","Modernizr","maxTouchPoints","DocumentTouch","pointerEnabled","PointerEvent","msPointerEnabled","csstransforms3d","supportsPassive","opts","gestures","SwiperClass","eventsListeners","eventName","staticAccessors","priority","method","onceHandler","eventHandler","isArray","useModulesParams","instanceParams","instance","modules","moduleName","useModules","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","create","set","use","installModule","proto","static","defineProperties","transition$1","manipulation","ua","device","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","isSafari","isUiWebView","test","images","checkOverflow$1","defaults","init","uniqueNavElements","noSwipingClass","slideBlankClass","runCallbacksOnInit","prototypes","extendedDefaults","SwiperClass$$1","prototypeGroup","protoMethod","moduleParamName","swiperParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","__proto__","spv","breakLoop","translateValue","deleteInstance","cleanStyles","extendDefaults","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","attach","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","observeSlideChildren","disconnect","Observer$1","Virtual","force","onRendered","lazy","load","ref","ref$1","addSlidesBefore","addSlidesAfter","ref$2","previousFrom","from","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","beforeInit","overwriteParams","Keyboard","handle","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","enable","disable","Keyboard$1","Mousewheel","lastScrollTime","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","handleMouseEnter","mouseEntered","handleMouseLeave","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplayDisableOnInteraction","stop","getTime","eventsTarged","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onPrevClick","onNextClick","Navigation$1","hideOnClick","hiddenClass","toEdge","fromEdge","click","Pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bullet","$bullet","bulletIndex","bulletActiveClass","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","formatFractionCurrent","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","renderFraction","currentClass","totalClass","renderProgressbar","progressbarFillClass","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","bulletElement","number","activeIndexChange","snapIndexChange","slidesLengthChange","snapGridLengthChange","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","setDragPosition","pointerPosition","clientX","clientY","positionRatio","onDragStart","dragTimeout","onDragMove","onDragEnd","snapOnRelease","enableDraggable","activeListener","disableDraggable","$swiperEl","dragEl","draggable","Scrollbar$1","dragClass","Parallax","setTransform","currentOpacity","currentScale","parallax","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","getDistanceBetweenTouches","x1","y1","x2","y2","onGestureStart","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","$imageEl","$imageWrapEl","maxRatio","isScaling","onGestureChange","scaleMove","minRatio","onGestureEnd","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","onTransitionEnd","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","Zoom$1","containerClass","zoomedSlideClass","touchStart","touchEnd","doubleTap","Lazy","loadInSlide","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","slideOriginalIndex","originalSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","preloaderClass","scroll","scrollbarDragMove","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","getInterpolateFunction","controller","spline","setTranslate$1","setControlledTranslate","by","controlledTranslate","multiplier","inverse","controlled","control","setControlledTransition","Controller$1","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","onEnterKey","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","updateNavigation","updatePagination","bulletEl","$bulletEl","paginationBulletMessage","A11y","notificationClass","paginationUpdate","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","setHistory","slugify","includes","currentState","state","slideHistory","History$1","HashNavigation","onHashCange","newHash","setHash","slideHash","watchState","HashNavigation$1","Autoplay","run","$activeSlideEl","reverseDirection","stopOnLastSlide","running","pause","paused","waitForTransition","Autoplay$1","beforeTransitionStart","sliderFirstMove","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","$cubeShadowEl","swiperWidth","swiperHeight","cubeEffect","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowAngle","sin","cos","scale1","shadowScale","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","EffectCoverflow","Thumbs","thumbsParams","thumbs","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","Thumbs$1","slideChange","215","_vm","_h","language","alt","slot","esExports","216","217","218","219"],"mappings":"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","file":"2.build.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 180:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_carrousel_vue__ = __webpack_require__(192);\n/* empty harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_777cb022_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_carrousel_vue__ = __webpack_require__(215);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(209)\n  __webpack_require__(211)\n}\nvar normalizeComponent = __webpack_require__(0)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-777cb022\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_carrousel_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_777cb022_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_carrousel_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 192:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_awesome_swiper__ = __webpack_require__(213);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_awesome_swiper___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue_awesome_swiper__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n // slider\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'carrousel',\n  components: {\n    swiper: __WEBPACK_IMPORTED_MODULE_0_vue_awesome_swiper__[\"swiper\"],\n    swiperSlide: __WEBPACK_IMPORTED_MODULE_0_vue_awesome_swiper__[\"swiperSlide\"]\n  },\n  data: function data() {\n    return {\n      swiperOption: {\n        spaceBetween: 30,\n        centeredSlides: true,\n        autoplay: {\n          delay: 10000,\n          disableOnInteraction: false\n        },\n        pagination: {\n          el: '.swiper-pagination',\n          clickable: true\n        },\n        navigation: {\n          nextEl: '.swiper-button-next',\n          prevEl: '.swiper-button-prev'\n        }\n      }\n    };\n  }\n});\n\n/***/ }),\n\n/***/ 209:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(210);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(179)(\"4a6734b2\", content, true, {});\n\n/***/ }),\n\n/***/ 210:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(178)(false);\n// imports\n\n\n// module\nexports.push([module.i, \".swiper-pagination-bullet-active{background:#efefef!important}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 211:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(212);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(179)(\"90097570\", content, true, {});\n\n/***/ }),\n\n/***/ 212:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(178)(false);\n// imports\n\n\n// module\nexports.push([module.i, \".slide[data-v-777cb022]{position:absolute;top:7%;width:100%;z-index:-1}.slide img[data-v-777cb022]{width:100%}.swiper-button-next[data-v-777cb022],.swiper-button-prev[data-v-777cb022]{top:80%;outline:none;z-index:1!important}@media screen and (max-width:960px){.slide[data-v-777cb022],.slider[data-v-777cb022]{position:relative}.swiper-button-next[data-v-777cb022],.swiper-button-prev[data-v-777cb022]{top:50%}}@media screen and (max-width:460px){.slide[data-v-777cb022],.swiper-button-next[data-v-777cb022],.swiper-button-prev[data-v-777cb022]{display:none}}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 213:\n/***/ (function(module, exports, __webpack_require__) {\n\n!function(e,t){ true?module.exports=t(__webpack_require__(214)):\"function\"==typeof define&&define.amd?define(\"VueAwesomeSwiper\",[\"swiper\"],t):\"object\"==typeof exports?exports.VueAwesomeSwiper=t(require(\"swiper/dist/js/swiper.js\")):e.VueAwesomeSwiper=t(e.Swiper)}(this,function(e){return function(e){function t(i){if(n[i])return n[i].exports;var s=n[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,t),s.l=!0,s.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t(t.s=4)}([function(t,n){t.exports=e},function(e,t){e.exports=function(e,t,n,i,s,r){var o,a=e=e||{},u=typeof e.default;\"object\"!==u&&\"function\"!==u||(o=e,a=e.default);var p=\"function\"==typeof a?a.options:a;t&&(p.render=t.render,p.staticRenderFns=t.staticRenderFns,p._compiled=!0),n&&(p.functional=!0),s&&(p._scopeId=s);var l;if(r?(l=function(e){e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,e||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},p._ssrRegister=l):i&&(l=i),l){var c=p.functional,d=c?p.render:p.beforeCreate;c?(p._injectStyles=l,p.render=function(e,t){return l.call(t),d(e,t)}):p.beforeCreate=d?[].concat(d,l):[l]}return{esModule:o,exports:a,options:p}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(5),s=n.n(i),r=n(8),o=n(1),a=o(s.a,r.a,!1,null,null,null);t.default=a.exports},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(6),s=n.n(i),r=n(7),o=n(1),a=o(s.a,r.a,!1,null,null,null);t.default=a.exports},function(e,t,n){\"use strict\";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.install=t.swiperSlide=t.swiper=t.Swiper=void 0;var s=n(0),r=i(s),o=n(2),a=i(o),u=n(3),p=i(u),l=window.Swiper||r.default,c=p.default,d=a.default,f=function(e,t){t&&(p.default.props.globalOptions.default=function(){return t}),e.component(p.default.name,p.default),e.component(a.default.name,a.default)},h={Swiper:l,swiper:c,swiperSlide:d,install:f};t.default=h,t.Swiper=l,t.swiper=c,t.swiperSlide=d,t.install=f},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default={name:\"swiper-slide\",data:function(){return{slideClass:\"swiper-slide\"}},ready:function(){this.update()},mounted:function(){this.update(),this.$parent&&this.$parent.options&&this.$parent.options.slideClass&&(this.slideClass=this.$parent.options.slideClass)},updated:function(){this.update()},attached:function(){this.update()},methods:{update:function(){this.$parent&&this.$parent.swiper&&this.$parent.update()}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(0),s=function(e){return e&&e.__esModule?e:{default:e}}(i),r=window.Swiper||s.default;\"function\"!=typeof Object.assign&&Object.defineProperty(Object,\"assign\",{value:function(e,t){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(e),i=1;i<arguments.length;i++){var s=arguments[i];if(null!=s)for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(n[r]=s[r])}return n},writable:!0,configurable:!0});var o=[\"beforeDestroy\",\"slideChange\",\"slideChangeTransitionStart\",\"slideChangeTransitionEnd\",\"slideNextTransitionStart\",\"slideNextTransitionEnd\",\"slidePrevTransitionStart\",\"slidePrevTransitionEnd\",\"transitionStart\",\"transitionEnd\",\"touchStart\",\"touchMove\",\"touchMoveOpposite\",\"sliderMove\",\"touchEnd\",\"click\",\"tap\",\"doubleTap\",\"imagesReady\",\"progress\",\"reachBeginning\",\"reachEnd\",\"fromEdge\",\"setTranslate\",\"setTransition\",\"resize\"];t.default={name:\"swiper\",props:{options:{type:Object,default:function(){return{}}},globalOptions:{type:Object,required:!1,default:function(){return{}}}},data:function(){return{swiper:null,classes:{wrapperClass:\"swiper-wrapper\"}}},ready:function(){this.swiper||this.mountInstance()},mounted:function(){if(!this.swiper){var e=!1;for(var t in this.classes)this.classes.hasOwnProperty(t)&&this.options[t]&&(e=!0,this.classes[t]=this.options[t]);e?this.$nextTick(this.mountInstance):this.mountInstance()}},activated:function(){this.update()},updated:function(){this.update()},beforeDestroy:function(){this.$nextTick(function(){this.swiper&&(this.swiper.destroy&&this.swiper.destroy(),delete this.swiper)})},methods:{update:function(){this.swiper&&(this.swiper.update&&this.swiper.update(),this.swiper.navigation&&this.swiper.navigation.update(),this.swiper.pagination&&this.swiper.pagination.render(),this.swiper.pagination&&this.swiper.pagination.update())},mountInstance:function(){var e=Object.assign({},this.globalOptions,this.options);this.swiper=new r(this.$el,e),this.bindEvents(),this.$emit(\"ready\",this.swiper)},bindEvents:function(){var e=this,t=this;o.forEach(function(n){e.swiper.on(n,function(){t.$emit.apply(t,[n].concat(Array.prototype.slice.call(arguments))),t.$emit.apply(t,[n.replace(/([A-Z])/g,\"-$1\").toLowerCase()].concat(Array.prototype.slice.call(arguments)))})})}}}},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"div\",{staticClass:\"swiper-container\"},[e._t(\"parallax-bg\"),e._v(\" \"),n(\"div\",{class:e.classes.wrapperClass},[e._t(\"default\")],2),e._v(\" \"),e._t(\"pagination\"),e._v(\" \"),e._t(\"button-prev\"),e._v(\" \"),e._t(\"button-next\"),e._v(\" \"),e._t(\"scrollbar\")],2)},s=[],r={render:i,staticRenderFns:s};t.a=r},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement;return(e._self._c||t)(\"div\",{class:e.slideClass},[e._t(\"default\")],2)},s=[],r={render:i,staticRenderFns:s};t.a=r}])});\n\n/***/ }),\n\n/***/ 214:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Swiper 4.4.6\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: December 19, 2018\n */\n\n(function (global, factory) {\n   true ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Swiper = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * SSR Window 1.0.1\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: July 18, 2018\n   */\n  var doc = (typeof document === 'undefined') ? {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  } : document; // eslint-disable-line\n\n  var win = (typeof window === 'undefined') ? {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  } : window; // eslint-disable-line\n\n  /**\n   * Dom7 2.1.2\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * http://framework7.io/docs/dom.html\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   * The iDangero.us\n   * http://www.idangero.us/\n   *\n   * Licensed under MIT\n   *\n   * Released on: September 13, 2018\n   */\n\n  var Dom7 = function Dom7(arr) {\n    var self = this;\n    // Create array-like object\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  };\n\n  function $(selector, context) {\n    var arr = [];\n    var i = 0;\n    if (selector && !context) {\n      if (selector instanceof Dom7) {\n        return selector;\n      }\n    }\n    if (selector) {\n        // String\n      if (typeof selector === 'string') {\n        var els;\n        var tempParent;\n        var html = selector.trim();\n        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n          var toCreate = 'div';\n          if (html.indexOf('<li') === 0) { toCreate = 'ul'; }\n          if (html.indexOf('<tr') === 0) { toCreate = 'tbody'; }\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) { toCreate = 'tr'; }\n          if (html.indexOf('<tbody') === 0) { toCreate = 'table'; }\n          if (html.indexOf('<option') === 0) { toCreate = 'select'; }\n          tempParent = doc.createElement(toCreate);\n          tempParent.innerHTML = html;\n          for (i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n            // Pure ID selector\n            els = [doc.getElementById(selector.trim().split('#')[1])];\n          } else {\n            // Other selectors\n            els = (context || doc).querySelectorAll(selector.trim());\n          }\n          for (i = 0; i < els.length; i += 1) {\n            if (els[i]) { arr.push(els[i]); }\n          }\n        }\n      } else if (selector.nodeType || selector === win || selector === doc) {\n        // Node/element\n        arr.push(selector);\n      } else if (selector.length > 0 && selector[0].nodeType) {\n        // Array of elements or instance of Dom\n        for (i = 0; i < selector.length; i += 1) {\n          arr.push(selector[i]);\n        }\n      }\n    }\n    return new Dom7(arr);\n  }\n\n  $.fn = Dom7.prototype;\n  $.Class = Dom7;\n  $.Dom7 = Dom7;\n\n  function unique(arr) {\n    var uniqueArray = [];\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) { uniqueArray.push(arr[i]); }\n    }\n    return uniqueArray;\n  }\n\n  // Classes and attributes\n  function addClass(className) {\n    if (typeof className === 'undefined') {\n      return this;\n    }\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.add(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function removeClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.remove(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function hasClass(className) {\n    if (!this[0]) { return false; }\n    return this[0].classList.contains(className);\n  }\n  function toggleClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.toggle(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function attr(attrs, value) {\n    var arguments$1 = arguments;\n\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) { return this[0].getAttribute(attrs); }\n      return undefined;\n    }\n\n    // Set attrs\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments$1.length === 2) {\n        // String\n        this[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (var attrName in attrs) {\n          this[i][attrName] = attrs[attrName];\n          this[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function removeAttr(attr) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].removeAttribute(attr);\n    }\n    return this;\n  }\n  function data(key, value) {\n    var el;\n    if (typeof value === 'undefined') {\n      el = this[0];\n      // Get value\n      if (el) {\n        if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n          return el.dom7ElementDataStorage[key];\n        }\n\n        var dataKey = el.getAttribute((\"data-\" + key));\n        if (dataKey) {\n          return dataKey;\n        }\n        return undefined;\n      }\n      return undefined;\n    }\n\n    // Set value\n    for (var i = 0; i < this.length; i += 1) {\n      el = this[i];\n      if (!el.dom7ElementDataStorage) { el.dom7ElementDataStorage = {}; }\n      el.dom7ElementDataStorage[key] = value;\n    }\n    return this;\n  }\n  // Transforms\n  // eslint-disable-next-line\n  function transform(transform) {\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransform = transform;\n      elStyle.transform = transform;\n    }\n    return this;\n  }\n  function transition(duration) {\n    if (typeof duration !== 'string') {\n      duration = duration + \"ms\"; // eslint-disable-line\n    }\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransitionDuration = duration;\n      elStyle.transitionDuration = duration;\n    }\n    return this;\n  }\n  // Events\n  function on() {\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n      if (!target) { return; }\n      var eventData = e.target.dom7EventData || [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      if ($(target).is(targetSelector)) { listener.apply(target, eventData); }\n      else {\n        var parents = $(target).parents(); // eslint-disable-line\n        for (var k = 0; k < parents.length; k += 1) {\n          if ($(parents[k]).is(targetSelector)) { listener.apply(parents[k], eventData); }\n        }\n      }\n    }\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      listener.apply(this, eventData);\n    }\n    var events = eventType.split(' ');\n    var j;\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this[i];\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n          if (!el.dom7Listeners) { el.dom7Listeners = {}; }\n          if (!el.dom7Listeners[event]) { el.dom7Listeners[event] = []; }\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent,\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var event$1 = events[j];\n          if (!el.dom7LiveListeners) { el.dom7LiveListeners = {}; }\n          if (!el.dom7LiveListeners[event$1]) { el.dom7LiveListeners[event$1] = []; }\n          el.dom7LiveListeners[event$1].push({\n            listener: listener,\n            proxyListener: handleLiveEvent,\n          });\n          el.addEventListener(event$1, handleLiveEvent, capture);\n        }\n      }\n    }\n    return this;\n  }\n  function off() {\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    var events = eventType.split(' ');\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var handlers = (void 0);\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n    return this;\n  }\n  function trigger() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var evt = (void 0);\n        try {\n          evt = new win.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true,\n          });\n        } catch (e) {\n          evt = doc.createEvent('Event');\n          evt.initEvent(event, true, true);\n          evt.detail = eventData;\n        }\n        // eslint-disable-next-line\n        el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n    return this;\n  }\n  function transitionEnd(callback) {\n    var events = ['webkitTransitionEnd', 'transitionend'];\n    var dom = this;\n    var i;\n    function fireCallBack(e) {\n      /* jshint validthis:true */\n      if (e.target !== this) { return; }\n      callback.call(this, e);\n      for (i = 0; i < events.length; i += 1) {\n        dom.off(events[i], fireCallBack);\n      }\n    }\n    if (callback) {\n      for (i = 0; i < events.length; i += 1) {\n        dom.on(events[i], fireCallBack);\n      }\n    }\n    return this;\n  }\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n      }\n      return this[0].offsetWidth;\n    }\n    return null;\n  }\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n      }\n      return this[0].offsetHeight;\n    }\n    return null;\n  }\n  function offset() {\n    if (this.length > 0) {\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = doc.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === win ? win.scrollY : el.scrollTop;\n      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n      return {\n        top: (box.top + scrollTop) - clientTop,\n        left: (box.left + scrollLeft) - clientLeft,\n      };\n    }\n\n    return null;\n  }\n  function styles() {\n    if (this[0]) { return win.getComputedStyle(this[0], null); }\n    return {};\n  }\n  function css(props, value) {\n    var i;\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        if (this[0]) { return win.getComputedStyle(this[0], null).getPropertyValue(props); }\n      } else {\n        for (i = 0; i < this.length; i += 1) {\n          // eslint-disable-next-line\n          for (var prop in props) {\n            this[i].style[prop] = props[prop];\n          }\n        }\n        return this;\n      }\n    }\n    if (arguments.length === 2 && typeof props === 'string') {\n      for (i = 0; i < this.length; i += 1) {\n        this[i].style[props] = value;\n      }\n      return this;\n    }\n    return this;\n  }\n  // Iterate over the collection passing elements to `callback`\n  function each(callback) {\n    // Don't bother continuing without a callback\n    if (!callback) { return this; }\n    // Iterate over the current collection\n    for (var i = 0; i < this.length; i += 1) {\n      // If the callback returns false\n      if (callback.call(this[i], i, this[i]) === false) {\n        // End the loop early\n        return this;\n      }\n    }\n    // Return `this` to allow chained DOM operations\n    return this;\n  }\n  // eslint-disable-next-line\n  function html(html) {\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : undefined;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].innerHTML = html;\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function text(text) {\n    if (typeof text === 'undefined') {\n      if (this[0]) {\n        return this[0].textContent.trim();\n      }\n      return null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].textContent = text;\n    }\n    return this;\n  }\n  function is(selector) {\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined') { return false; }\n    if (typeof selector === 'string') {\n      if (el.matches) { return el.matches(selector); }\n      else if (el.webkitMatchesSelector) { return el.webkitMatchesSelector(selector); }\n      else if (el.msMatchesSelector) { return el.msMatchesSelector(selector); }\n\n      compareWith = $(selector);\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    } else if (selector === doc) { return el === doc; }\n    else if (selector === win) { return el === win; }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    }\n    return false;\n  }\n  function index() {\n    var child = this[0];\n    var i;\n    if (child) {\n      i = 0;\n      // eslint-disable-next-line\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) { i += 1; }\n      }\n      return i;\n    }\n    return undefined;\n  }\n  // eslint-disable-next-line\n  function eq(index) {\n    if (typeof index === 'undefined') { return this; }\n    var length = this.length;\n    var returnIndex;\n    if (index > length - 1) {\n      return new Dom7([]);\n    }\n    if (index < 0) {\n      returnIndex = length + index;\n      if (returnIndex < 0) { return new Dom7([]); }\n      return new Dom7([this[returnIndex]]);\n    }\n    return new Dom7([this[index]]);\n  }\n  function append() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var newChild;\n\n    for (var k = 0; k < args.length; k += 1) {\n      newChild = args[k];\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = doc.createElement('div');\n          tempDiv.innerHTML = newChild;\n          while (tempDiv.firstChild) {\n            this[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this[i].appendChild(newChild[j]);\n          }\n        } else {\n          this[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n  function prepend(newChild) {\n    var i;\n    var j;\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = doc.createElement('div');\n        tempDiv.innerHTML = newChild;\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n        }\n      } else {\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\n      }\n    }\n    return this;\n  }\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return new Dom7([this[0].nextElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (this[0].nextElementSibling) { return new Dom7([this[0].nextElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.nextElementSibling) {\n      var next = el.nextElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(next).is(selector)) { nextEls.push(next); }\n      } else { nextEls.push(next); }\n      el = next;\n    }\n    return new Dom7(nextEls);\n  }\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return new Dom7([el.previousElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (el.previousElementSibling) { return new Dom7([el.previousElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.previousElementSibling) {\n      var prev = el.previousElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(prev).is(selector)) { prevEls.push(prev); }\n      } else { prevEls.push(prev); }\n      el = prev;\n    }\n    return new Dom7(prevEls);\n  }\n  function parent(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode !== null) {\n        if (selector) {\n          if ($(this[i].parentNode).is(selector)) { parents.push(this[i].parentNode); }\n        } else {\n          parents.push(this[i].parentNode);\n        }\n      }\n    }\n    return $(unique(parents));\n  }\n  function parents(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var parent = this[i].parentNode; // eslint-disable-line\n      while (parent) {\n        if (selector) {\n          if ($(parent).is(selector)) { parents.push(parent); }\n        } else {\n          parents.push(parent);\n        }\n        parent = parent.parentNode;\n      }\n    }\n    return $(unique(parents));\n  }\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n    if (typeof selector === 'undefined') {\n      return new Dom7([]);\n    }\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n    return closest;\n  }\n  function find(selector) {\n    var foundElements = [];\n    for (var i = 0; i < this.length; i += 1) {\n      var found = this[i].querySelectorAll(selector);\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n    return new Dom7(foundElements);\n  }\n  function children(selector) {\n    var children = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this[i].childNodes;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector) {\n          if (childNodes[j].nodeType === 1) { children.push(childNodes[j]); }\n        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n    return new Dom7(unique(children));\n  }\n  function remove() {\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode) { this[i].parentNode.removeChild(this[i]); }\n    }\n    return this;\n  }\n  function add() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var dom = this;\n    var i;\n    var j;\n    for (i = 0; i < args.length; i += 1) {\n      var toAdd = $(args[i]);\n      for (j = 0; j < toAdd.length; j += 1) {\n        dom[dom.length] = toAdd[j];\n        dom.length += 1;\n      }\n    }\n    return dom;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    data: data,\n    transform: transform,\n    transition: transition,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    remove: remove,\n    add: add,\n    styles: styles,\n  };\n\n  Object.keys(Methods).forEach(function (methodName) {\n    $.fn[methodName] = Methods[methodName];\n  });\n\n  var Utils = {\n    deleteProps: function deleteProps(obj) {\n      var object = obj;\n      Object.keys(object).forEach(function (key) {\n        try {\n          object[key] = null;\n        } catch (e) {\n          // no getter for object\n        }\n        try {\n          delete object[key];\n        } catch (e) {\n          // something got wrong\n        }\n      });\n    },\n    nextTick: function nextTick(callback, delay) {\n      if ( delay === void 0 ) delay = 0;\n\n      return setTimeout(callback, delay);\n    },\n    now: function now() {\n      return Date.now();\n    },\n    getTranslate: function getTranslate(el, axis) {\n      if ( axis === void 0 ) axis = 'x';\n\n      var matrix;\n      var curTransform;\n      var transformMatrix;\n\n      var curStyle = win.getComputedStyle(el, null);\n\n      if (win.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');\n        }\n        // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m41; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[12]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[4]); }\n      }\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m42; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[13]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[5]); }\n      }\n      return curTransform || 0;\n    },\n    parseUrlQuery: function parseUrlQuery(url) {\n      var query = {};\n      var urlToParse = url || win.location.href;\n      var i;\n      var params;\n      var param;\n      var length;\n      if (typeof urlToParse === 'string' && urlToParse.length) {\n        urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n        params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });\n        length = params.length;\n\n        for (i = 0; i < length; i += 1) {\n          param = params[i].replace(/#\\S+/g, '').split('=');\n          query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n        }\n      }\n      return query;\n    },\n    isObject: function isObject(o) {\n      return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n    },\n    extend: function extend() {\n      var args = [], len$1 = arguments.length;\n      while ( len$1-- ) args[ len$1 ] = arguments[ len$1 ];\n\n      var to = Object(args[0]);\n      for (var i = 1; i < args.length; i += 1) {\n        var nextSource = args[i];\n        if (nextSource !== undefined && nextSource !== null) {\n          var keysArray = Object.keys(Object(nextSource));\n          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n            if (desc !== undefined && desc.enumerable) {\n              if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n      return to;\n    },\n  };\n\n  var Support = (function Support() {\n    var testDiv = doc.createElement('div');\n    return {\n      touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\n        return !!((win.navigator.maxTouchPoints > 0) || ('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\n      }()),\n\n      pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent || ('maxTouchPoints' in win.navigator)),\n      prefixedPointerEvents: !!win.navigator.msPointerEnabled,\n\n      transition: (function checkTransition() {\n        var style = testDiv.style;\n        return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n      }()),\n      transforms3d: (win.Modernizr && win.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n        var style = testDiv.style;\n        return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n      }()),\n\n      flexbox: (function checkFlexbox() {\n        var style = testDiv.style;\n        var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n        for (var i = 0; i < styles.length; i += 1) {\n          if (styles[i] in style) { return true; }\n        }\n        return false;\n      }()),\n\n      observer: (function checkObserver() {\n        return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\n      }()),\n\n      passiveListener: (function checkPassiveListener() {\n        var supportsPassive = false;\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            },\n          });\n          win.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {\n          // No support\n        }\n        return supportsPassive;\n      }()),\n\n      gestures: (function checkGestures() {\n        return 'ongesturestart' in win;\n      }()),\n    };\n  }());\n\n  var SwiperClass = function SwiperClass(params) {\n    if ( params === void 0 ) params = {};\n\n    var self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach(function (eventName) {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  };\n\n  var staticAccessors = { components: { configurable: true } };\n\n  SwiperClass.prototype.on = function on (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    var method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(function (event) {\n      if (!self.eventsListeners[event]) { self.eventsListeners[event] = []; }\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.once = function once (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    function onceHandler() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  };\n\n  SwiperClass.prototype.off = function off (events, handler) {\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    events.split(' ').forEach(function (event) {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach(function (eventHandler, index) {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.emit = function emit () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    var events;\n    var data;\n    var context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    var eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(function (event) {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        var handlers = [];\n        self.eventsListeners[event].forEach(function (eventHandler) {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach(function (eventHandler) {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.useModulesParams = function useModulesParams (instanceParams) {\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  };\n\n  SwiperClass.prototype.useModules = function useModules (modulesParams) {\n      if ( modulesParams === void 0 ) modulesParams = {};\n\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      var moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach(function (modulePropName) {\n          var moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach(function (moduleEventName) {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  };\n\n  staticAccessors.components.set = function (components) {\n    var Class = this;\n    if (!Class.use) { return; }\n    Class.use(components);\n  };\n\n  SwiperClass.installModule = function installModule (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (!Class.prototype.modules) { Class.prototype.modules = {}; }\n    var name = module.name || (((Object.keys(Class.prototype.modules).length) + \"_\" + (Utils.now())));\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach(function (key) {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach(function (key) {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  };\n\n  SwiperClass.use = function use (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(function (m) { return Class.installModule(m); });\n      return Class;\n    }\n    return Class.installModule.apply(Class, [ module ].concat( params ));\n  };\n\n  Object.defineProperties( SwiperClass, staticAccessors );\n\n  function updateSize () {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n    if (typeof swiper.params.width !== 'undefined') {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n    if (typeof swiper.params.height !== 'undefined') {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n    if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n      return;\n    }\n\n    // Subtract paddings\n    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n    Utils.extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height,\n    });\n  }\n\n  function updateSlides () {\n    var swiper = this;\n    var params = swiper.params;\n\n    var $wrapperEl = swiper.$wrapperEl;\n    var swiperSize = swiper.size;\n    var rtl = swiper.rtlTranslate;\n    var wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children((\".\" + (swiper.params.slideClass)));\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.snapGrid.length;\n\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween;\n\n    // reset margins\n    if (rtl) { slides.css({ marginLeft: '', marginTop: '' }); }\n    else { slides.css({ marginRight: '', marginBottom: '' }); }\n\n    var slidesNumberEvenToRows;\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    }\n\n    // Calc slides\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = (void 0);\n        var column = (void 0);\n        var row = (void 0);\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n          newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n          slide\n            .css({\n              '-webkit-box-ordinal-group': newSlideOrderIndex,\n              '-moz-box-ordinal-group': newSlideOrderIndex,\n              '-ms-flex-order': newSlideOrderIndex,\n              '-webkit-order': newSlideOrderIndex,\n              order: newSlideOrderIndex,\n            });\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - (row * slidesPerRow);\n        }\n        slide\n          .css(\n            (\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left')),\n            (row !== 0 && params.spaceBetween) && (((params.spaceBetween) + \"px\"))\n          )\n          .attr('data-swiper-column', column)\n          .attr('data-swiper-row', row);\n      }\n      if (slide.css('display') === 'none') { continue; } // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = win.getComputedStyle(slide[0], null);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n        if (params.roundLengths) {\n          slideSize = swiper.isHorizontal()\n            ? slide.outerWidth(true)\n            : slide.outerHeight(true);\n        } else {\n          // eslint-disable-next-line\n          if (swiper.isHorizontal()) {\n            var width = parseFloat(slideStyles.getPropertyValue('width'));\n            var paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n            var paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n            var marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n            var marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n            var boxSizing = slideStyles.getPropertyValue('box-sizing');\n            if (boxSizing && boxSizing === 'border-box') {\n              slideSize = width + marginLeft + marginRight;\n            } else {\n              slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n            }\n          } else {\n            var height = parseFloat(slideStyles.getPropertyValue('height'));\n            var paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n            var paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n            var marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n            var marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n            var boxSizing$1 = slideStyles.getPropertyValue('box-sizing');\n            if (boxSizing$1 && boxSizing$1 === 'border-box') {\n              slideSize = height + marginTop + marginBottom;\n            } else {\n              slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n            }\n          }\n        }\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n      } else {\n        slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n\n        if (slides[i]) {\n          if (swiper.isHorizontal()) {\n            slides[i].style.width = slideSize + \"px\";\n          } else {\n            slides[i].style.height = slideSize + \"px\";\n          }\n        }\n      }\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n      slidesSizesGrid.push(slideSize);\n\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (i === 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (Math.abs(slidePosition) < 1 / 1000) { slidePosition = 0; }\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n\n      prevSlideSize = slideSize;\n\n      index += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (\n      rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") });\n    }\n    if (!Support.flexbox || params.setWrapperSize) {\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n    }\n\n    if (params.slidesPerColumn > 1) {\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n        for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {\n          var slidesGridItem = snapGrid[i$1];\n          if (params.roundLengths) { slidesGridItem = Math.floor(slidesGridItem); }\n          if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) { newSlidesGrid.push(slidesGridItem); }\n        }\n        snapGrid = newSlidesGrid;\n      }\n    }\n\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n      for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {\n        var slidesGridItem$1 = snapGrid[i$2];\n        if (params.roundLengths) { slidesGridItem$1 = Math.floor(slidesGridItem$1); }\n        if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem$1);\n        }\n      }\n      snapGrid = newSlidesGrid;\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n    if (snapGrid.length === 0) { snapGrid = [0]; }\n\n    if (params.spaceBetween !== 0) {\n      if (swiper.isHorizontal()) {\n        if (rtl) { slides.css({ marginLeft: (spaceBetween + \"px\") }); }\n        else { slides.css({ marginRight: (spaceBetween + \"px\") }); }\n      } else { slides.css({ marginBottom: (spaceBetween + \"px\") }); }\n    }\n\n    if (params.centerInsufficientSlides) {\n      var allSlidesSize = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize -= params.spaceBetween;\n      if (allSlidesSize < swiperSize) {\n        var allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n        snapGrid.forEach(function (snap, snapIndex) {\n          snapGrid[snapIndex] = snap - allSlidesOffset;\n        });\n        slidesGrid.forEach(function (snap, snapIndex) {\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\n        });\n      }\n    }\n\n    Utils.extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid,\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) { swiper.checkOverflow(); }\n      swiper.emit('snapGridLengthChange');\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight (speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        var index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) { break; }\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    } else {\n      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    }\n\n    // Find new height from highest slide in view\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    }\n\n    // Update Height\n    if (newHeight) { swiper.$wrapperEl.css('height', (newHeight + \"px\")); }\n  }\n\n  function updateSlidesOffset () {\n    var swiper = this;\n    var slides = swiper.slides;\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var slides = swiper.slides;\n    var rtl = swiper.rtlTranslate;\n\n    if (slides.length === 0) { return; }\n    if (typeof slides[0].swiperSlideOffset === 'undefined') { swiper.updateSlidesOffset(); }\n\n    var offsetCenter = -translate;\n    if (rtl) { offsetCenter = translate; }\n\n    // Visible Slides\n    slides.removeClass(params.slideVisibleClass);\n\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress = (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n      if (params.watchSlidesVisibility) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                  || (slideAfter > 0 && slideAfter <= swiper.size)\n                  || (slideBefore <= 0 && slideAfter >= swiper.size);\n        if (isVisible) {\n          swiper.visibleSlides.push(slide);\n          swiper.visibleSlidesIndexes.push(i);\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n    swiper.visibleSlides = $(swiper.visibleSlides);\n  }\n\n  function updateProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress;\n    var isBeginning = swiper.isBeginning;\n    var isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / (translatesDiff);\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n    Utils.extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd,\n    });\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) { swiper.updateSlidesProgress(translate); }\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses () {\n    var swiper = this;\n\n    var slides = swiper.slides;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n    var realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n\n    slides.removeClass(((params.slideActiveClass) + \" \" + (params.slideNextClass) + \" \" + (params.slidePrevClass) + \" \" + (params.slideDuplicateActiveClass) + \" \" + (params.slideDuplicateNextClass) + \" \" + (params.slideDuplicatePrevClass)));\n\n    var activeSlide;\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\"));\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    }\n\n    // Active classes\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      }\n    }\n    // Next Slide\n    var nextSlide = activeSlide.nextAll((\".\" + (params.slideClass))).eq(0).addClass(params.slideNextClass);\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    }\n    // Prev Slide\n    var prevSlide = activeSlide.prevAll((\".\" + (params.slideClass))).eq(0).addClass(params.slidePrevClass);\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      }\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      }\n    }\n  }\n\n  function updateActiveIndex (newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var params = swiper.params;\n    var previousIndex = swiper.activeIndex;\n    var previousRealIndex = swiper.realIndex;\n    var previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      }\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') { activeIndex = 0; }\n      }\n    }\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n      return;\n    }\n\n    // Get real index\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n    Utils.extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex,\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n\n  function updateClickedSlide (e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest((\".\" + (params.slideClass)))[0];\n    var slideFound = false;\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) { slideFound = true; }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = $(slide).index();\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide,\n  };\n\n  function getTranslate (axis) {\n    if ( axis === void 0 ) axis = this.isHorizontal() ? 'x' : 'y';\n\n    var swiper = this;\n\n    var params = swiper.params;\n    var rtl = swiper.rtlTranslate;\n    var translate = swiper.translate;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n    if (rtl) { currentTranslate = -currentTranslate; }\n\n    return currentTranslate || 0;\n  }\n\n  function setTranslate (translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (!params.virtualTranslate) {\n      if (Support.transforms3d) { $wrapperEl.transform((\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\")); }\n      else { $wrapperEl.transform((\"translate(\" + x + \"px, \" + y + \"px)\")); }\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n\n    // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate () {\n    return (-this.snapGrid[0]);\n  }\n\n  function maxTranslate () {\n    return (-this.snapGrid[this.snapGrid.length - 1]);\n  }\n\n  var translate = {\n    getTranslate: getTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n  };\n\n  function setTransition (duration, byController) {\n    var swiper = this;\n\n    swiper.$wrapperEl.transition(duration);\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var params = swiper.params;\n    var previousIndex = swiper.previousIndex;\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n      swiper.emit('slideChangeTransitionStart');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd$1 (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var previousIndex = swiper.previousIndex;\n    swiper.animating = false;\n    swiper.setTransition(0);\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n      swiper.emit('slideChangeTransitionEnd');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition$1 = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd$1,\n  };\n\n  function slideTo (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) { slideIndex = 0; }\n\n    var params = swiper.params;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var previousIndex = swiper.previousIndex;\n    var activeIndex = swiper.activeIndex;\n    var rtl = swiper.rtlTranslate;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex];\n\n    // Update progress\n    swiper.updateProgress(translate);\n\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n          slideIndex = i;\n        }\n      }\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) { return false; }\n      }\n    }\n\n    var direction;\n    if (slideIndex > activeIndex) { direction = 'next'; }\n    else if (slideIndex < activeIndex) { direction = 'prev'; }\n    else { direction = 'reset'; }\n\n\n    // Update Index\n    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n      swiper.updateActiveIndex(slideIndex);\n      // Update Height\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      swiper.updateSlidesClasses();\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n      return false;\n    }\n\n    if (speed === 0 || !Support.transition) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var newIndex = index;\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n    }\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var rtlTranslate = swiper.rtlTranslate;\n\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n      if (val < 0) { return -Math.floor(Math.abs(val)); }\n      return Math.floor(val);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) { return normalize(val); });\n    var normalizedSlidesGrid = slidesGrid.map(function (val) { return normalize(val); });\n\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    var prevIndex;\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) { prevIndex = swiper.activeIndex - 1; }\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n    if (snapIndex < swiper.snapGrid.length - 1) {\n      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n        index = swiper.params.slidesPerGroup;\n      }\n    }\n\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    if (params.loop) {\n      if (swiper.animating) { return; }\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      if (params.centeredSlides) {\n        if (\n          (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n          || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n        ) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl\n            .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n            .eq(0)\n            .index();\n\n          Utils.nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n          .eq(0)\n          .index();\n\n        Utils.nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide,\n  };\n\n  function loopCreate () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    // Remove duplicated slides\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n\n    var slides = $wrapperEl.children((\".\" + (params.slideClass)));\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(doc.createElement('div')).addClass(((params.slideClass) + \" \" + (params.slideBlankClass)));\n          $wrapperEl.append(blankNode);\n        }\n        slides = $wrapperEl.children((\".\" + (params.slideClass)));\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) { params.loopedSlides = slides.length; }\n\n    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n    swiper.loopedSlides += params.loopAdditionalSlides;\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (index, el) {\n      var slide = $(el);\n      if (index < swiper.loopedSlides) { appendSlides.push(el); }\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) { prependSlides.push(el); }\n      slide.attr('data-swiper-slide-index', index);\n    });\n    for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {\n      $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n    for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix () {\n    var swiper = this;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var slides = swiper.slides;\n    var loopedSlides = swiper.loopedSlides;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var allowSlideNext = swiper.allowSlideNext;\n    var snapGrid = swiper.snapGrid;\n    var rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate();\n\n\n    // Fix For Negative Oversliding\n    if (activeIndex < loopedSlides) {\n      newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n      var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged$1 && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n  }\n\n  function loopDestroy () {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var slides = swiper.slides;\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \",.\" + (params.slideClass) + \".\" + (params.slideBlankClass))).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy,\n  };\n\n  function setGrabCursor (moving) {\n    var swiper = this;\n    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor () {\n    var swiper = this;\n    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor,\n  };\n\n  function appendSlide (slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.append(slides[i]); }\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide (slides) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    var newActiveIndex = activeIndex + 1;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.prepend(slides[i]); }\n      }\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide (index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var baseLength = swiper.slides.length;\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n    var slidesBuffer = [];\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (slides[i$1]) { $wrapperEl.append(slides[i$1]); }\n      }\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {\n      $wrapperEl.append(slidesBuffer[i$2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide (slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n        if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n      if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides () {\n    var swiper = this;\n\n    var slidesIndexes = [];\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides,\n  };\n\n  var Device = (function Device() {\n    var ua = win.navigator.userAgent;\n\n    var device = {\n      ios: false,\n      android: false,\n      androidChrome: false,\n      desktop: false,\n      windows: false,\n      iphone: false,\n      ipod: false,\n      ipad: false,\n      cordova: win.cordova || win.phonegap,\n      phonegap: win.cordova || win.phonegap,\n    };\n\n    var windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n    // Windows\n    if (windows) {\n      device.os = 'windows';\n      device.osVersion = windows[2];\n      device.windows = true;\n    }\n    // Android\n    if (android && !windows) {\n      device.os = 'android';\n      device.osVersion = android[2];\n      device.android = true;\n      device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n    }\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n      device.osVersion = iphone[2].replace(/_/g, '.');\n      device.iphone = true;\n    }\n    if (ipad) {\n      device.osVersion = ipad[2].replace(/_/g, '.');\n      device.ipad = true;\n    }\n    if (ipod) {\n      device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n      device.iphone = true;\n    }\n    // iOS 8+ changed UA\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n      if (device.osVersion.split('.')[0] === '10') {\n        device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n      }\n    }\n\n    // Desktop\n    device.desktop = !(device.os || device.android || device.webView);\n\n    // Webview\n    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n    // Minimal UI\n    if (device.os && device.os === 'ios') {\n      var osVersionArr = device.osVersion.split('.');\n      var metaViewport = doc.querySelector('meta[name=\"viewport\"]');\n      device.minimalUi = !device.webView\n        && (ipod || iphone)\n        && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n        && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n    }\n\n    // Pixel Ratio\n    device.pixelRatio = win.devicePixelRatio || 1;\n\n    // Export object\n    return device;\n  }());\n\n  function onTouchStart (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) { return; }\n    if (!data.isTouchEvent && 'button' in e && e.button > 0) { return; }\n    if (data.isTouched && data.isMoved) { return; }\n    if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : (\".\" + (params.noSwipingClass)))[0]) {\n      swiper.allowClick = true;\n      return;\n    }\n    if (params.swipeHandler) {\n      if (!$(e).closest(params.swipeHandler)[0]) { return; }\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY;\n\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n    if (\n      edgeSwipeDetection\n      && ((startX <= edgeSwipeThreshold)\n      || (startX >= win.screen.width - edgeSwipeThreshold))\n    ) {\n      return;\n    }\n\n    Utils.extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined,\n    });\n\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = Utils.now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) { data.allowThresholdMove = false; }\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n      if ($(e.target).is(data.formElements)) { preventDefault = false; }\n      if (\n        doc.activeElement\n        && $(doc.activeElement).is(data.formElements)\n        && doc.activeElement !== e.target\n      ) {\n        doc.activeElement.blur();\n      }\n\n      var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n      if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n        e.preventDefault();\n      }\n    }\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      return;\n    }\n    if (data.isTouchEvent && e.type === 'mousemove') { return; }\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n      if (data.isTouched) {\n        Utils.extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY,\n        });\n        data.touchStartTime = Utils.now();\n      }\n      return;\n    }\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (\n          (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n          || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n        ) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (\n        (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n        || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n      ) {\n        return;\n      }\n    }\n    if (data.isTouchEvent && doc.activeElement) {\n      if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n    if (e.targetTouches && e.targetTouches.length > 1) { return; }\n\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt((Math.pow( diffX, 2 )) + (Math.pow( diffY, 2 ))) < swiper.params.threshold) { return; }\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n      if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if ((diffX * diffX) + (diffY * diffY) >= 25) {\n          touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n        }\n      }\n    }\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n    if (!data.startMoving) {\n      return;\n    }\n    swiper.allowClick = false;\n    e.preventDefault();\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n      data.allowMomentumBounce = false;\n      // Grab Cursor\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n      swiper.emit('sliderFirstMove', e);\n    }\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n\n    diff *= params.touchRatio;\n    if (rtl) { diff = -diff; }\n\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n    if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow( (-swiper.minTranslate() + data.startTranslate + diff), resistanceRatio )); }\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow( (swiper.maxTranslate() - data.startTranslate - diff), resistanceRatio )); }\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    }\n\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n\n    // Threshold\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger) { return; }\n\n    // Update active index in free mode\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime,\n        });\n      }\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: Utils.now(),\n      });\n    }\n    // Update progress\n    swiper.updateProgress(data.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var $wrapperEl = swiper.$wrapperEl;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n    data.allowTouchCallbacks = false;\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    // Return Grab Cursor\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    }\n\n    // Time diff\n    var touchEndTime = Utils.now();\n    var timeDiff = touchEndTime - data.touchStartTime;\n\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap', e);\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        data.clickTimeout = Utils.nextTick(function () {\n          if (!swiper || swiper.destroyed) { return; }\n          swiper.emit('click', e);\n        }, 300);\n      }\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        swiper.emit('doubleTap', e);\n      }\n    }\n\n    data.lastClickTime = Utils.now();\n    Utils.nextTick(function () {\n      if (!swiper.destroyed) { swiper.allowClick = true; }\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n\n    var currentPos;\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          }\n          // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n          if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n\n        var newPosition = swiper.translate + momentumDistance;\n        if (rtl) { newPosition = -newPosition; }\n\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n          newPosition = -newPosition;\n        }\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        }\n        // Fix duration\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) { return; }\n            swiper.emit('momentumBounce');\n\n            swiper.setTransition(params.speed);\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      return;\n    }\n\n    // Find current slide\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n      if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    }\n\n    // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > (1 - params.longSwipesRatio)) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + params.slidesPerGroup);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize () {\n    var swiper = this;\n\n    var params = swiper.params;\n    var el = swiper.el;\n\n    if (el && el.offsetWidth === 0) { return; }\n\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Save locks\n    var allowSlideNext = swiper.allowSlideNext;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var snapGrid = swiper.snapGrid;\n\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n\n    swiper.updateSize();\n    swiper.updateSlides();\n\n    if (params.freeMode) {\n      var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      swiper.updateSlidesClasses();\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick (e) {\n    var swiper = this;\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) { e.preventDefault(); }\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function attachEvents() {\n    var swiper = this;\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    {\n      swiper.onTouchStart = onTouchStart.bind(swiper);\n      swiper.onTouchMove = onTouchMove.bind(swiper);\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);\n          target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.addEventListener('mousedown', swiper.onTouchStart, false);\n          doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.addEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  }\n\n  function detachEvents() {\n    var swiper = this;\n\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n          target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.removeEventListener('mousedown', swiper.onTouchStart, false);\n          doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.removeEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents,\n  };\n\n  function setBreakpoint () {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var initialized = swiper.initialized;\n    var loopedSlides = swiper.loopedSlides; if ( loopedSlides === void 0 ) loopedSlides = 0;\n    var params = swiper.params;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) { return; }\n\n    // Set breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints);\n\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n      var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n      if (breakpointOnlyParams) {\n        ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach(function (param) {\n          var paramValue = breakpointOnlyParams[param];\n          if (typeof paramValue === 'undefined') { return; }\n          if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n            breakpointOnlyParams[param] = 'auto';\n          } else if (param === 'slidesPerView') {\n            breakpointOnlyParams[param] = parseFloat(paramValue);\n          } else {\n            breakpointOnlyParams[param] = parseInt(paramValue, 10);\n          }\n        });\n      }\n\n      var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n      var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView);\n\n      Utils.extend(swiper.params, breakpointParams);\n\n      Utils.extend(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n      });\n\n      swiper.currentBreakpoint = breakpoint;\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n      }\n      swiper.emit('breakpoint', breakpointParams);\n    }\n  }\n\n  function getBreakpoint (breakpoints) {\n    var swiper = this;\n    // Get breakpoint for window width\n    if (!breakpoints) { return undefined; }\n    var breakpoint = false;\n    var points = [];\n    Object.keys(breakpoints).forEach(function (point) {\n      points.push(point);\n    });\n    points.sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });\n    for (var i = 0; i < points.length; i += 1) {\n      var point = points[i];\n      if (swiper.params.breakpointsInverse) {\n        if (point <= win.innerWidth) {\n          breakpoint = point;\n        }\n      } else if (point >= win.innerWidth && !breakpoint) {\n        breakpoint = point;\n      }\n    }\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };\n\n  var Browser = (function Browser() {\n    function isSafari() {\n      var ua = win.navigator.userAgent.toLowerCase();\n      return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n    }\n    return {\n      isIE: !!win.navigator.userAgent.match(/Trident/g) || !!win.navigator.userAgent.match(/MSIE/g),\n      isEdge: !!win.navigator.userAgent.match(/Edge/g),\n      isSafari: isSafari(),\n      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\n    };\n  }());\n\n  function addClasses () {\n    var swiper = this;\n    var classNames = swiper.classNames;\n    var params = swiper.params;\n    var rtl = swiper.rtl;\n    var $el = swiper.$el;\n    var suffixes = [];\n\n    suffixes.push(params.direction);\n\n    if (params.freeMode) {\n      suffixes.push('free-mode');\n    }\n    if (!Support.flexbox) {\n      suffixes.push('no-flexbox');\n    }\n    if (params.autoHeight) {\n      suffixes.push('autoheight');\n    }\n    if (rtl) {\n      suffixes.push('rtl');\n    }\n    if (params.slidesPerColumn > 1) {\n      suffixes.push('multirow');\n    }\n    if (Device.android) {\n      suffixes.push('android');\n    }\n    if (Device.ios) {\n      suffixes.push('ios');\n    }\n    // WP8 Touch Events Fix\n    if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      suffixes.push((\"wp8-\" + (params.direction)));\n    }\n\n    suffixes.forEach(function (suffix) {\n      classNames.push(params.containerModifierClass + suffix);\n    });\n\n    $el.addClass(classNames.join(' '));\n  }\n\n  function removeClasses () {\n    var swiper = this;\n    var $el = swiper.$el;\n    var classNames = swiper.classNames;\n\n    $el.removeClass(classNames.join(' '));\n  }\n\n  var classes = { addClasses: addClasses, removeClasses: removeClasses };\n\n  function loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var image;\n    function onReady() {\n      if (callback) { callback(); }\n    }\n    if (!imageEl.complete || !checkForComplete) {\n      if (src) {\n        image = new win.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n        if (sizes) {\n          image.sizes = sizes;\n        }\n        if (srcset) {\n          image.srcset = srcset;\n        }\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages () {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) { return; }\n      if (swiper.imagesLoaded !== undefined) { swiper.imagesLoaded += 1; }\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) { swiper.update(); }\n        swiper.emit('imagesReady');\n      }\n    }\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(\n        imageEl,\n        imageEl.currentSrc || imageEl.getAttribute('src'),\n        imageEl.srcset || imageEl.getAttribute('srcset'),\n        imageEl.sizes || imageEl.getAttribute('sizes'),\n        true,\n        onReady\n      );\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages,\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var wasLocked = swiper.isLocked;\n\n    swiper.isLocked = swiper.snapGrid.length === 1;\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked;\n\n    // events\n    if (wasLocked !== swiper.isLocked) { swiper.emit(swiper.isLocked ? 'lock' : 'unlock'); }\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = { checkOverflow: checkOverflow };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    //\n    preventInteractionOnTransition: false,\n\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n\n    // Autoheight\n    autoHeight: false,\n\n    // Set wrapper width\n    setWrapperSize: false,\n\n    // Virtual Translate\n    virtualTranslate: false,\n\n    // Effects\n    effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n    // Breakpoints\n    breakpoints: undefined,\n    breakpointsInverse: false,\n\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    centeredSlides: false,\n    slidesOffsetBefore: 0, // in px\n    slidesOffsetAfter: 0, // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n\n    // Round length\n    roundLengths: false,\n\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: true,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n\n    // Cursor\n    grabCursor: false,\n\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null, // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n\n    // Passive Listeners\n    passiveListeners: true,\n\n    // NS\n    containerModifierClass: 'swiper-container-', // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n\n    // Callbacks\n    runCallbacksOnInit: true,\n  };\n\n  var prototypes = {\n    update: update,\n    translate: translate,\n    transition: transition$1,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images,\n  };\n\n  var extendedDefaults = {};\n\n  var Swiper = /*@__PURE__*/(function (SwiperClass$$1) {\n    function Swiper() {\n      var assign;\n\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n      var el;\n      var params;\n      if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n        params = args[0];\n      } else {\n        (assign = args, el = assign[0], params = assign[1]);\n      }\n      if (!params) { params = {}; }\n\n      params = Utils.extend({}, params);\n      if (el && !params.el) { params.el = el; }\n\n      SwiperClass$$1.call(this, params);\n\n      Object.keys(prototypes).forEach(function (prototypeGroup) {\n        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n          if (!Swiper.prototype[protoMethod]) {\n            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n          }\n        });\n      });\n\n      // Swiper Instance\n      var swiper = this;\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n          if (typeof moduleParams !== 'object' || moduleParams === null) { return; }\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) { return; }\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = { enabled: true };\n          }\n          if (\n            typeof params[moduleParamName] === 'object'\n            && !('enabled' in params[moduleParamName])\n          ) {\n            params[moduleParamName].enabled = true;\n          }\n          if (!params[moduleParamName]) { params[moduleParamName] = { enabled: false }; }\n        }\n      });\n\n      // Extend defaults with modules params\n      var swiperParams = Utils.extend({}, defaults);\n      swiper.useModulesParams(swiperParams);\n\n      // Extend defaults with passed params\n      swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = Utils.extend({}, swiper.params);\n      swiper.passedParams = Utils.extend({}, params);\n\n      // Save Dom lib\n      swiper.$ = $;\n\n      // Find el\n      var $el = $(swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return undefined;\n      }\n\n      if ($el.length > 1) {\n        var swipers = [];\n        $el.each(function (index, containerEl) {\n          var newParams = Utils.extend({}, params, { el: containerEl });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      }\n\n      el.swiper = swiper;\n      $el.data('swiper', swiper);\n\n      // Find Wrapper\n      var $wrapperEl = $el.children((\".\" + (swiper.params.wrapperClass)));\n\n      // Extend Swiper\n      Utils.extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n\n        // Classes\n        classNames: [],\n\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // RTL\n        rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n\n        //\n        isBeginning: true,\n        isEnd: false,\n\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n\n        // Touch Events\n        touchEvents: (function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n          if (Support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          } else if (Support.prefixedPointerEvents) {\n            desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n          }\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2],\n          };\n          return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }()),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          formElements: 'input, select, option, textarea, button, video',\n          // Last click time\n          lastClickTime: Utils.now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined,\n        },\n\n        // Clicks\n        allowClick: true,\n\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0,\n        },\n\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0,\n\n      });\n\n      // Install Modules\n      swiper.useModules();\n\n      // Init\n      if (swiper.params.init) {\n        swiper.init();\n      }\n\n      // Return app instance\n      return swiper;\n    }\n\n    if ( SwiperClass$$1 ) Swiper.__proto__ = SwiperClass$$1;\n    Swiper.prototype = Object.create( SwiperClass$$1 && SwiperClass$$1.prototype );\n    Swiper.prototype.constructor = Swiper;\n\n    var staticAccessors = { extendedDefaults: { configurable: true },defaults: { configurable: true },Class: { configurable: true },$: { configurable: true } };\n\n    Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic () {\n      var swiper = this;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      var slidesGrid = swiper.slidesGrid;\n      var swiperSize = swiper.size;\n      var activeIndex = swiper.activeIndex;\n      var spv = 1;\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n        for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {\n          if (slides[i$1] && !breakLoop) {\n            slideSize += slides[i$1].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n      } else {\n        for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {\n          if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n      return spv;\n    };\n\n    Swiper.prototype.update = function update$$1 () {\n      var swiper = this;\n      if (!swiper || swiper.destroyed) { return; }\n      var snapGrid = swiper.snapGrid;\n      var params = swiper.params;\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      var translated;\n      if (swiper.params.freeMode) {\n        setTranslate();\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n        if (!translated) {\n          setTranslate();\n        }\n      }\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n      swiper.emit('update');\n    };\n\n    Swiper.prototype.init = function init () {\n      var swiper = this;\n      if (swiper.initialized) { return; }\n\n      swiper.emit('beforeInit');\n\n      // Set breakpoint\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Add Classes\n      swiper.addClasses();\n\n      // Create loop\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      }\n\n      // Update size\n      swiper.updateSize();\n\n      // Update slides\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      }\n\n      // Set Grab Cursor\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      }\n\n      // Slide To Initial Slide\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n      }\n\n      // Attach events\n      swiper.attachEvents();\n\n      // Init Flag\n      swiper.initialized = true;\n\n      // Emit\n      swiper.emit('init');\n    };\n\n    Swiper.prototype.destroy = function destroy (deleteInstance, cleanStyles) {\n      if ( deleteInstance === void 0 ) deleteInstance = true;\n      if ( cleanStyles === void 0 ) cleanStyles = true;\n\n      var swiper = this;\n      var params = swiper.params;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy');\n\n      // Init Flag\n      swiper.initialized = false;\n\n      // Detach events\n      swiper.detachEvents();\n\n      // Destroy loop\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      // Cleanup styles\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n        if (slides && slides.length) {\n          slides\n            .removeClass([\n              params.slideVisibleClass,\n              params.slideActiveClass,\n              params.slideNextClass,\n              params.slidePrevClass ].join(' '))\n            .removeAttr('style')\n            .removeAttr('data-swiper-slide-index')\n            .removeAttr('data-swiper-column')\n            .removeAttr('data-swiper-row');\n        }\n      }\n\n      swiper.emit('destroy');\n\n      // Detach emitter events\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        swiper.$el.data('swiper', null);\n        Utils.deleteProps(swiper);\n      }\n      swiper.destroyed = true;\n\n      return null;\n    };\n\n    Swiper.extendDefaults = function extendDefaults (newDefaults) {\n      Utils.extend(extendedDefaults, newDefaults);\n    };\n\n    staticAccessors.extendedDefaults.get = function () {\n      return extendedDefaults;\n    };\n\n    staticAccessors.defaults.get = function () {\n      return defaults;\n    };\n\n    staticAccessors.Class.get = function () {\n      return SwiperClass$$1;\n    };\n\n    staticAccessors.$.get = function () {\n      return $;\n    };\n\n    Object.defineProperties( Swiper, staticAccessors );\n\n    return Swiper;\n  }(SwiperClass));\n\n  var Device$1 = {\n    name: 'device',\n    proto: {\n      device: Device,\n    },\n    static: {\n      device: Device,\n    },\n  };\n\n  var Support$1 = {\n    name: 'support',\n    proto: {\n      support: Support,\n    },\n    static: {\n      support: Support,\n    },\n  };\n\n  var Browser$1 = {\n    name: 'browser',\n    proto: {\n      browser: Browser,\n    },\n    static: {\n      browser: Browser,\n    },\n  };\n\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        resize: {\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('orientationchange');\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        // Emit resize\n        win.addEventListener('resize', swiper.resize.resizeHandler);\n\n        // Emit orientationchange\n        win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        win.removeEventListener('resize', swiper.resize.resizeHandler);\n        win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n    },\n  };\n\n  var Observer = {\n    func: win.MutationObserver || win.WebkitMutationObserver,\n    attach: function attach(target, options) {\n      if ( options === void 0 ) options = {};\n\n      var swiper = this;\n\n      var ObserverFunc = Observer.func;\n      var observer = new ObserverFunc(function (mutations) {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          swiper.emit('observerUpdate', mutations[0]);\n          return;\n        }\n        var observerUpdate = function observerUpdate() {\n          swiper.emit('observerUpdate', mutations[0]);\n        };\n\n        if (win.requestAnimationFrame) {\n          win.requestAnimationFrame(observerUpdate);\n        } else {\n          win.setTimeout(observerUpdate, 0);\n        }\n      });\n\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n      });\n\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n      if (!Support.observer || !swiper.params.observer) { return; }\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      }\n      // Observe container\n      swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n      // Observe wrapper\n      swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    },\n  };\n\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n      observeSlideChildren: false,\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        observer: {\n          init: Observer.init.bind(swiper),\n          attach: Observer.attach.bind(swiper),\n          destroy: Observer.destroy.bind(swiper),\n          observers: [],\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.observer.init();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.observer.destroy();\n      },\n    },\n  };\n\n  var Virtual = {\n    update: function update(force) {\n      var swiper = this;\n      var ref = swiper.params;\n      var slidesPerView = ref.slidesPerView;\n      var slidesPerGroup = ref.slidesPerGroup;\n      var centeredSlides = ref.centeredSlides;\n      var ref$1 = swiper.params.virtual;\n      var addSlidesBefore = ref$1.addSlidesBefore;\n      var addSlidesAfter = ref$1.addSlidesAfter;\n      var ref$2 = swiper.virtual;\n      var previousFrom = ref$2.from;\n      var previousTo = ref$2.to;\n      var slides = ref$2.slides;\n      var previousSlidesGrid = ref$2.slidesGrid;\n      var renderSlide = ref$2.renderSlide;\n      var previousOffset = ref$2.offset;\n      swiper.updateActiveIndex();\n      var activeIndex = swiper.activeIndex || 0;\n\n      var offsetProp;\n      if (swiper.rtlTranslate) { offsetProp = 'right'; }\n      else { offsetProp = swiper.isHorizontal() ? 'left' : 'top'; }\n\n      var slidesAfter;\n      var slidesBefore;\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n        slidesBefore = slidesPerGroup + addSlidesAfter;\n      }\n      var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n      Utils.extend(swiper.virtual, {\n        from: from,\n        to: to,\n        offset: offset,\n        slidesGrid: swiper.slidesGrid,\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, (offset + \"px\"));\n        }\n        swiper.updateProgress();\n        return;\n      }\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset: offset,\n          from: from,\n          to: to,\n          slides: (function getSlides() {\n            var slidesToRender = [];\n            for (var i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n            return slidesToRender;\n          }()),\n        });\n        onRendered();\n        return;\n      }\n      var prependIndexes = [];\n      var appendIndexes = [];\n      if (force) {\n        swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass))).remove();\n      } else {\n        for (var i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\")).remove();\n          }\n        }\n      }\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (i$1 >= from && i$1 <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(i$1);\n          } else {\n            if (i$1 > previousTo) { appendIndexes.push(i$1); }\n            if (i$1 < previousFrom) { prependIndexes.push(i$1); }\n          }\n        }\n      }\n      appendIndexes.forEach(function (index) {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort(function (a, b) { return b - a; }).forEach(function (index) {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, (offset + \"px\"));\n      onRendered();\n    },\n    renderSlide: function renderSlide(slide, index) {\n      var swiper = this;\n      var params = swiper.params.virtual;\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n      var $slideEl = params.renderSlide\n        ? $(params.renderSlide.call(swiper, slide, index))\n        : $((\"<div class=\\\"\" + (swiper.params.slideClass) + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\"));\n      if (!$slideEl.attr('data-swiper-slide-index')) { $slideEl.attr('data-swiper-slide-index', index); }\n      if (params.cache) { swiper.virtual.cache[index] = $slideEl; }\n      return $slideEl;\n    },\n    appendSlide: function appendSlide(slide) {\n      var swiper = this;\n      swiper.virtual.slides.push(slide);\n      swiper.virtual.update(true);\n    },\n    prependSlide: function prependSlide(slide) {\n      var swiper = this;\n      swiper.virtual.slides.unshift(slide);\n      if (swiper.params.virtual.cache) {\n        var cache = swiper.virtual.cache;\n        var newCache = {};\n        Object.keys(cache).forEach(function (cachedIndex) {\n          newCache[cachedIndex + 1] = cache[cachedIndex];\n        });\n        swiper.virtual.cache = newCache;\n      }\n      swiper.virtual.update(true);\n      swiper.slideNext(0);\n    },\n  };\n\n  var Virtual$1 = {\n    name: 'virtual',\n    params: {\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n        addSlidesBefore: 0,\n        addSlidesAfter: 0,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        virtual: {\n          update: Virtual.update.bind(swiper),\n          appendSlide: Virtual.appendSlide.bind(swiper),\n          prependSlide: Virtual.prependSlide.bind(swiper),\n          renderSlide: Virtual.renderSlide.bind(swiper),\n          slides: swiper.params.virtual.slides,\n          cache: {},\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"virtual\"));\n        var overwriteParams = {\n          watchSlidesProgress: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n\n        if (!swiper.params.initialSlide) {\n          swiper.virtual.update();\n        }\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.virtual.update();\n      },\n    },\n  };\n\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var kc = e.keyCode || e.charCode;\n      // Directions locks\n      if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n        return false;\n      }\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n      if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n      if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n        var inView = false;\n        // Check that swiper should be inside of visible area of window\n        if (swiper.$el.parents((\".\" + (swiper.params.slideClass))).length > 0 && swiper.$el.parents((\".\" + (swiper.params.slideActiveClass))).length === 0) {\n          return undefined;\n        }\n        var windowWidth = win.innerWidth;\n        var windowHeight = win.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n        if (rtl) { swiperOffset.left -= swiper.$el[0].scrollLeft; }\n        var swiperCoord = [\n          [swiperOffset.left, swiperOffset.top],\n          [swiperOffset.left + swiper.width, swiperOffset.top],\n          [swiperOffset.left, swiperOffset.top + swiper.height],\n          [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height] ];\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n          if (\n            point[0] >= 0 && point[0] <= windowWidth\n            && point[1] >= 0 && point[1] <= windowHeight\n          ) {\n            inView = true;\n          }\n        }\n        if (!inView) { return undefined; }\n      }\n      if (swiper.isHorizontal()) {\n        if (kc === 37 || kc === 39) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if ((kc === 39 && !rtl) || (kc === 37 && rtl)) { swiper.slideNext(); }\n        if ((kc === 37 && !rtl) || (kc === 39 && rtl)) { swiper.slidePrev(); }\n      } else {\n        if (kc === 38 || kc === 40) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if (kc === 40) { swiper.slideNext(); }\n        if (kc === 38) { swiper.slidePrev(); }\n      }\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (swiper.keyboard.enabled) { return; }\n      $(doc).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!swiper.keyboard.enabled) { return; }\n      $(doc).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    },\n  };\n\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        keyboard: {\n          enabled: false,\n          enable: Keyboard.enable.bind(swiper),\n          disable: Keyboard.disable.bind(swiper),\n          handle: Keyboard.handle.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      },\n    },\n  };\n\n  function isEventSupported() {\n    var eventName = 'onwheel';\n    var isSupported = eventName in doc;\n\n    if (!isSupported) {\n      var element = doc.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof element[eventName] === 'function';\n    }\n\n    if (!isSupported\n      && doc.implementation\n      && doc.implementation.hasFeature\n      // always returns true in newer browsers as per the standard.\n      // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n      && doc.implementation.hasFeature('', '') !== true\n    ) {\n      // This is the only way to test support for the `wheel` event in IE9+.\n      isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n    }\n\n    return isSupported;\n  }\n  var Mousewheel = {\n    lastScrollTime: Utils.now(),\n    event: (function getEvent() {\n      if (win.navigator.userAgent.indexOf('firefox') > -1) { return 'DOMMouseScroll'; }\n      return isEventSupported() ? 'wheel' : 'mousewheel';\n    }()),\n    normalize: function normalize(e) {\n      // Reasonable defaults\n      var PIXEL_STEP = 10;\n      var LINE_HEIGHT = 40;\n      var PAGE_HEIGHT = 800;\n\n      var sX = 0;\n      var sY = 0; // spinX, spinY\n      var pX = 0;\n      var pY = 0; // pixelX, pixelY\n\n      // Legacy\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      }\n\n      // side scrolling on FF with DOMMouseScroll\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) { // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else { // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      }\n\n      // Fall-back if spin cannot be determined\n      if (pX && !sX) {\n        sX = (pX < 1) ? -1 : 1;\n      }\n      if (pY && !sY) {\n        sY = (pY < 1) ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY,\n      };\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      var swiper = this;\n      swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      var swiper = this;\n      swiper.mouseEntered = false;\n    },\n    handle: function handle(event) {\n      var e = event;\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (!swiper.mouseEntered && !params.releaseOnEdges) { return true; }\n\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var delta = 0;\n      var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n      var data = Mousewheel.normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) { delta = data.pixelX * rtlFactor; }\n          else { return true; }\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) { delta = data.pixelY; }\n        else { return true; }\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) { return true; }\n\n      if (params.invert) { delta = -delta; }\n\n      if (!swiper.params.freeMode) {\n        if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n          if (delta < 0) {\n            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n              swiper.slideNext();\n              swiper.emit('scroll', e);\n            } else if (params.releaseOnEdges) { return true; }\n          } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n            swiper.slidePrev();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) { return true; }\n        }\n        swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();\n      } else {\n        // Freemode or scrollContainer:\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        var position = swiper.getTranslate() + (delta * params.sensitivity);\n        var wasBeginning = swiper.isBeginning;\n        var wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) { position = swiper.minTranslate(); }\n        if (position <= swiper.maxTranslate()) { position = swiper.maxTranslate(); }\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = Utils.nextTick(function () {\n            swiper.slideToClosest();\n          }, 300);\n        }\n        // Emit event\n        swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) { swiper.autoplay.stop(); }\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) { return true; }\n      }\n\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      return false;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n      target.on(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = true;\n      return true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (!swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.off(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = false;\n      return true;\n    },\n  };\n\n  var Mousewheel$1 = {\n    name: 'mousewheel',\n    params: {\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarged: 'container',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        mousewheel: {\n          enabled: false,\n          enable: Mousewheel.enable.bind(swiper),\n          disable: Mousewheel.disable.bind(swiper),\n          handle: Mousewheel.handle.bind(swiper),\n          handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n          handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n          lastScrollTime: Utils.now(),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.mousewheel.enabled) { swiper.mousewheel.enable(); }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.mousewheel.enabled) { swiper.mousewheel.disable(); }\n      },\n    },\n  };\n\n  var Navigation = {\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          $prevEl.addClass(params.disabledClass);\n        } else {\n          $prevEl.removeClass(params.disabledClass);\n        }\n        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          $nextEl.addClass(params.disabledClass);\n        } else {\n          $nextEl.removeClass(params.disabledClass);\n        }\n        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    onPrevClick: function onPrevClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isBeginning && !swiper.params.loop) { return; }\n      swiper.slidePrev();\n    },\n    onNextClick: function onNextClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isEnd && !swiper.params.loop) { return; }\n      swiper.slideNext();\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n      if (!(params.nextEl || params.prevEl)) { return; }\n\n      var $nextEl;\n      var $prevEl;\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.nextEl === 'string'\n          && $nextEl.length > 1\n          && swiper.$el.find(params.nextEl).length === 1\n        ) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.prevEl === 'string'\n          && $prevEl.length > 1\n          && swiper.$el.find(params.prevEl).length === 1\n        ) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', swiper.navigation.onNextClick);\n      }\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', swiper.navigation.onPrevClick);\n      }\n\n      Utils.extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click', swiper.navigation.onNextClick);\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click', swiper.navigation.onPrevClick);\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    },\n  };\n\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        navigation: {\n          init: Navigation.init.bind(swiper),\n          update: Navigation.update.bind(swiper),\n          destroy: Navigation.destroy.bind(swiper),\n          onNextClick: Navigation.onNextClick.bind(swiper),\n          onPrevClick: Navigation.onPrevClick.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.navigation.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n        if (\n          swiper.params.navigation.hideOnClick\n          && !$(e.target).is($prevEl)\n          && !$(e.target).is($nextEl)\n        ) {\n          if ($nextEl) { $nextEl.toggleClass(swiper.params.navigation.hiddenClass); }\n          if ($prevEl) { $prevEl.toggleClass(swiper.params.navigation.hiddenClass); }\n        }\n      },\n    },\n  };\n\n  var Pagination = {\n    update: function update() {\n      // Render || Update Pagination bullets/items\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el;\n      // Current/Total\n      var current;\n      var total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n        if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n          current -= (slidesLength - (swiper.loopedSlides * 2));\n        }\n        if (current > total - 1) { current -= total; }\n        if (current < 0 && swiper.params.paginationType !== 'bullets') { current = total + current; }\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      }\n      // Types\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        var bullets = swiper.pagination.bullets;\n        var firstIndex;\n        var lastIndex;\n        var midIndex;\n        if (params.dynamicBullets) {\n          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', ((swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)) + \"px\"));\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n            if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (swiper.pagination.dynamicBulletIndex < 0) {\n              swiper.pagination.dynamicBulletIndex = 0;\n            }\n          }\n          firstIndex = current - swiper.pagination.dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n        bullets.removeClass(((params.bulletActiveClass) + \" \" + (params.bulletActiveClass) + \"-next \" + (params.bulletActiveClass) + \"-next-next \" + (params.bulletActiveClass) + \"-prev \" + (params.bulletActiveClass) + \"-prev-prev \" + (params.bulletActiveClass) + \"-main\"));\n        if ($el.length > 1) {\n          bullets.each(function (index, bullet) {\n            var $bullet = $(bullet);\n            var bulletIndex = $bullet.index();\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(((params.bulletActiveClass) + \"-main\"));\n              }\n              if (bulletIndex === firstIndex) {\n                $bullet\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev\"))\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n              }\n              if (bulletIndex === lastIndex) {\n                $bullet\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next\"))\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next-next\"));\n              }\n            }\n          });\n        } else {\n          var $bullet = bullets.eq(current);\n          $bullet.addClass(params.bulletActiveClass);\n          if (params.dynamicBullets) {\n            var $firstDisplayedBullet = bullets.eq(firstIndex);\n            var $lastDisplayedBullet = bullets.eq(lastIndex);\n            for (var i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(((params.bulletActiveClass) + \"-main\"));\n            }\n            $firstDisplayedBullet\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev\"))\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n            $lastDisplayedBullet\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next\"))\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next-next\"));\n          }\n        }\n        if (params.dynamicBullets) {\n          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          var bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n          var offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', (bulletsOffset + \"px\"));\n        }\n      }\n      if (params.type === 'fraction') {\n        $el.find((\".\" + (params.currentClass))).text(params.formatFractionCurrent(current + 1));\n        $el.find((\".\" + (params.totalClass))).text(params.formatFractionTotal(total));\n      }\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        $el.find((\".\" + (params.progressbarFillClass))).transform((\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\")).transition(swiper.params.speed);\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        swiper.emit('paginationRender', swiper, $el[0]);\n      } else {\n        swiper.emit('paginationUpdate', swiper, $el[0]);\n      }\n      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function render() {\n      // Render Container\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n      var $el = swiper.pagination.$el;\n      var paginationHTML = '';\n      if (params.type === 'bullets') {\n        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        for (var i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += \"<\" + (params.bulletElement) + \" class=\\\"\" + (params.bulletClass) + \"\\\"></\" + (params.bulletElement) + \">\";\n          }\n        }\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find((\".\" + (params.bulletClass)));\n      }\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.currentClass) + \"\\\"></span>\"\n          + ' / '\n          + \"<span class=\\\"\" + (params.totalClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.progressbarFillClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type !== 'custom') {\n        swiper.emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el) { return; }\n\n      var $el = $(params.el);\n      if ($el.length === 0) { return; }\n\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.el === 'string'\n        && $el.length > 1\n        && swiper.$el.find(params.el).length === 1\n      ) {\n        $el = swiper.$el.find(params.el);\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass((\"\" + (params.modifierClass) + (params.type) + \"-dynamic\"));\n        swiper.pagination.dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', (\".\" + (params.bulletClass)), function onClick(e) {\n          e.preventDefault();\n          var index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) { index += swiper.loopedSlides; }\n          swiper.slideTo(index);\n        });\n      }\n\n      Utils.extend(swiper.pagination, {\n        $el: $el,\n        el: $el[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var $el = swiper.pagination.$el;\n\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      if (swiper.pagination.bullets) { swiper.pagination.bullets.removeClass(params.bulletActiveClass); }\n      if (params.clickable) {\n        $el.off('click', (\".\" + (params.bulletClass)));\n      }\n    },\n  };\n\n  var Pagination$1 = {\n    name: 'pagination',\n    params: {\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function (number) { return number; },\n        formatFractionTotal: function (number) { return number; },\n        bulletClass: 'swiper-pagination-bullet',\n        bulletActiveClass: 'swiper-pagination-bullet-active',\n        modifierClass: 'swiper-pagination-', // NEW\n        currentClass: 'swiper-pagination-current',\n        totalClass: 'swiper-pagination-total',\n        hiddenClass: 'swiper-pagination-hidden',\n        progressbarFillClass: 'swiper-pagination-progressbar-fill',\n        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n        clickableClass: 'swiper-pagination-clickable', // NEW\n        lockClass: 'swiper-pagination-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        pagination: {\n          init: Pagination.init.bind(swiper),\n          render: Pagination.render.bind(swiper),\n          update: Pagination.update.bind(swiper),\n          destroy: Pagination.destroy.bind(swiper),\n          dynamicBulletIndex: 0,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.pagination.init();\n        swiper.pagination.render();\n        swiper.pagination.update();\n      },\n      activeIndexChange: function activeIndexChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          swiper.pagination.update();\n        }\n      },\n      snapIndexChange: function snapIndexChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.update();\n        }\n      },\n      slidesLengthChange: function slidesLengthChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      snapGridLengthChange: function snapGridLengthChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.pagination.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        if (\n          swiper.params.pagination.el\n          && swiper.params.pagination.hideOnClick\n          && swiper.pagination.$el.length > 0\n          && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n        ) {\n          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      },\n    },\n  };\n\n  var Scrollbar = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var progress = swiper.progress;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n      var params = swiper.params.scrollbar;\n\n      var newSize = dragSize;\n      var newPos = (trackSize - dragSize) * progress;\n      if (rtl) {\n        newPos = -newPos;\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n      if (swiper.isHorizontal()) {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(\" + newPos + \"px, 0, 0)\"));\n        } else {\n          $dragEl.transform((\"translateX(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.width = newSize + \"px\";\n      } else {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(0px, \" + newPos + \"px, 0)\"));\n        } else {\n          $dragEl.transform((\"translateY(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.height = newSize + \"px\";\n      }\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.timeout);\n        $el[0].style.opacity = 1;\n        swiper.scrollbar.timeout = setTimeout(function () {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function updateSize() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n\n      var scrollbar = swiper.scrollbar;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n      var divider = swiper.size / swiper.virtualSize;\n      var moveDivider = divider * (trackSize / swiper.size);\n      var dragSize;\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = dragSize + \"px\";\n      } else {\n        $dragEl[0].style.height = dragSize + \"px\";\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n      if (swiper.params.scrollbarHide) {\n        $el[0].style.opacity = 0;\n      }\n      Utils.extend(scrollbar, {\n        trackSize: trackSize,\n        divider: divider,\n        moveDivider: moveDivider,\n        dragSize: dragSize,\n      });\n      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    setDragPosition: function setDragPosition(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var $el = scrollbar.$el;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n\n      var pointerPosition;\n      if (swiper.isHorizontal()) {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n      } else {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n      }\n      var positionRatio;\n      positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      var position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    },\n    onDragStart: function onDragStart(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n      swiper.scrollbar.isTouched = true;\n      e.preventDefault();\n      e.stopPropagation();\n\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      scrollbar.setDragPosition(e);\n\n      clearTimeout(swiper.scrollbar.dragTimeout);\n\n      $el.transition(0);\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n      swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function onDragMove(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      scrollbar.setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var swiper = this;\n\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $el = scrollbar.$el;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      swiper.scrollbar.isTouched = false;\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n      swiper.emit('scrollbarDragEnd', e);\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    },\n    enableDraggable: function enableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEventsTouch = swiper.touchEventsTouch;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch) {\n        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    disableDraggable: function disableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEventsTouch = swiper.touchEventsTouch;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch) {\n        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var $swiperEl = swiper.$el;\n      var params = swiper.params.scrollbar;\n\n      var $el = $(params.el);\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      var $dragEl = $el.find((\".\" + (swiper.params.scrollbar.dragClass)));\n      if ($dragEl.length === 0) {\n        $dragEl = $((\"<div class=\\\"\" + (swiper.params.scrollbar.dragClass) + \"\\\"></div>\"));\n        $el.append($dragEl);\n      }\n\n      Utils.extend(scrollbar, {\n        $el: $el,\n        el: $el[0],\n        $dragEl: $dragEl,\n        dragEl: $dragEl[0],\n      });\n\n      if (params.draggable) {\n        scrollbar.enableDraggable();\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.scrollbar.disableDraggable();\n    },\n  };\n\n  var Scrollbar$1 = {\n    name: 'scrollbar',\n    params: {\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        scrollbar: {\n          init: Scrollbar.init.bind(swiper),\n          destroy: Scrollbar.destroy.bind(swiper),\n          updateSize: Scrollbar.updateSize.bind(swiper),\n          setTranslate: Scrollbar.setTranslate.bind(swiper),\n          setTransition: Scrollbar.setTransition.bind(swiper),\n          enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n          disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n          setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n          onDragStart: Scrollbar.onDragStart.bind(swiper),\n          onDragMove: Scrollbar.onDragMove.bind(swiper),\n          onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n          isTouched: false,\n          timeout: null,\n          dragTimeout: null,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.scrollbar.init();\n        swiper.scrollbar.updateSize();\n        swiper.scrollbar.setTranslate();\n      },\n      update: function update() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      resize: function resize() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        swiper.scrollbar.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        swiper.scrollbar.setTransition(duration);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.scrollbar.destroy();\n      },\n    },\n  };\n\n  var Parallax = {\n    setTransform: function setTransform(el, progress) {\n      var swiper = this;\n      var rtl = swiper.rtl;\n\n      var $el = $(el);\n      var rtlFactor = rtl ? -1 : 1;\n\n      var p = $el.attr('data-swiper-parallax') || '0';\n      var x = $el.attr('data-swiper-parallax-x');\n      var y = $el.attr('data-swiper-parallax-y');\n      var scale = $el.attr('data-swiper-parallax-scale');\n      var opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if ((x).indexOf('%') >= 0) {\n        x = (parseInt(x, 10) * progress * rtlFactor) + \"%\";\n      } else {\n        x = (x * progress * rtlFactor) + \"px\";\n      }\n      if ((y).indexOf('%') >= 0) {\n        y = (parseInt(y, 10) * progress) + \"%\";\n      } else {\n        y = (y * progress) + \"px\";\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        var currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n        $el[0].style.opacity = currentOpacity;\n      }\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px)\"));\n      } else {\n        var currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\"));\n      }\n    },\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      var progress = swiper.progress;\n      var snapGrid = swiper.snapGrid;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, el) {\n          swiper.parallax.setTransform(el, progress);\n        });\n      slides.each(function (slideIndex, slideEl) {\n        var slideProgress = slideEl.progress;\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n        }\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n          .each(function (index, el) {\n            swiper.parallax.setTransform(el, slideProgress);\n          });\n      });\n    },\n    setTransition: function setTransition(duration) {\n      if ( duration === void 0 ) duration = this.params.speed;\n\n      var swiper = this;\n      var $el = swiper.$el;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, parallaxEl) {\n          var $parallaxEl = $(parallaxEl);\n          var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n          if (duration === 0) { parallaxDuration = 0; }\n          $parallaxEl.transition(parallaxDuration);\n        });\n    },\n  };\n\n  var Parallax$1 = {\n    name: 'parallax',\n    params: {\n      parallax: {\n        enabled: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        parallax: {\n          setTransform: Parallax.setTransform.bind(swiper),\n          setTranslate: Parallax.setTranslate.bind(swiper),\n          setTransition: Parallax.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTransition(duration);\n      },\n    },\n  };\n\n  var Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) { return 1; }\n      var x1 = e.targetTouches[0].pageX;\n      var y1 = e.targetTouches[0].pageY;\n      var x2 = e.targetTouches[1].pageX;\n      var y2 = e.targetTouches[1].pageY;\n      var distance = Math.sqrt((Math.pow( (x2 - x1), 2 )) + (Math.pow( (y2 - y1), 2 )));\n      return distance;\n    },\n    // Events\n    onGestureStart: function onGestureStart(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n      if (!Support.gestures) {\n        if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureTouched = true;\n        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest('.swiper-slide');\n        if (gesture.$slideEl.length === 0) { gesture.$slideEl = swiper.slides.eq(swiper.activeIndex); }\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n      gesture.$imageEl.transition(0);\n      swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function onGestureChange(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureMoved = true;\n        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (Support.gestures) {\n        zoom.scale = e.scale * zoom.currentScale;\n      } else {\n        zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n      }\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = (gesture.maxRatio - 1) + (Math.pow( ((zoom.scale - gesture.maxRatio) + 1), 0.5 ));\n      }\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = (params.minRatio + 1) - (Math.pow( ((params.minRatio - zoom.scale) + 1), 0.5 ));\n      }\n      gesture.$imageEl.transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    onGestureEnd: function onGestureEnd(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n          return;\n        }\n        if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n          return;\n        }\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n      zoom.currentScale = zoom.scale;\n      zoom.isScaling = false;\n      if (zoom.scale === 1) { gesture.$slideEl = undefined; }\n    },\n    onTouchStart: function onTouchStart(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (image.isTouched) { return; }\n      if (Device.android) { e.preventDefault(); }\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function onTouchMove(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) { return; }\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n        if (swiper.rtl) {\n          image.startX = -image.startX;\n          image.startY = -image.startY;\n        }\n      }\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) { return; }\n\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !zoom.isScaling) {\n        if (\n          swiper.isHorizontal()\n          && (\n            (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n            || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        } if (\n          !swiper.isHorizontal()\n          && (\n            (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n            || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        }\n      }\n      e.preventDefault();\n      e.stopPropagation();\n\n      image.isMoved = true;\n      image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n      image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = (image.minX + 1) - (Math.pow( ((image.minX - image.currentX) + 1), 0.8 ));\n      }\n      if (image.currentX > image.maxX) {\n        image.currentX = (image.maxX - 1) + (Math.pow( ((image.currentX - image.maxX) + 1), 0.8 ));\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = (image.minY + 1) - (Math.pow( ((image.minY - image.currentY) + 1), 0.8 ));\n      }\n      if (image.currentY > image.maxY) {\n        image.currentY = (image.maxY - 1) + (Math.pow( ((image.currentY - image.maxY) + 1), 0.8 ));\n      }\n\n      // Velocity\n      if (!velocity.prevPositionX) { velocity.prevPositionX = image.touchesCurrent.x; }\n      if (!velocity.prevPositionY) { velocity.prevPositionY = image.touchesCurrent.y; }\n      if (!velocity.prevTime) { velocity.prevTime = Date.now(); }\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) { velocity.x = 0; }\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) { velocity.y = 0; }\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n\n      gesture.$imageWrapEl.transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTouchEnd: function onTouchEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n      image.isTouched = false;\n      image.isMoved = false;\n      var momentumDurationX = 300;\n      var momentumDurationY = 300;\n      var momentumDistanceX = velocity.x * momentumDurationX;\n      var newPositionX = image.currentX + momentumDistanceX;\n      var momentumDistanceY = velocity.y * momentumDurationY;\n      var newPositionY = image.currentY + momentumDistanceY;\n\n      // Fix duration\n      if (velocity.x !== 0) { momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x); }\n      if (velocity.y !== 0) { momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y); }\n      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n      image.currentX = newPositionX;\n      image.currentY = newPositionY;\n\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n      gesture.$imageWrapEl.transition(momentumDuration).transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n      }\n    },\n    // Toggle Zoom\n    toggle: function toggle(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoom.out();\n      } else {\n        // Zoom In\n        zoom.in(e);\n      }\n    },\n    in: function in$1(e) {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      gesture.$slideEl.addClass((\"\" + (params.zoomedSlideClass)));\n\n      var touchX;\n      var touchY;\n      var offsetX;\n      var offsetY;\n      var diffX;\n      var diffY;\n      var translateX;\n      var translateY;\n      var imageWidth;\n      var imageHeight;\n      var scaledWidth;\n      var scaledHeight;\n      var translateMinX;\n      var translateMinY;\n      var translateMaxX;\n      var translateMaxY;\n      var slideWidth;\n      var slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left;\n        offsetY = gesture.$slideEl.offset().top;\n        diffX = (offsetX + (slideWidth / 2)) - touchX;\n        diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n\n        translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n        translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n      gesture.$imageWrapEl.transition(300).transform((\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\"));\n      gesture.$imageEl.transition(300).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    out: function out() {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass((\"\" + (params.zoomedSlideClass)));\n      gesture.$slideEl = undefined;\n    },\n    // Attach/Detach Events\n    enable: function enable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (zoom.enabled) { return; }\n      zoom.enabled = true;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.on(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n    disable: function disable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (!zoom.enabled) { return; }\n\n      swiper.zoom.enabled = false;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.off(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n  };\n\n  var Zoom$1 = {\n    name: 'zoom',\n    params: {\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      var zoom = {\n        enabled: false,\n        scale: 1,\n        currentScale: 1,\n        isScaling: false,\n        gesture: {\n          $slideEl: undefined,\n          slideWidth: undefined,\n          slideHeight: undefined,\n          $imageEl: undefined,\n          $imageWrapEl: undefined,\n          maxRatio: 3,\n        },\n        image: {\n          isTouched: undefined,\n          isMoved: undefined,\n          currentX: undefined,\n          currentY: undefined,\n          minX: undefined,\n          minY: undefined,\n          maxX: undefined,\n          maxY: undefined,\n          width: undefined,\n          height: undefined,\n          startX: undefined,\n          startY: undefined,\n          touchesStart: {},\n          touchesCurrent: {},\n        },\n        velocity: {\n          x: undefined,\n          y: undefined,\n          prevPositionX: undefined,\n          prevPositionY: undefined,\n          prevTime: undefined,\n        },\n      };\n\n      ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach(function (methodName) {\n        zoom[methodName] = Zoom[methodName].bind(swiper);\n      });\n      Utils.extend(swiper, {\n        zoom: zoom,\n      });\n\n      var scale = 1;\n      Object.defineProperty(swiper.zoom, 'scale', {\n        get: function get() {\n          return scale;\n        },\n        set: function set(value) {\n          if (scale !== value) {\n            var imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n            var slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n            swiper.emit('zoomChange', value, imageEl, slideEl);\n          }\n          scale = value;\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.zoom.enabled) {\n          swiper.zoom.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.zoom.disable();\n      },\n      touchStart: function touchStart(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchStart(e);\n      },\n      touchEnd: function touchEnd(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchEnd(e);\n      },\n      doubleTap: function doubleTap(e) {\n        var swiper = this;\n        if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          swiper.zoom.toggle(e);\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n    },\n  };\n\n  var Lazy = {\n    loadInSlide: function loadInSlide(index, loadInDuplicate) {\n      if ( loadInDuplicate === void 0 ) loadInDuplicate = true;\n\n      var swiper = this;\n      var params = swiper.params.lazy;\n      if (typeof index === 'undefined') { return; }\n      if (swiper.slides.length === 0) { return; }\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      var $slideEl = isVirtual\n        ? swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\"))\n        : swiper.slides.eq(index);\n\n      var $images = $slideEl.find((\".\" + (params.elementClass) + \":not(.\" + (params.loadedClass) + \"):not(.\" + (params.loadingClass) + \")\"));\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images = $images.add($slideEl[0]);\n      }\n      if ($images.length === 0) { return; }\n\n      $images.each(function (imageIndex, imageEl) {\n        var $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n\n        var background = $imageEl.attr('data-background');\n        var src = $imageEl.attr('data-src');\n        var srcset = $imageEl.attr('data-srcset');\n        var sizes = $imageEl.attr('data-sizes');\n\n        swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, function () {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) { return; }\n          if (background) {\n            $imageEl.css('background-image', (\"url(\\\"\" + background + \"\\\")\"));\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find((\".\" + (params.preloaderClass))).remove();\n          if (swiper.params.loop && loadInDuplicate) {\n            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              var originalSlide = swiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + (swiper.params.slideDuplicateClass) + \")\"));\n              swiper.lazy.loadInSlide(originalSlide.index(), false);\n            } else {\n              var duplicatedSlide = swiper.$wrapperEl.children((\".\" + (swiper.params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\"));\n              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        });\n\n        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    },\n    load: function load() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var swiperParams = swiper.params;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      var params = swiperParams.lazy;\n\n      var slidesPerView = swiperParams.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children((\".\" + (swiperParams.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\")).length) {\n            return true;\n          }\n        } else if (slides[index]) { return true; }\n        return false;\n      }\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n        return $(slideEl).index();\n      }\n\n      if (!swiper.lazy.initialImageLoaded) { swiper.lazy.initialImageLoaded = true; }\n      if (swiper.params.watchSlidesVisibility) {\n        $wrapperEl.children((\".\" + (swiperParams.slideVisibleClass))).each(function (elIndex, slideEl) {\n          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          swiper.lazy.loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) { swiper.lazy.loadInSlide(i); }\n        }\n      } else {\n        swiper.lazy.loadInSlide(activeIndex);\n      }\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n          var amount = params.loadPrevNextAmount;\n          var spv = slidesPerView;\n          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n          // Next Slides\n          for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {\n            if (slideExist(i$1)) { swiper.lazy.loadInSlide(i$1); }\n          }\n          // Prev Slides\n          for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {\n            if (slideExist(i$2)) { swiper.lazy.loadInSlide(i$2); }\n          }\n        } else {\n          var nextSlide = $wrapperEl.children((\".\" + (swiperParams.slideNextClass)));\n          if (nextSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(nextSlide)); }\n\n          var prevSlide = $wrapperEl.children((\".\" + (swiperParams.slidePrevClass)));\n          if (prevSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(prevSlide)); }\n        }\n      }\n    },\n  };\n\n  var Lazy$1 = {\n    name: 'lazy',\n    params: {\n      lazy: {\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        lazy: {\n          initialImageLoaded: false,\n          load: Lazy.load.bind(swiper),\n          loadInSlide: Lazy.loadInSlide.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n          swiper.lazy.load();\n        }\n      },\n      scroll: function scroll() {\n        var swiper = this;\n        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n          swiper.lazy.load();\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      scrollbarDragMove: function scrollbarDragMove() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      transitionStart: function transitionStart() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n            swiper.lazy.load();\n          }\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          swiper.lazy.load();\n        }\n      },\n    },\n  };\n\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\n  var Controller = {\n    LinearSpline: function LinearSpline(x, y) {\n      var binarySearch = (function search() {\n        var maxIndex;\n        var minIndex;\n        var guess;\n        return function (array, val) {\n          minIndex = -1;\n          maxIndex = array.length;\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n          return maxIndex;\n        };\n      }());\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1;\n      // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n      var i1;\n      var i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) { return 0; }\n\n        // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1;\n\n        // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n        return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n      };\n      return this;\n    },\n    // xxx: for now i will just save one spline function to to\n    getInterpolateFunction: function getInterpolateFunction(c) {\n      var swiper = this;\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop\n          ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n          : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    },\n    setTranslate: function setTranslate(setTranslate$1, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var multiplier;\n      var controlledTranslate;\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n        if (swiper.params.controller.by === 'slide') {\n          swiper.controller.getInterpolateFunction(c);\n          // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n      if (Array.isArray(controlled)) {\n        for (var i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    },\n    setTransition: function setTransition(duration, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var i;\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n        if (duration !== 0) {\n          c.transitionStart();\n          if (c.params.autoHeight) {\n            Utils.nextTick(function () {\n              c.updateAutoHeight();\n            });\n          }\n          c.$wrapperEl.transitionEnd(function () {\n            if (!controlled) { return; }\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n            c.transitionEnd();\n          });\n        }\n      }\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    },\n  };\n  var Controller$1 = {\n    name: 'controller',\n    params: {\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide', // or 'container'\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        controller: {\n          control: swiper.params.controller.control,\n          getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n          setTranslate: Controller.setTranslate.bind(swiper),\n          setTransition: Controller.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      update: function update() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      setTranslate: function setTranslate(translate, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTranslate(translate, byController);\n      },\n      setTransition: function setTransition(duration, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTransition(duration, byController);\n      },\n    },\n  };\n\n  var a11y = {\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterKey: function onEnterKey(e) {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (e.keyCode !== 13) { return; }\n      var $targetEl = $(e.target);\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n      if (swiper.pagination && $targetEl.is((\".\" + (swiper.params.pagination.bulletClass)))) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n      if (notification.length === 0) { return; }\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n        }\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n          swiper.a11y.addElRole($bulletEl, 'button');\n          swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n\n      swiper.$el.append(swiper.a11y.liveRegion);\n\n      // Navigation\n      var params = swiper.params.a11y;\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        swiper.a11y.makeElFocusable($nextEl);\n        swiper.a11y.addElRole($nextEl, 'button');\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        $nextEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        swiper.a11y.makeElFocusable($prevEl);\n        swiper.a11y.addElRole($prevEl, 'button');\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        $prevEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) { swiper.a11y.liveRegion.remove(); }\n\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n  };\n  var A11y = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        a11y: {\n          liveRegion: $((\"<span class=\\\"\" + (swiper.params.a11y.notificationClass) + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")),\n        },\n      });\n      Object.keys(a11y).forEach(function (methodName) {\n        swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.destroy();\n      },\n    },\n  };\n\n  var History = {\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.history) { return; }\n      if (!win.history || !win.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n      var history = swiper.history;\n      history.initialized = true;\n      history.paths = History.getPathValues();\n      if (!history.paths.key && !history.paths.value) { return; }\n      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n      if (!swiper.params.history.replaceState) {\n        win.addEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (!swiper.params.history.replaceState) {\n        win.removeEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    setHistoryPopState: function setHistoryPopState() {\n      var swiper = this;\n      swiper.history.paths = History.getPathValues();\n      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n    },\n    getPathValues: function getPathValues() {\n      var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) { return part !== ''; });\n      var total = pathArray.length;\n      var key = pathArray[total - 2];\n      var value = pathArray[total - 1];\n      return { key: key, value: value };\n    },\n    setHistory: function setHistory(key, index) {\n      var swiper = this;\n      if (!swiper.history.initialized || !swiper.params.history.enabled) { return; }\n      var slide = swiper.slides.eq(index);\n      var value = History.slugify(slide.attr('data-history'));\n      if (!win.location.pathname.includes(key)) {\n        value = key + \"/\" + value;\n      }\n      var currentState = win.history.state;\n      if (currentState && currentState.value === value) {\n        return;\n      }\n      if (swiper.params.history.replaceState) {\n        win.history.replaceState({ value: value }, null, value);\n      } else {\n        win.history.pushState({ value: value }, null, value);\n      }\n    },\n    slugify: function slugify(text) {\n      return text.toString().toLowerCase()\n        .replace(/\\s+/g, '-')\n        .replace(/[^\\w-]+/g, '')\n        .replace(/--+/g, '-')\n        .replace(/^-+/, '')\n        .replace(/-+$/, '');\n    },\n    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n      var swiper = this;\n      if (value) {\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHistory = History.slugify(slide.attr('data-history'));\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    },\n  };\n\n  var History$1 = {\n    name: 'history',\n    params: {\n      history: {\n        enabled: false,\n        replaceState: false,\n        key: 'slides',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        history: {\n          init: History.init.bind(swiper),\n          setHistory: History.setHistory.bind(swiper),\n          setHistoryPopState: History.setHistoryPopState.bind(swiper),\n          scrollToSlide: History.scrollToSlide.bind(swiper),\n          destroy: History.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.history.initialized) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n    },\n  };\n\n  var HashNavigation = {\n    onHashCange: function onHashCange() {\n      var swiper = this;\n      var newHash = doc.location.hash.replace('#', '');\n      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n      if (newHash !== activeSlideHash) {\n        var newIndex = swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-hash=\\\"\" + newHash + \"\\\"]\")).index();\n        if (typeof newIndex === 'undefined') { return; }\n        swiper.slideTo(newIndex);\n      }\n    },\n    setHash: function setHash() {\n      var swiper = this;\n      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) { return; }\n      if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {\n        win.history.replaceState(null, null, ((\"#\" + (swiper.slides.eq(swiper.activeIndex).attr('data-hash'))) || ''));\n      } else {\n        var slide = swiper.slides.eq(swiper.activeIndex);\n        var hash = slide.attr('data-hash') || slide.attr('data-history');\n        doc.location.hash = hash || '';\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) { return; }\n      swiper.hashNavigation.initialized = true;\n      var hash = doc.location.hash.replace('#', '');\n      if (hash) {\n        var speed = 0;\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).on('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).off('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n  };\n  var HashNavigation$1 = {\n    name: 'hash-navigation',\n    params: {\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        hashNavigation: {\n          initialized: false,\n          init: HashNavigation.init.bind(swiper),\n          destroy: HashNavigation.destroy.bind(swiper),\n          setHash: HashNavigation.setHash.bind(swiper),\n          onHashCange: HashNavigation.onHashCange.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.hashNavigation.initialized) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n    },\n  };\n\n  /* eslint no-underscore-dangle: \"off\" */\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n      swiper.autoplay.timeout = Utils.nextTick(function () {\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n      if (typeof swiper.autoplay.timeout !== 'undefined') { return false; }\n      if (swiper.autoplay.running) { return false; }\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return false; }\n      if (typeof swiper.autoplay.timeout === 'undefined') { return false; }\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return; }\n      if (swiper.autoplay.paused) { return; }\n      if (swiper.autoplay.timeout) { clearTimeout(swiper.autoplay.timeout); }\n      swiper.autoplay.paused = true;\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      }\n    },\n  };\n\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        autoplay: {\n          running: false,\n          paused: false,\n          run: Autoplay.run.bind(swiper),\n          start: Autoplay.start.bind(swiper),\n          stop: Autoplay.stop.bind(swiper),\n          pause: Autoplay.pause.bind(swiper),\n          onTransitionEnd: function onTransitionEnd(e) {\n            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n            swiper.autoplay.paused = false;\n            if (!swiper.autoplay.running) {\n              swiper.autoplay.stop();\n            } else {\n              swiper.autoplay.run();\n            }\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(speed, internal) {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n      },\n    },\n  };\n\n  var Fade = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = swiper.slides.eq(i);\n        var offset = $slideEl[0].swiperSlideOffset;\n        var tx = -offset;\n        if (!swiper.params.virtualTranslate) { tx -= swiper.translate; }\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n        var slideOpacity = swiper.params.fadeEffect.crossFade\n          ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n          : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl\n          .css({\n            opacity: slideOpacity,\n          })\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        slides.transitionEnd(function () {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFade = {\n    name: 'effect-fade',\n    params: {\n      fadeEffect: {\n        crossFade: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        fadeEffect: {\n          setTranslate: Fade.setTranslate.bind(swiper),\n          setTransition: Fade.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"fade\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Cube = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var rtl = swiper.rtlTranslate;\n      var swiperSize = swiper.size;\n      var params = swiper.params.cubeEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var wrapperRotate = 0;\n      var $cubeShadowEl;\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n          $cubeShadowEl.css({ height: (swiperWidth + \"px\") });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideIndex = i;\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n        var slideAngle = slideIndex * 90;\n        var round = Math.floor(slideAngle / 360);\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        var tx = 0;\n        var ty = 0;\n        var tz = 0;\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + (round * 4 * swiperSize);\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = (3 * swiperSize) + (swiperSize * 4 * round);\n        }\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = (slideIndex * 90) + (progress * 90);\n          if (rtl) { wrapperRotate = (-slideIndex * 90) - (progress * 90); }\n        }\n        $slideEl.transform(transform);\n        if (params.slideShadows) {\n          // Set shadows\n          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n      }\n      $wrapperEl.css({\n        '-webkit-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-moz-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-ms-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        'transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform((\"translate3d(0px, \" + ((swiperWidth / 2) + params.shadowOffset) + \"px, \" + (-swiperWidth / 2) + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + (params.shadowScale) + \")\"));\n        } else {\n          var shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n          var multiplier = 1.5 - (\n            (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n            + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n          );\n          var scale1 = params.shadowScale;\n          var scale2 = params.shadowScale / multiplier;\n          var offset = params.shadowOffset;\n          $cubeShadowEl.transform((\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + ((swiperHeight / 2) + offset) + \"px, \" + (-swiperHeight / 2 / scale2) + \"px) rotateX(-90deg)\"));\n        }\n      }\n      var zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n      $wrapperEl\n        .transform((\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\"));\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    },\n  };\n\n  var EffectCube = {\n    name: 'effect-cube',\n    params: {\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        cubeEffect: {\n          setTranslate: Cube.setTranslate.bind(swiper),\n          setTransition: Cube.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"cube\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Flip = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      var rtl = swiper.rtlTranslate;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var progress = $slideEl[0].progress;\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n        var offset = $slideEl[0].swiperSlideOffset;\n        var rotate = -180 * progress;\n        var rotateY = rotate;\n        var rotateX = 0;\n        var tx = -offset;\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (swiper.params.flipEffect.slideShadows) {\n          // Set shadows\n          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n        $slideEl\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        // eslint-disable-next-line\n        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFlip = {\n    name: 'effect-flip',\n    params: {\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        flipEffect: {\n          setTranslate: Flip.setTranslate.bind(swiper),\n          setTransition: Flip.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"flip\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Coverflow = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesSizesGrid = swiper.slidesSizesGrid;\n      var params = swiper.params.coverflowEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var transform = swiper.translate;\n      var center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n      var rotate = isHorizontal ? params.rotate : -params.rotate;\n      var translate = params.depth;\n      // Each slide offset from center\n      for (var i = 0, length = slides.length; i < length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideSize = slidesSizesGrid[i];\n        var slideOffset = $slideEl[0].swiperSlideOffset;\n        var offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n        // var rotateZ = 0\n        var translateZ = -translate * Math.abs(offsetMultiplier);\n\n        var translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n        var translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n        // Fix for ultra small values\n        if (Math.abs(translateX) < 0.001) { translateX = 0; }\n        if (Math.abs(translateY) < 0.001) { translateY = 0; }\n        if (Math.abs(translateZ) < 0.001) { translateZ = 0; }\n        if (Math.abs(rotateY) < 0.001) { rotateY = 0; }\n        if (Math.abs(rotateX) < 0.001) { rotateX = 0; }\n\n        var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\";\n\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n        if (params.slideShadows) {\n          // Set shadows\n          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append($shadowBeforeEl);\n          }\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append($shadowAfterEl);\n          }\n          if ($shadowBeforeEl.length) { $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0; }\n          if ($shadowAfterEl.length) { $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0; }\n        }\n      }\n\n      // Set correct perspective for IE10\n      if (Support.pointerEvents || Support.prefixedPointerEvents) {\n        var ws = $wrapperEl[0].style;\n        ws.perspectiveOrigin = center + \"px 50%\";\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      swiper.slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n    },\n  };\n\n  var EffectCoverflow = {\n    name: 'effect-coverflow',\n    params: {\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        coverflowEffect: {\n          setTranslate: Coverflow.setTranslate.bind(swiper),\n          setTransition: Coverflow.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"coverflow\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Thumbs = {\n    init: function init() {\n      var swiper = this;\n      var ref = swiper.params;\n      var thumbsParams = ref.thumbs;\n      var SwiperClass = swiper.constructor;\n      if (thumbsParams.swiper instanceof SwiperClass) {\n        swiper.thumbs.swiper = thumbsParams.swiper;\n        Utils.extend(swiper.thumbs.swiper.originalParams, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        });\n        Utils.extend(swiper.thumbs.swiper.params, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        });\n      } else if (Utils.isObject(thumbsParams.swiper)) {\n        swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n          watchSlidesVisibility: true,\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        }));\n        swiper.thumbs.swiperCreated = true;\n      }\n      swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n      swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n    },\n    onThumbClick: function onThumbClick() {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) { return; }\n      var clickedIndex = thumbsSwiper.clickedIndex;\n      var clickedSlide = thumbsSwiper.clickedSlide;\n      if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) { return; }\n      if (typeof clickedIndex === 'undefined' || clickedIndex === null) { return; }\n      var slideToIndex;\n      if (thumbsSwiper.params.loop) {\n        slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      } else {\n        slideToIndex = clickedIndex;\n      }\n      if (swiper.params.loop) {\n        var currentIndex = swiper.activeIndex;\n        if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n          swiper.loopFix();\n          // eslint-disable-next-line\n          swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n          currentIndex = swiper.activeIndex;\n        }\n        var prevIndex = swiper.slides.eq(currentIndex).prevAll((\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\")).eq(0).index();\n        var nextIndex = swiper.slides.eq(currentIndex).nextAll((\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\")).eq(0).index();\n        if (typeof prevIndex === 'undefined') { slideToIndex = nextIndex; }\n        else if (typeof nextIndex === 'undefined') { slideToIndex = prevIndex; }\n        else if (nextIndex - currentIndex < currentIndex - prevIndex) { slideToIndex = nextIndex; }\n        else { slideToIndex = prevIndex; }\n      }\n      swiper.slideTo(slideToIndex);\n    },\n    update: function update(initial) {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) { return; }\n\n      var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n        ? thumbsSwiper.slidesPerViewDynamic()\n        : thumbsSwiper.params.slidesPerView;\n\n      if (swiper.realIndex !== thumbsSwiper.realIndex) {\n        var currentThumbsIndex = thumbsSwiper.activeIndex;\n        var newThumbsIndex;\n        if (thumbsSwiper.params.loop) {\n          if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n            thumbsSwiper.loopFix();\n            // eslint-disable-next-line\n            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n            currentThumbsIndex = thumbsSwiper.activeIndex;\n          }\n          // Find actual thumbs index to slide to\n          var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex) + \"\\\"]\")).eq(0).index();\n          var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex) + \"\\\"]\")).eq(0).index();\n          if (typeof prevThumbsIndex === 'undefined') { newThumbsIndex = nextThumbsIndex; }\n          else if (typeof nextThumbsIndex === 'undefined') { newThumbsIndex = prevThumbsIndex; }\n          else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) { newThumbsIndex = currentThumbsIndex; }\n          else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) { newThumbsIndex = nextThumbsIndex; }\n          else { newThumbsIndex = prevThumbsIndex; }\n        } else {\n          newThumbsIndex = swiper.realIndex;\n        }\n        if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n          if (thumbsSwiper.params.centeredSlides) {\n            if (newThumbsIndex > currentThumbsIndex) {\n              newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n            } else {\n              newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n            }\n          } else if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n          }\n          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n        }\n      }\n\n      // Activate thumbs\n      var thumbsToActivate = 1;\n      var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n        thumbsToActivate = swiper.params.slidesPerView;\n      }\n\n      thumbsSwiper.slides.removeClass(thumbActiveClass);\n      if (thumbsSwiper.params.loop) {\n        for (var i = 0; i < thumbsToActivate; i += 1) {\n          thumbsSwiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex + i) + \"\\\"]\")).addClass(thumbActiveClass);\n        }\n      } else {\n        for (var i$1 = 0; i$1 < thumbsToActivate; i$1 += 1) {\n          thumbsSwiper.slides.eq(swiper.realIndex + i$1).addClass(thumbActiveClass);\n        }\n      }\n    },\n  };\n  var Thumbs$1 = {\n    name: 'thumbs',\n    params: {\n      thumbs: {\n        swiper: null,\n        slideThumbActiveClass: 'swiper-slide-thumb-active',\n        thumbsContainerClass: 'swiper-container-thumbs',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        thumbs: {\n          swiper: null,\n          init: Thumbs.init.bind(swiper),\n          update: Thumbs.update.bind(swiper),\n          onThumbClick: Thumbs.onThumbClick.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        var ref = swiper.params;\n        var thumbs = ref.thumbs;\n        if (!thumbs || !thumbs.swiper) { return; }\n        swiper.thumbs.init();\n        swiper.thumbs.update(true);\n      },\n      slideChange: function slideChange() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      update: function update() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) { return; }\n        thumbsSwiper.setTransition(duration);\n      },\n      beforeDestroy: function beforeDestroy() {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) { return; }\n        if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n          thumbsSwiper.destroy();\n        }\n      },\n    },\n  };\n\n  // Swiper Class\n\n  var components = [\n    Device$1,\n    Support$1,\n    Browser$1,\n    Resize,\n    Observer$1,\n    Virtual$1,\n    Keyboard$1,\n    Mousewheel$1,\n    Navigation$1,\n    Pagination$1,\n    Scrollbar$1,\n    Parallax$1,\n    Zoom$1,\n    Lazy$1,\n    Controller$1,\n    A11y,\n    History$1,\n    HashNavigation$1,\n    Autoplay$1,\n    EffectFade,\n    EffectCube,\n    EffectFlip,\n    EffectCoverflow,\n    Thumbs$1\n  ];\n\n  if (typeof Swiper.use === 'undefined') {\n    Swiper.use = Swiper.Class.use;\n    Swiper.installModule = Swiper.Class.installModule;\n  }\n\n  Swiper.use(components);\n\n  return Swiper;\n\n})));\n\n\n/***/ }),\n\n/***/ 215:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"slider\"},[_c('swiper',{ref:\"mySwiper\",staticClass:\"slide\",attrs:{\"options\":_vm.swiperOption}},[(this.language == 'en')?[_c('swiper-slide',[_c('img',{attrs:{\"src\":__webpack_require__(216),\"alt\":\"slide_en_1.jpg\"}})]),_vm._v(\" \"),_c('swiper-slide',[_c('img',{attrs:{\"src\":__webpack_require__(217),\"alt\":\"slide_en_2.jpg\"}})])]:[_c('swiper-slide',[_c('img',{attrs:{\"src\":__webpack_require__(218),\"alt\":\"slide_uk_2.jpg\"}})]),_vm._v(\" \"),_c('swiper-slide',[_c('img',{attrs:{\"src\":__webpack_require__(219),\"alt\":\"slide_uk_2.jpg\"}})])],_vm._v(\" \"),_c('div',{staticClass:\"swiper-pagination\",attrs:{\"slot\":\"pagination\"},slot:\"pagination\"})],2),_vm._v(\" \"),_c('div',{staticClass:\"swiper-button-next swiper-button-white\"}),_vm._v(\" \"),_c('div',{staticClass:\"swiper-button-prev swiper-button-white\"})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ 216:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"../images/slide_en_1.jpg?711999ae8d7047c318e6b4a8e525eb38\";\n\n/***/ }),\n\n/***/ 217:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"../images/slide_en_2.jpg?61b62f8fb54346ab789c472d7cb6398e\";\n\n/***/ }),\n\n/***/ 218:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"../images/slide_uk_1.jpg?170b02d7304d8d035f4419e96f3f6678\";\n\n/***/ }),\n\n/***/ 219:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"../images/slide_uk_2.jpg?82261bc767b4d6553e3bfe1fd00b3f68\";\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 2.build.js","function injectStyle (ssrContext) {\n  require(\"!!../../../../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader!../../../../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-777cb022\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader!../../../../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./carrousel.vue\")\n  require(\"!!../../../../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader!../../../../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-777cb022\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader!../../../../../../../../node_modules/vue-loader/lib/selector?type=styles&index=1!./carrousel.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./carrousel.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./carrousel.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-777cb022\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./carrousel.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-777cb022\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/assets/js/components/body/Home/components/carrousel/carrousel.vue\n// module id = 180\n// module chunks = 2","<template>\n  <div class=\"slider\">\n    <swiper class=\"slide\" :options=\"swiperOption\" ref=\"mySwiper\">\n      <template v-if=\"this.language == 'en'\">\n        <swiper-slide><img src=\"./assets/slide_en_1.jpg\" alt=\"slide_en_1.jpg\"></swiper-slide>\n        <swiper-slide><img src=\"./assets/slide_en_2.jpg\" alt=\"slide_en_2.jpg\"></swiper-slide>\n      </template>\n      <template v-else>\n        <swiper-slide><img src=\"./assets/slide_uk_1.jpg\" alt=\"slide_uk_2.jpg\"></swiper-slide>\n        <swiper-slide><img src=\"./assets/slide_uk_2.jpg\" alt=\"slide_uk_2.jpg\"></swiper-slide>\n      </template>\n      <div class=\"swiper-pagination\" slot=\"pagination\"></div>\n    </swiper>\n    <div class=\"swiper-button-next swiper-button-white\"></div>\n    <div class=\"swiper-button-prev swiper-button-white\"></div>\n  </div>\n</template>\n\n<script>\nimport { swiper, swiperSlide } from 'vue-awesome-swiper' // slider\n\nexport default {\n  name: 'carrousel',\n  components: {\n    swiper,\n    swiperSlide\n  },\n  data() {\n    return {\n      swiperOption: {\n        spaceBetween: 30,\n        centeredSlides: true,\n        autoplay: {\n          delay: 10000,\n          disableOnInteraction: false\n        },\n        pagination: {\n          el: '.swiper-pagination',\n          clickable: true\n        },\n        navigation: {\n          nextEl: '.swiper-button-next',\n          prevEl: '.swiper-button-prev'\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n  .swiper-pagination-bullet-active {\n    background: #efefef!important;\n  }\n</style>\n\n<style lang=\"scss\" scoped>\n\n  .slide {\n    position: absolute;\n    top: 7%;\n    width: 100%;\n    z-index: -1;\n\n    img {\n      width: 100%;\n    }\n  }\n\n  .swiper-button-next, .swiper-button-prev {\n    top: 80%;\n    outline: none;\n    z-index: 1!important;\n  }\n\n  @media screen and (max-width: 960px) {\n    .slider, .slide {\n      position: relative;\n    }\n\n    .swiper-button-next, .swiper-button-prev {\n      top: 50%;\n    }\n  }\n\n  @media screen and (max-width: 460px) {\n    .slide, .swiper-button-next, .swiper-button-prev {\n      display: none;\n    }\n  }\n</style>\n\n\n// WEBPACK FOOTER //\n// resources/assets/js/components/body/Home/components/carrousel/carrousel.vue","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-777cb022\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../../../../../node_modules/sass-loader/lib/loader.js!../../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./carrousel.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"4a6734b2\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-777cb022\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/assets/js/components/body/Home/components/carrousel/carrousel.vue\n// module id = 209\n// module chunks = 2","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".swiper-pagination-bullet-active{background:#efefef!important}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-777cb022\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/assets/js/components/body/Home/components/carrousel/carrousel.vue\n// module id = 210\n// module chunks = 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-777cb022\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../../../../node_modules/sass-loader/lib/loader.js!../../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=1!./carrousel.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"90097570\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-777cb022\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=1!./resources/assets/js/components/body/Home/components/carrousel/carrousel.vue\n// module id = 211\n// module chunks = 2","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".slide[data-v-777cb022]{position:absolute;top:7%;width:100%;z-index:-1}.slide img[data-v-777cb022]{width:100%}.swiper-button-next[data-v-777cb022],.swiper-button-prev[data-v-777cb022]{top:80%;outline:none;z-index:1!important}@media screen and (max-width:960px){.slide[data-v-777cb022],.slider[data-v-777cb022]{position:relative}.swiper-button-next[data-v-777cb022],.swiper-button-prev[data-v-777cb022]{top:50%}}@media screen and (max-width:460px){.slide[data-v-777cb022],.swiper-button-next[data-v-777cb022],.swiper-button-prev[data-v-777cb022]{display:none}}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-777cb022\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=1!./resources/assets/js/components/body/Home/components/carrousel/carrousel.vue\n// module id = 212\n// module chunks = 2","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"swiper/dist/js/swiper.js\")):\"function\"==typeof define&&define.amd?define(\"VueAwesomeSwiper\",[\"swiper\"],t):\"object\"==typeof exports?exports.VueAwesomeSwiper=t(require(\"swiper/dist/js/swiper.js\")):e.VueAwesomeSwiper=t(e.Swiper)}(this,function(e){return function(e){function t(i){if(n[i])return n[i].exports;var s=n[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,t),s.l=!0,s.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t(t.s=4)}([function(t,n){t.exports=e},function(e,t){e.exports=function(e,t,n,i,s,r){var o,a=e=e||{},u=typeof e.default;\"object\"!==u&&\"function\"!==u||(o=e,a=e.default);var p=\"function\"==typeof a?a.options:a;t&&(p.render=t.render,p.staticRenderFns=t.staticRenderFns,p._compiled=!0),n&&(p.functional=!0),s&&(p._scopeId=s);var l;if(r?(l=function(e){e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,e||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},p._ssrRegister=l):i&&(l=i),l){var c=p.functional,d=c?p.render:p.beforeCreate;c?(p._injectStyles=l,p.render=function(e,t){return l.call(t),d(e,t)}):p.beforeCreate=d?[].concat(d,l):[l]}return{esModule:o,exports:a,options:p}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(5),s=n.n(i),r=n(8),o=n(1),a=o(s.a,r.a,!1,null,null,null);t.default=a.exports},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(6),s=n.n(i),r=n(7),o=n(1),a=o(s.a,r.a,!1,null,null,null);t.default=a.exports},function(e,t,n){\"use strict\";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.install=t.swiperSlide=t.swiper=t.Swiper=void 0;var s=n(0),r=i(s),o=n(2),a=i(o),u=n(3),p=i(u),l=window.Swiper||r.default,c=p.default,d=a.default,f=function(e,t){t&&(p.default.props.globalOptions.default=function(){return t}),e.component(p.default.name,p.default),e.component(a.default.name,a.default)},h={Swiper:l,swiper:c,swiperSlide:d,install:f};t.default=h,t.Swiper=l,t.swiper=c,t.swiperSlide=d,t.install=f},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default={name:\"swiper-slide\",data:function(){return{slideClass:\"swiper-slide\"}},ready:function(){this.update()},mounted:function(){this.update(),this.$parent&&this.$parent.options&&this.$parent.options.slideClass&&(this.slideClass=this.$parent.options.slideClass)},updated:function(){this.update()},attached:function(){this.update()},methods:{update:function(){this.$parent&&this.$parent.swiper&&this.$parent.update()}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(0),s=function(e){return e&&e.__esModule?e:{default:e}}(i),r=window.Swiper||s.default;\"function\"!=typeof Object.assign&&Object.defineProperty(Object,\"assign\",{value:function(e,t){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(e),i=1;i<arguments.length;i++){var s=arguments[i];if(null!=s)for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(n[r]=s[r])}return n},writable:!0,configurable:!0});var o=[\"beforeDestroy\",\"slideChange\",\"slideChangeTransitionStart\",\"slideChangeTransitionEnd\",\"slideNextTransitionStart\",\"slideNextTransitionEnd\",\"slidePrevTransitionStart\",\"slidePrevTransitionEnd\",\"transitionStart\",\"transitionEnd\",\"touchStart\",\"touchMove\",\"touchMoveOpposite\",\"sliderMove\",\"touchEnd\",\"click\",\"tap\",\"doubleTap\",\"imagesReady\",\"progress\",\"reachBeginning\",\"reachEnd\",\"fromEdge\",\"setTranslate\",\"setTransition\",\"resize\"];t.default={name:\"swiper\",props:{options:{type:Object,default:function(){return{}}},globalOptions:{type:Object,required:!1,default:function(){return{}}}},data:function(){return{swiper:null,classes:{wrapperClass:\"swiper-wrapper\"}}},ready:function(){this.swiper||this.mountInstance()},mounted:function(){if(!this.swiper){var e=!1;for(var t in this.classes)this.classes.hasOwnProperty(t)&&this.options[t]&&(e=!0,this.classes[t]=this.options[t]);e?this.$nextTick(this.mountInstance):this.mountInstance()}},activated:function(){this.update()},updated:function(){this.update()},beforeDestroy:function(){this.$nextTick(function(){this.swiper&&(this.swiper.destroy&&this.swiper.destroy(),delete this.swiper)})},methods:{update:function(){this.swiper&&(this.swiper.update&&this.swiper.update(),this.swiper.navigation&&this.swiper.navigation.update(),this.swiper.pagination&&this.swiper.pagination.render(),this.swiper.pagination&&this.swiper.pagination.update())},mountInstance:function(){var e=Object.assign({},this.globalOptions,this.options);this.swiper=new r(this.$el,e),this.bindEvents(),this.$emit(\"ready\",this.swiper)},bindEvents:function(){var e=this,t=this;o.forEach(function(n){e.swiper.on(n,function(){t.$emit.apply(t,[n].concat(Array.prototype.slice.call(arguments))),t.$emit.apply(t,[n.replace(/([A-Z])/g,\"-$1\").toLowerCase()].concat(Array.prototype.slice.call(arguments)))})})}}}},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"div\",{staticClass:\"swiper-container\"},[e._t(\"parallax-bg\"),e._v(\" \"),n(\"div\",{class:e.classes.wrapperClass},[e._t(\"default\")],2),e._v(\" \"),e._t(\"pagination\"),e._v(\" \"),e._t(\"button-prev\"),e._v(\" \"),e._t(\"button-next\"),e._v(\" \"),e._t(\"scrollbar\")],2)},s=[],r={render:i,staticRenderFns:s};t.a=r},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement;return(e._self._c||t)(\"div\",{class:e.slideClass},[e._t(\"default\")],2)},s=[],r={render:i,staticRenderFns:s};t.a=r}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-awesome-swiper/dist/vue-awesome-swiper.js\n// module id = 213\n// module chunks = 2","/**\n * Swiper 4.4.6\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: December 19, 2018\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Swiper = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * SSR Window 1.0.1\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: July 18, 2018\n   */\n  var doc = (typeof document === 'undefined') ? {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  } : document; // eslint-disable-line\n\n  var win = (typeof window === 'undefined') ? {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  } : window; // eslint-disable-line\n\n  /**\n   * Dom7 2.1.2\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * http://framework7.io/docs/dom.html\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   * The iDangero.us\n   * http://www.idangero.us/\n   *\n   * Licensed under MIT\n   *\n   * Released on: September 13, 2018\n   */\n\n  var Dom7 = function Dom7(arr) {\n    var self = this;\n    // Create array-like object\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  };\n\n  function $(selector, context) {\n    var arr = [];\n    var i = 0;\n    if (selector && !context) {\n      if (selector instanceof Dom7) {\n        return selector;\n      }\n    }\n    if (selector) {\n        // String\n      if (typeof selector === 'string') {\n        var els;\n        var tempParent;\n        var html = selector.trim();\n        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n          var toCreate = 'div';\n          if (html.indexOf('<li') === 0) { toCreate = 'ul'; }\n          if (html.indexOf('<tr') === 0) { toCreate = 'tbody'; }\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) { toCreate = 'tr'; }\n          if (html.indexOf('<tbody') === 0) { toCreate = 'table'; }\n          if (html.indexOf('<option') === 0) { toCreate = 'select'; }\n          tempParent = doc.createElement(toCreate);\n          tempParent.innerHTML = html;\n          for (i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n            // Pure ID selector\n            els = [doc.getElementById(selector.trim().split('#')[1])];\n          } else {\n            // Other selectors\n            els = (context || doc).querySelectorAll(selector.trim());\n          }\n          for (i = 0; i < els.length; i += 1) {\n            if (els[i]) { arr.push(els[i]); }\n          }\n        }\n      } else if (selector.nodeType || selector === win || selector === doc) {\n        // Node/element\n        arr.push(selector);\n      } else if (selector.length > 0 && selector[0].nodeType) {\n        // Array of elements or instance of Dom\n        for (i = 0; i < selector.length; i += 1) {\n          arr.push(selector[i]);\n        }\n      }\n    }\n    return new Dom7(arr);\n  }\n\n  $.fn = Dom7.prototype;\n  $.Class = Dom7;\n  $.Dom7 = Dom7;\n\n  function unique(arr) {\n    var uniqueArray = [];\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) { uniqueArray.push(arr[i]); }\n    }\n    return uniqueArray;\n  }\n\n  // Classes and attributes\n  function addClass(className) {\n    if (typeof className === 'undefined') {\n      return this;\n    }\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.add(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function removeClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.remove(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function hasClass(className) {\n    if (!this[0]) { return false; }\n    return this[0].classList.contains(className);\n  }\n  function toggleClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.toggle(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function attr(attrs, value) {\n    var arguments$1 = arguments;\n\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) { return this[0].getAttribute(attrs); }\n      return undefined;\n    }\n\n    // Set attrs\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments$1.length === 2) {\n        // String\n        this[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (var attrName in attrs) {\n          this[i][attrName] = attrs[attrName];\n          this[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function removeAttr(attr) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].removeAttribute(attr);\n    }\n    return this;\n  }\n  function data(key, value) {\n    var el;\n    if (typeof value === 'undefined') {\n      el = this[0];\n      // Get value\n      if (el) {\n        if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n          return el.dom7ElementDataStorage[key];\n        }\n\n        var dataKey = el.getAttribute((\"data-\" + key));\n        if (dataKey) {\n          return dataKey;\n        }\n        return undefined;\n      }\n      return undefined;\n    }\n\n    // Set value\n    for (var i = 0; i < this.length; i += 1) {\n      el = this[i];\n      if (!el.dom7ElementDataStorage) { el.dom7ElementDataStorage = {}; }\n      el.dom7ElementDataStorage[key] = value;\n    }\n    return this;\n  }\n  // Transforms\n  // eslint-disable-next-line\n  function transform(transform) {\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransform = transform;\n      elStyle.transform = transform;\n    }\n    return this;\n  }\n  function transition(duration) {\n    if (typeof duration !== 'string') {\n      duration = duration + \"ms\"; // eslint-disable-line\n    }\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransitionDuration = duration;\n      elStyle.transitionDuration = duration;\n    }\n    return this;\n  }\n  // Events\n  function on() {\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n      if (!target) { return; }\n      var eventData = e.target.dom7EventData || [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      if ($(target).is(targetSelector)) { listener.apply(target, eventData); }\n      else {\n        var parents = $(target).parents(); // eslint-disable-line\n        for (var k = 0; k < parents.length; k += 1) {\n          if ($(parents[k]).is(targetSelector)) { listener.apply(parents[k], eventData); }\n        }\n      }\n    }\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      listener.apply(this, eventData);\n    }\n    var events = eventType.split(' ');\n    var j;\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this[i];\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n          if (!el.dom7Listeners) { el.dom7Listeners = {}; }\n          if (!el.dom7Listeners[event]) { el.dom7Listeners[event] = []; }\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent,\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var event$1 = events[j];\n          if (!el.dom7LiveListeners) { el.dom7LiveListeners = {}; }\n          if (!el.dom7LiveListeners[event$1]) { el.dom7LiveListeners[event$1] = []; }\n          el.dom7LiveListeners[event$1].push({\n            listener: listener,\n            proxyListener: handleLiveEvent,\n          });\n          el.addEventListener(event$1, handleLiveEvent, capture);\n        }\n      }\n    }\n    return this;\n  }\n  function off() {\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    var events = eventType.split(' ');\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var handlers = (void 0);\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n    return this;\n  }\n  function trigger() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var evt = (void 0);\n        try {\n          evt = new win.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true,\n          });\n        } catch (e) {\n          evt = doc.createEvent('Event');\n          evt.initEvent(event, true, true);\n          evt.detail = eventData;\n        }\n        // eslint-disable-next-line\n        el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n    return this;\n  }\n  function transitionEnd(callback) {\n    var events = ['webkitTransitionEnd', 'transitionend'];\n    var dom = this;\n    var i;\n    function fireCallBack(e) {\n      /* jshint validthis:true */\n      if (e.target !== this) { return; }\n      callback.call(this, e);\n      for (i = 0; i < events.length; i += 1) {\n        dom.off(events[i], fireCallBack);\n      }\n    }\n    if (callback) {\n      for (i = 0; i < events.length; i += 1) {\n        dom.on(events[i], fireCallBack);\n      }\n    }\n    return this;\n  }\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n      }\n      return this[0].offsetWidth;\n    }\n    return null;\n  }\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n      }\n      return this[0].offsetHeight;\n    }\n    return null;\n  }\n  function offset() {\n    if (this.length > 0) {\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = doc.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === win ? win.scrollY : el.scrollTop;\n      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n      return {\n        top: (box.top + scrollTop) - clientTop,\n        left: (box.left + scrollLeft) - clientLeft,\n      };\n    }\n\n    return null;\n  }\n  function styles() {\n    if (this[0]) { return win.getComputedStyle(this[0], null); }\n    return {};\n  }\n  function css(props, value) {\n    var i;\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        if (this[0]) { return win.getComputedStyle(this[0], null).getPropertyValue(props); }\n      } else {\n        for (i = 0; i < this.length; i += 1) {\n          // eslint-disable-next-line\n          for (var prop in props) {\n            this[i].style[prop] = props[prop];\n          }\n        }\n        return this;\n      }\n    }\n    if (arguments.length === 2 && typeof props === 'string') {\n      for (i = 0; i < this.length; i += 1) {\n        this[i].style[props] = value;\n      }\n      return this;\n    }\n    return this;\n  }\n  // Iterate over the collection passing elements to `callback`\n  function each(callback) {\n    // Don't bother continuing without a callback\n    if (!callback) { return this; }\n    // Iterate over the current collection\n    for (var i = 0; i < this.length; i += 1) {\n      // If the callback returns false\n      if (callback.call(this[i], i, this[i]) === false) {\n        // End the loop early\n        return this;\n      }\n    }\n    // Return `this` to allow chained DOM operations\n    return this;\n  }\n  // eslint-disable-next-line\n  function html(html) {\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : undefined;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].innerHTML = html;\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function text(text) {\n    if (typeof text === 'undefined') {\n      if (this[0]) {\n        return this[0].textContent.trim();\n      }\n      return null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].textContent = text;\n    }\n    return this;\n  }\n  function is(selector) {\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined') { return false; }\n    if (typeof selector === 'string') {\n      if (el.matches) { return el.matches(selector); }\n      else if (el.webkitMatchesSelector) { return el.webkitMatchesSelector(selector); }\n      else if (el.msMatchesSelector) { return el.msMatchesSelector(selector); }\n\n      compareWith = $(selector);\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    } else if (selector === doc) { return el === doc; }\n    else if (selector === win) { return el === win; }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    }\n    return false;\n  }\n  function index() {\n    var child = this[0];\n    var i;\n    if (child) {\n      i = 0;\n      // eslint-disable-next-line\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) { i += 1; }\n      }\n      return i;\n    }\n    return undefined;\n  }\n  // eslint-disable-next-line\n  function eq(index) {\n    if (typeof index === 'undefined') { return this; }\n    var length = this.length;\n    var returnIndex;\n    if (index > length - 1) {\n      return new Dom7([]);\n    }\n    if (index < 0) {\n      returnIndex = length + index;\n      if (returnIndex < 0) { return new Dom7([]); }\n      return new Dom7([this[returnIndex]]);\n    }\n    return new Dom7([this[index]]);\n  }\n  function append() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var newChild;\n\n    for (var k = 0; k < args.length; k += 1) {\n      newChild = args[k];\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = doc.createElement('div');\n          tempDiv.innerHTML = newChild;\n          while (tempDiv.firstChild) {\n            this[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this[i].appendChild(newChild[j]);\n          }\n        } else {\n          this[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n  function prepend(newChild) {\n    var i;\n    var j;\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = doc.createElement('div');\n        tempDiv.innerHTML = newChild;\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n        }\n      } else {\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\n      }\n    }\n    return this;\n  }\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return new Dom7([this[0].nextElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (this[0].nextElementSibling) { return new Dom7([this[0].nextElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.nextElementSibling) {\n      var next = el.nextElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(next).is(selector)) { nextEls.push(next); }\n      } else { nextEls.push(next); }\n      el = next;\n    }\n    return new Dom7(nextEls);\n  }\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return new Dom7([el.previousElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (el.previousElementSibling) { return new Dom7([el.previousElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.previousElementSibling) {\n      var prev = el.previousElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(prev).is(selector)) { prevEls.push(prev); }\n      } else { prevEls.push(prev); }\n      el = prev;\n    }\n    return new Dom7(prevEls);\n  }\n  function parent(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode !== null) {\n        if (selector) {\n          if ($(this[i].parentNode).is(selector)) { parents.push(this[i].parentNode); }\n        } else {\n          parents.push(this[i].parentNode);\n        }\n      }\n    }\n    return $(unique(parents));\n  }\n  function parents(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var parent = this[i].parentNode; // eslint-disable-line\n      while (parent) {\n        if (selector) {\n          if ($(parent).is(selector)) { parents.push(parent); }\n        } else {\n          parents.push(parent);\n        }\n        parent = parent.parentNode;\n      }\n    }\n    return $(unique(parents));\n  }\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n    if (typeof selector === 'undefined') {\n      return new Dom7([]);\n    }\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n    return closest;\n  }\n  function find(selector) {\n    var foundElements = [];\n    for (var i = 0; i < this.length; i += 1) {\n      var found = this[i].querySelectorAll(selector);\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n    return new Dom7(foundElements);\n  }\n  function children(selector) {\n    var children = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this[i].childNodes;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector) {\n          if (childNodes[j].nodeType === 1) { children.push(childNodes[j]); }\n        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n    return new Dom7(unique(children));\n  }\n  function remove() {\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode) { this[i].parentNode.removeChild(this[i]); }\n    }\n    return this;\n  }\n  function add() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var dom = this;\n    var i;\n    var j;\n    for (i = 0; i < args.length; i += 1) {\n      var toAdd = $(args[i]);\n      for (j = 0; j < toAdd.length; j += 1) {\n        dom[dom.length] = toAdd[j];\n        dom.length += 1;\n      }\n    }\n    return dom;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    data: data,\n    transform: transform,\n    transition: transition,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    remove: remove,\n    add: add,\n    styles: styles,\n  };\n\n  Object.keys(Methods).forEach(function (methodName) {\n    $.fn[methodName] = Methods[methodName];\n  });\n\n  var Utils = {\n    deleteProps: function deleteProps(obj) {\n      var object = obj;\n      Object.keys(object).forEach(function (key) {\n        try {\n          object[key] = null;\n        } catch (e) {\n          // no getter for object\n        }\n        try {\n          delete object[key];\n        } catch (e) {\n          // something got wrong\n        }\n      });\n    },\n    nextTick: function nextTick(callback, delay) {\n      if ( delay === void 0 ) delay = 0;\n\n      return setTimeout(callback, delay);\n    },\n    now: function now() {\n      return Date.now();\n    },\n    getTranslate: function getTranslate(el, axis) {\n      if ( axis === void 0 ) axis = 'x';\n\n      var matrix;\n      var curTransform;\n      var transformMatrix;\n\n      var curStyle = win.getComputedStyle(el, null);\n\n      if (win.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');\n        }\n        // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m41; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[12]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[4]); }\n      }\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m42; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[13]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[5]); }\n      }\n      return curTransform || 0;\n    },\n    parseUrlQuery: function parseUrlQuery(url) {\n      var query = {};\n      var urlToParse = url || win.location.href;\n      var i;\n      var params;\n      var param;\n      var length;\n      if (typeof urlToParse === 'string' && urlToParse.length) {\n        urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n        params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });\n        length = params.length;\n\n        for (i = 0; i < length; i += 1) {\n          param = params[i].replace(/#\\S+/g, '').split('=');\n          query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n        }\n      }\n      return query;\n    },\n    isObject: function isObject(o) {\n      return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n    },\n    extend: function extend() {\n      var args = [], len$1 = arguments.length;\n      while ( len$1-- ) args[ len$1 ] = arguments[ len$1 ];\n\n      var to = Object(args[0]);\n      for (var i = 1; i < args.length; i += 1) {\n        var nextSource = args[i];\n        if (nextSource !== undefined && nextSource !== null) {\n          var keysArray = Object.keys(Object(nextSource));\n          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n            if (desc !== undefined && desc.enumerable) {\n              if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n      return to;\n    },\n  };\n\n  var Support = (function Support() {\n    var testDiv = doc.createElement('div');\n    return {\n      touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\n        return !!((win.navigator.maxTouchPoints > 0) || ('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\n      }()),\n\n      pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent || ('maxTouchPoints' in win.navigator)),\n      prefixedPointerEvents: !!win.navigator.msPointerEnabled,\n\n      transition: (function checkTransition() {\n        var style = testDiv.style;\n        return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n      }()),\n      transforms3d: (win.Modernizr && win.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n        var style = testDiv.style;\n        return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n      }()),\n\n      flexbox: (function checkFlexbox() {\n        var style = testDiv.style;\n        var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n        for (var i = 0; i < styles.length; i += 1) {\n          if (styles[i] in style) { return true; }\n        }\n        return false;\n      }()),\n\n      observer: (function checkObserver() {\n        return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\n      }()),\n\n      passiveListener: (function checkPassiveListener() {\n        var supportsPassive = false;\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            },\n          });\n          win.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {\n          // No support\n        }\n        return supportsPassive;\n      }()),\n\n      gestures: (function checkGestures() {\n        return 'ongesturestart' in win;\n      }()),\n    };\n  }());\n\n  var SwiperClass = function SwiperClass(params) {\n    if ( params === void 0 ) params = {};\n\n    var self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach(function (eventName) {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  };\n\n  var staticAccessors = { components: { configurable: true } };\n\n  SwiperClass.prototype.on = function on (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    var method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(function (event) {\n      if (!self.eventsListeners[event]) { self.eventsListeners[event] = []; }\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.once = function once (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    function onceHandler() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  };\n\n  SwiperClass.prototype.off = function off (events, handler) {\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    events.split(' ').forEach(function (event) {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach(function (eventHandler, index) {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.emit = function emit () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    var events;\n    var data;\n    var context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    var eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(function (event) {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        var handlers = [];\n        self.eventsListeners[event].forEach(function (eventHandler) {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach(function (eventHandler) {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.useModulesParams = function useModulesParams (instanceParams) {\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  };\n\n  SwiperClass.prototype.useModules = function useModules (modulesParams) {\n      if ( modulesParams === void 0 ) modulesParams = {};\n\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      var moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach(function (modulePropName) {\n          var moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach(function (moduleEventName) {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  };\n\n  staticAccessors.components.set = function (components) {\n    var Class = this;\n    if (!Class.use) { return; }\n    Class.use(components);\n  };\n\n  SwiperClass.installModule = function installModule (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (!Class.prototype.modules) { Class.prototype.modules = {}; }\n    var name = module.name || (((Object.keys(Class.prototype.modules).length) + \"_\" + (Utils.now())));\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach(function (key) {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach(function (key) {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  };\n\n  SwiperClass.use = function use (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(function (m) { return Class.installModule(m); });\n      return Class;\n    }\n    return Class.installModule.apply(Class, [ module ].concat( params ));\n  };\n\n  Object.defineProperties( SwiperClass, staticAccessors );\n\n  function updateSize () {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n    if (typeof swiper.params.width !== 'undefined') {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n    if (typeof swiper.params.height !== 'undefined') {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n    if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n      return;\n    }\n\n    // Subtract paddings\n    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n    Utils.extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height,\n    });\n  }\n\n  function updateSlides () {\n    var swiper = this;\n    var params = swiper.params;\n\n    var $wrapperEl = swiper.$wrapperEl;\n    var swiperSize = swiper.size;\n    var rtl = swiper.rtlTranslate;\n    var wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children((\".\" + (swiper.params.slideClass)));\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.snapGrid.length;\n\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween;\n\n    // reset margins\n    if (rtl) { slides.css({ marginLeft: '', marginTop: '' }); }\n    else { slides.css({ marginRight: '', marginBottom: '' }); }\n\n    var slidesNumberEvenToRows;\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    }\n\n    // Calc slides\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = (void 0);\n        var column = (void 0);\n        var row = (void 0);\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n          newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n          slide\n            .css({\n              '-webkit-box-ordinal-group': newSlideOrderIndex,\n              '-moz-box-ordinal-group': newSlideOrderIndex,\n              '-ms-flex-order': newSlideOrderIndex,\n              '-webkit-order': newSlideOrderIndex,\n              order: newSlideOrderIndex,\n            });\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - (row * slidesPerRow);\n        }\n        slide\n          .css(\n            (\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left')),\n            (row !== 0 && params.spaceBetween) && (((params.spaceBetween) + \"px\"))\n          )\n          .attr('data-swiper-column', column)\n          .attr('data-swiper-row', row);\n      }\n      if (slide.css('display') === 'none') { continue; } // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = win.getComputedStyle(slide[0], null);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n        if (params.roundLengths) {\n          slideSize = swiper.isHorizontal()\n            ? slide.outerWidth(true)\n            : slide.outerHeight(true);\n        } else {\n          // eslint-disable-next-line\n          if (swiper.isHorizontal()) {\n            var width = parseFloat(slideStyles.getPropertyValue('width'));\n            var paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n            var paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n            var marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n            var marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n            var boxSizing = slideStyles.getPropertyValue('box-sizing');\n            if (boxSizing && boxSizing === 'border-box') {\n              slideSize = width + marginLeft + marginRight;\n            } else {\n              slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n            }\n          } else {\n            var height = parseFloat(slideStyles.getPropertyValue('height'));\n            var paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n            var paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n            var marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n            var marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n            var boxSizing$1 = slideStyles.getPropertyValue('box-sizing');\n            if (boxSizing$1 && boxSizing$1 === 'border-box') {\n              slideSize = height + marginTop + marginBottom;\n            } else {\n              slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n            }\n          }\n        }\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n      } else {\n        slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n\n        if (slides[i]) {\n          if (swiper.isHorizontal()) {\n            slides[i].style.width = slideSize + \"px\";\n          } else {\n            slides[i].style.height = slideSize + \"px\";\n          }\n        }\n      }\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n      slidesSizesGrid.push(slideSize);\n\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (i === 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (Math.abs(slidePosition) < 1 / 1000) { slidePosition = 0; }\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n\n      prevSlideSize = slideSize;\n\n      index += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (\n      rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") });\n    }\n    if (!Support.flexbox || params.setWrapperSize) {\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n    }\n\n    if (params.slidesPerColumn > 1) {\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n        for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {\n          var slidesGridItem = snapGrid[i$1];\n          if (params.roundLengths) { slidesGridItem = Math.floor(slidesGridItem); }\n          if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) { newSlidesGrid.push(slidesGridItem); }\n        }\n        snapGrid = newSlidesGrid;\n      }\n    }\n\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n      for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {\n        var slidesGridItem$1 = snapGrid[i$2];\n        if (params.roundLengths) { slidesGridItem$1 = Math.floor(slidesGridItem$1); }\n        if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem$1);\n        }\n      }\n      snapGrid = newSlidesGrid;\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n    if (snapGrid.length === 0) { snapGrid = [0]; }\n\n    if (params.spaceBetween !== 0) {\n      if (swiper.isHorizontal()) {\n        if (rtl) { slides.css({ marginLeft: (spaceBetween + \"px\") }); }\n        else { slides.css({ marginRight: (spaceBetween + \"px\") }); }\n      } else { slides.css({ marginBottom: (spaceBetween + \"px\") }); }\n    }\n\n    if (params.centerInsufficientSlides) {\n      var allSlidesSize = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize -= params.spaceBetween;\n      if (allSlidesSize < swiperSize) {\n        var allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n        snapGrid.forEach(function (snap, snapIndex) {\n          snapGrid[snapIndex] = snap - allSlidesOffset;\n        });\n        slidesGrid.forEach(function (snap, snapIndex) {\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\n        });\n      }\n    }\n\n    Utils.extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid,\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) { swiper.checkOverflow(); }\n      swiper.emit('snapGridLengthChange');\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight (speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        var index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) { break; }\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    } else {\n      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    }\n\n    // Find new height from highest slide in view\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    }\n\n    // Update Height\n    if (newHeight) { swiper.$wrapperEl.css('height', (newHeight + \"px\")); }\n  }\n\n  function updateSlidesOffset () {\n    var swiper = this;\n    var slides = swiper.slides;\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var slides = swiper.slides;\n    var rtl = swiper.rtlTranslate;\n\n    if (slides.length === 0) { return; }\n    if (typeof slides[0].swiperSlideOffset === 'undefined') { swiper.updateSlidesOffset(); }\n\n    var offsetCenter = -translate;\n    if (rtl) { offsetCenter = translate; }\n\n    // Visible Slides\n    slides.removeClass(params.slideVisibleClass);\n\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress = (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n      if (params.watchSlidesVisibility) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                  || (slideAfter > 0 && slideAfter <= swiper.size)\n                  || (slideBefore <= 0 && slideAfter >= swiper.size);\n        if (isVisible) {\n          swiper.visibleSlides.push(slide);\n          swiper.visibleSlidesIndexes.push(i);\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n    swiper.visibleSlides = $(swiper.visibleSlides);\n  }\n\n  function updateProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress;\n    var isBeginning = swiper.isBeginning;\n    var isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / (translatesDiff);\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n    Utils.extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd,\n    });\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) { swiper.updateSlidesProgress(translate); }\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses () {\n    var swiper = this;\n\n    var slides = swiper.slides;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n    var realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n\n    slides.removeClass(((params.slideActiveClass) + \" \" + (params.slideNextClass) + \" \" + (params.slidePrevClass) + \" \" + (params.slideDuplicateActiveClass) + \" \" + (params.slideDuplicateNextClass) + \" \" + (params.slideDuplicatePrevClass)));\n\n    var activeSlide;\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\"));\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    }\n\n    // Active classes\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      }\n    }\n    // Next Slide\n    var nextSlide = activeSlide.nextAll((\".\" + (params.slideClass))).eq(0).addClass(params.slideNextClass);\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    }\n    // Prev Slide\n    var prevSlide = activeSlide.prevAll((\".\" + (params.slideClass))).eq(0).addClass(params.slidePrevClass);\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      }\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      }\n    }\n  }\n\n  function updateActiveIndex (newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var params = swiper.params;\n    var previousIndex = swiper.activeIndex;\n    var previousRealIndex = swiper.realIndex;\n    var previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      }\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') { activeIndex = 0; }\n      }\n    }\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n      return;\n    }\n\n    // Get real index\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n    Utils.extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex,\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n\n  function updateClickedSlide (e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest((\".\" + (params.slideClass)))[0];\n    var slideFound = false;\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) { slideFound = true; }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = $(slide).index();\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide,\n  };\n\n  function getTranslate (axis) {\n    if ( axis === void 0 ) axis = this.isHorizontal() ? 'x' : 'y';\n\n    var swiper = this;\n\n    var params = swiper.params;\n    var rtl = swiper.rtlTranslate;\n    var translate = swiper.translate;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n    if (rtl) { currentTranslate = -currentTranslate; }\n\n    return currentTranslate || 0;\n  }\n\n  function setTranslate (translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (!params.virtualTranslate) {\n      if (Support.transforms3d) { $wrapperEl.transform((\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\")); }\n      else { $wrapperEl.transform((\"translate(\" + x + \"px, \" + y + \"px)\")); }\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n\n    // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate () {\n    return (-this.snapGrid[0]);\n  }\n\n  function maxTranslate () {\n    return (-this.snapGrid[this.snapGrid.length - 1]);\n  }\n\n  var translate = {\n    getTranslate: getTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n  };\n\n  function setTransition (duration, byController) {\n    var swiper = this;\n\n    swiper.$wrapperEl.transition(duration);\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var params = swiper.params;\n    var previousIndex = swiper.previousIndex;\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n      swiper.emit('slideChangeTransitionStart');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd$1 (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var previousIndex = swiper.previousIndex;\n    swiper.animating = false;\n    swiper.setTransition(0);\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n      swiper.emit('slideChangeTransitionEnd');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition$1 = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd$1,\n  };\n\n  function slideTo (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) { slideIndex = 0; }\n\n    var params = swiper.params;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var previousIndex = swiper.previousIndex;\n    var activeIndex = swiper.activeIndex;\n    var rtl = swiper.rtlTranslate;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex];\n\n    // Update progress\n    swiper.updateProgress(translate);\n\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n          slideIndex = i;\n        }\n      }\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) { return false; }\n      }\n    }\n\n    var direction;\n    if (slideIndex > activeIndex) { direction = 'next'; }\n    else if (slideIndex < activeIndex) { direction = 'prev'; }\n    else { direction = 'reset'; }\n\n\n    // Update Index\n    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n      swiper.updateActiveIndex(slideIndex);\n      // Update Height\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      swiper.updateSlidesClasses();\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n      return false;\n    }\n\n    if (speed === 0 || !Support.transition) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var newIndex = index;\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n    }\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var rtlTranslate = swiper.rtlTranslate;\n\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n      if (val < 0) { return -Math.floor(Math.abs(val)); }\n      return Math.floor(val);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) { return normalize(val); });\n    var normalizedSlidesGrid = slidesGrid.map(function (val) { return normalize(val); });\n\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    var prevIndex;\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) { prevIndex = swiper.activeIndex - 1; }\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n    if (snapIndex < swiper.snapGrid.length - 1) {\n      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n        index = swiper.params.slidesPerGroup;\n      }\n    }\n\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    if (params.loop) {\n      if (swiper.animating) { return; }\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      if (params.centeredSlides) {\n        if (\n          (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n          || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n        ) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl\n            .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n            .eq(0)\n            .index();\n\n          Utils.nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n          .eq(0)\n          .index();\n\n        Utils.nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide,\n  };\n\n  function loopCreate () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    // Remove duplicated slides\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n\n    var slides = $wrapperEl.children((\".\" + (params.slideClass)));\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(doc.createElement('div')).addClass(((params.slideClass) + \" \" + (params.slideBlankClass)));\n          $wrapperEl.append(blankNode);\n        }\n        slides = $wrapperEl.children((\".\" + (params.slideClass)));\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) { params.loopedSlides = slides.length; }\n\n    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n    swiper.loopedSlides += params.loopAdditionalSlides;\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (index, el) {\n      var slide = $(el);\n      if (index < swiper.loopedSlides) { appendSlides.push(el); }\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) { prependSlides.push(el); }\n      slide.attr('data-swiper-slide-index', index);\n    });\n    for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {\n      $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n    for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix () {\n    var swiper = this;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var slides = swiper.slides;\n    var loopedSlides = swiper.loopedSlides;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var allowSlideNext = swiper.allowSlideNext;\n    var snapGrid = swiper.snapGrid;\n    var rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate();\n\n\n    // Fix For Negative Oversliding\n    if (activeIndex < loopedSlides) {\n      newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n      var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged$1 && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n  }\n\n  function loopDestroy () {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var slides = swiper.slides;\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \",.\" + (params.slideClass) + \".\" + (params.slideBlankClass))).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy,\n  };\n\n  function setGrabCursor (moving) {\n    var swiper = this;\n    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor () {\n    var swiper = this;\n    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor,\n  };\n\n  function appendSlide (slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.append(slides[i]); }\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide (slides) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    var newActiveIndex = activeIndex + 1;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.prepend(slides[i]); }\n      }\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide (index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var baseLength = swiper.slides.length;\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n    var slidesBuffer = [];\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (slides[i$1]) { $wrapperEl.append(slides[i$1]); }\n      }\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {\n      $wrapperEl.append(slidesBuffer[i$2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide (slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n        if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n      if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides () {\n    var swiper = this;\n\n    var slidesIndexes = [];\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides,\n  };\n\n  var Device = (function Device() {\n    var ua = win.navigator.userAgent;\n\n    var device = {\n      ios: false,\n      android: false,\n      androidChrome: false,\n      desktop: false,\n      windows: false,\n      iphone: false,\n      ipod: false,\n      ipad: false,\n      cordova: win.cordova || win.phonegap,\n      phonegap: win.cordova || win.phonegap,\n    };\n\n    var windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n    // Windows\n    if (windows) {\n      device.os = 'windows';\n      device.osVersion = windows[2];\n      device.windows = true;\n    }\n    // Android\n    if (android && !windows) {\n      device.os = 'android';\n      device.osVersion = android[2];\n      device.android = true;\n      device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n    }\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n      device.osVersion = iphone[2].replace(/_/g, '.');\n      device.iphone = true;\n    }\n    if (ipad) {\n      device.osVersion = ipad[2].replace(/_/g, '.');\n      device.ipad = true;\n    }\n    if (ipod) {\n      device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n      device.iphone = true;\n    }\n    // iOS 8+ changed UA\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n      if (device.osVersion.split('.')[0] === '10') {\n        device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n      }\n    }\n\n    // Desktop\n    device.desktop = !(device.os || device.android || device.webView);\n\n    // Webview\n    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n    // Minimal UI\n    if (device.os && device.os === 'ios') {\n      var osVersionArr = device.osVersion.split('.');\n      var metaViewport = doc.querySelector('meta[name=\"viewport\"]');\n      device.minimalUi = !device.webView\n        && (ipod || iphone)\n        && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n        && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n    }\n\n    // Pixel Ratio\n    device.pixelRatio = win.devicePixelRatio || 1;\n\n    // Export object\n    return device;\n  }());\n\n  function onTouchStart (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) { return; }\n    if (!data.isTouchEvent && 'button' in e && e.button > 0) { return; }\n    if (data.isTouched && data.isMoved) { return; }\n    if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : (\".\" + (params.noSwipingClass)))[0]) {\n      swiper.allowClick = true;\n      return;\n    }\n    if (params.swipeHandler) {\n      if (!$(e).closest(params.swipeHandler)[0]) { return; }\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY;\n\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n    if (\n      edgeSwipeDetection\n      && ((startX <= edgeSwipeThreshold)\n      || (startX >= win.screen.width - edgeSwipeThreshold))\n    ) {\n      return;\n    }\n\n    Utils.extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined,\n    });\n\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = Utils.now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) { data.allowThresholdMove = false; }\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n      if ($(e.target).is(data.formElements)) { preventDefault = false; }\n      if (\n        doc.activeElement\n        && $(doc.activeElement).is(data.formElements)\n        && doc.activeElement !== e.target\n      ) {\n        doc.activeElement.blur();\n      }\n\n      var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n      if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n        e.preventDefault();\n      }\n    }\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      return;\n    }\n    if (data.isTouchEvent && e.type === 'mousemove') { return; }\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n      if (data.isTouched) {\n        Utils.extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY,\n        });\n        data.touchStartTime = Utils.now();\n      }\n      return;\n    }\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (\n          (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n          || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n        ) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (\n        (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n        || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n      ) {\n        return;\n      }\n    }\n    if (data.isTouchEvent && doc.activeElement) {\n      if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n    if (e.targetTouches && e.targetTouches.length > 1) { return; }\n\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt((Math.pow( diffX, 2 )) + (Math.pow( diffY, 2 ))) < swiper.params.threshold) { return; }\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n      if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if ((diffX * diffX) + (diffY * diffY) >= 25) {\n          touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n        }\n      }\n    }\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n    if (!data.startMoving) {\n      return;\n    }\n    swiper.allowClick = false;\n    e.preventDefault();\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n      data.allowMomentumBounce = false;\n      // Grab Cursor\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n      swiper.emit('sliderFirstMove', e);\n    }\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n\n    diff *= params.touchRatio;\n    if (rtl) { diff = -diff; }\n\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n    if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow( (-swiper.minTranslate() + data.startTranslate + diff), resistanceRatio )); }\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow( (swiper.maxTranslate() - data.startTranslate - diff), resistanceRatio )); }\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    }\n\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n\n    // Threshold\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger) { return; }\n\n    // Update active index in free mode\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime,\n        });\n      }\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: Utils.now(),\n      });\n    }\n    // Update progress\n    swiper.updateProgress(data.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var $wrapperEl = swiper.$wrapperEl;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n    data.allowTouchCallbacks = false;\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    // Return Grab Cursor\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    }\n\n    // Time diff\n    var touchEndTime = Utils.now();\n    var timeDiff = touchEndTime - data.touchStartTime;\n\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap', e);\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        data.clickTimeout = Utils.nextTick(function () {\n          if (!swiper || swiper.destroyed) { return; }\n          swiper.emit('click', e);\n        }, 300);\n      }\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        swiper.emit('doubleTap', e);\n      }\n    }\n\n    data.lastClickTime = Utils.now();\n    Utils.nextTick(function () {\n      if (!swiper.destroyed) { swiper.allowClick = true; }\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n\n    var currentPos;\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          }\n          // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n          if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n\n        var newPosition = swiper.translate + momentumDistance;\n        if (rtl) { newPosition = -newPosition; }\n\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n          newPosition = -newPosition;\n        }\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        }\n        // Fix duration\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) { return; }\n            swiper.emit('momentumBounce');\n\n            swiper.setTransition(params.speed);\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      return;\n    }\n\n    // Find current slide\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n      if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    }\n\n    // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > (1 - params.longSwipesRatio)) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + params.slidesPerGroup);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize () {\n    var swiper = this;\n\n    var params = swiper.params;\n    var el = swiper.el;\n\n    if (el && el.offsetWidth === 0) { return; }\n\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Save locks\n    var allowSlideNext = swiper.allowSlideNext;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var snapGrid = swiper.snapGrid;\n\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n\n    swiper.updateSize();\n    swiper.updateSlides();\n\n    if (params.freeMode) {\n      var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      swiper.updateSlidesClasses();\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick (e) {\n    var swiper = this;\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) { e.preventDefault(); }\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function attachEvents() {\n    var swiper = this;\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    {\n      swiper.onTouchStart = onTouchStart.bind(swiper);\n      swiper.onTouchMove = onTouchMove.bind(swiper);\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);\n          target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.addEventListener('mousedown', swiper.onTouchStart, false);\n          doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.addEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  }\n\n  function detachEvents() {\n    var swiper = this;\n\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n          target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.removeEventListener('mousedown', swiper.onTouchStart, false);\n          doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.removeEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents,\n  };\n\n  function setBreakpoint () {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var initialized = swiper.initialized;\n    var loopedSlides = swiper.loopedSlides; if ( loopedSlides === void 0 ) loopedSlides = 0;\n    var params = swiper.params;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) { return; }\n\n    // Set breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints);\n\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n      var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n      if (breakpointOnlyParams) {\n        ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach(function (param) {\n          var paramValue = breakpointOnlyParams[param];\n          if (typeof paramValue === 'undefined') { return; }\n          if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n            breakpointOnlyParams[param] = 'auto';\n          } else if (param === 'slidesPerView') {\n            breakpointOnlyParams[param] = parseFloat(paramValue);\n          } else {\n            breakpointOnlyParams[param] = parseInt(paramValue, 10);\n          }\n        });\n      }\n\n      var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n      var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView);\n\n      Utils.extend(swiper.params, breakpointParams);\n\n      Utils.extend(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n      });\n\n      swiper.currentBreakpoint = breakpoint;\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n      }\n      swiper.emit('breakpoint', breakpointParams);\n    }\n  }\n\n  function getBreakpoint (breakpoints) {\n    var swiper = this;\n    // Get breakpoint for window width\n    if (!breakpoints) { return undefined; }\n    var breakpoint = false;\n    var points = [];\n    Object.keys(breakpoints).forEach(function (point) {\n      points.push(point);\n    });\n    points.sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });\n    for (var i = 0; i < points.length; i += 1) {\n      var point = points[i];\n      if (swiper.params.breakpointsInverse) {\n        if (point <= win.innerWidth) {\n          breakpoint = point;\n        }\n      } else if (point >= win.innerWidth && !breakpoint) {\n        breakpoint = point;\n      }\n    }\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };\n\n  var Browser = (function Browser() {\n    function isSafari() {\n      var ua = win.navigator.userAgent.toLowerCase();\n      return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n    }\n    return {\n      isIE: !!win.navigator.userAgent.match(/Trident/g) || !!win.navigator.userAgent.match(/MSIE/g),\n      isEdge: !!win.navigator.userAgent.match(/Edge/g),\n      isSafari: isSafari(),\n      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\n    };\n  }());\n\n  function addClasses () {\n    var swiper = this;\n    var classNames = swiper.classNames;\n    var params = swiper.params;\n    var rtl = swiper.rtl;\n    var $el = swiper.$el;\n    var suffixes = [];\n\n    suffixes.push(params.direction);\n\n    if (params.freeMode) {\n      suffixes.push('free-mode');\n    }\n    if (!Support.flexbox) {\n      suffixes.push('no-flexbox');\n    }\n    if (params.autoHeight) {\n      suffixes.push('autoheight');\n    }\n    if (rtl) {\n      suffixes.push('rtl');\n    }\n    if (params.slidesPerColumn > 1) {\n      suffixes.push('multirow');\n    }\n    if (Device.android) {\n      suffixes.push('android');\n    }\n    if (Device.ios) {\n      suffixes.push('ios');\n    }\n    // WP8 Touch Events Fix\n    if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      suffixes.push((\"wp8-\" + (params.direction)));\n    }\n\n    suffixes.forEach(function (suffix) {\n      classNames.push(params.containerModifierClass + suffix);\n    });\n\n    $el.addClass(classNames.join(' '));\n  }\n\n  function removeClasses () {\n    var swiper = this;\n    var $el = swiper.$el;\n    var classNames = swiper.classNames;\n\n    $el.removeClass(classNames.join(' '));\n  }\n\n  var classes = { addClasses: addClasses, removeClasses: removeClasses };\n\n  function loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var image;\n    function onReady() {\n      if (callback) { callback(); }\n    }\n    if (!imageEl.complete || !checkForComplete) {\n      if (src) {\n        image = new win.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n        if (sizes) {\n          image.sizes = sizes;\n        }\n        if (srcset) {\n          image.srcset = srcset;\n        }\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages () {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) { return; }\n      if (swiper.imagesLoaded !== undefined) { swiper.imagesLoaded += 1; }\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) { swiper.update(); }\n        swiper.emit('imagesReady');\n      }\n    }\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(\n        imageEl,\n        imageEl.currentSrc || imageEl.getAttribute('src'),\n        imageEl.srcset || imageEl.getAttribute('srcset'),\n        imageEl.sizes || imageEl.getAttribute('sizes'),\n        true,\n        onReady\n      );\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages,\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var wasLocked = swiper.isLocked;\n\n    swiper.isLocked = swiper.snapGrid.length === 1;\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked;\n\n    // events\n    if (wasLocked !== swiper.isLocked) { swiper.emit(swiper.isLocked ? 'lock' : 'unlock'); }\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = { checkOverflow: checkOverflow };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    //\n    preventInteractionOnTransition: false,\n\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n\n    // Autoheight\n    autoHeight: false,\n\n    // Set wrapper width\n    setWrapperSize: false,\n\n    // Virtual Translate\n    virtualTranslate: false,\n\n    // Effects\n    effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n    // Breakpoints\n    breakpoints: undefined,\n    breakpointsInverse: false,\n\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    centeredSlides: false,\n    slidesOffsetBefore: 0, // in px\n    slidesOffsetAfter: 0, // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n\n    // Round length\n    roundLengths: false,\n\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: true,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n\n    // Cursor\n    grabCursor: false,\n\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null, // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n\n    // Passive Listeners\n    passiveListeners: true,\n\n    // NS\n    containerModifierClass: 'swiper-container-', // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n\n    // Callbacks\n    runCallbacksOnInit: true,\n  };\n\n  var prototypes = {\n    update: update,\n    translate: translate,\n    transition: transition$1,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images,\n  };\n\n  var extendedDefaults = {};\n\n  var Swiper = /*@__PURE__*/(function (SwiperClass$$1) {\n    function Swiper() {\n      var assign;\n\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n      var el;\n      var params;\n      if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n        params = args[0];\n      } else {\n        (assign = args, el = assign[0], params = assign[1]);\n      }\n      if (!params) { params = {}; }\n\n      params = Utils.extend({}, params);\n      if (el && !params.el) { params.el = el; }\n\n      SwiperClass$$1.call(this, params);\n\n      Object.keys(prototypes).forEach(function (prototypeGroup) {\n        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n          if (!Swiper.prototype[protoMethod]) {\n            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n          }\n        });\n      });\n\n      // Swiper Instance\n      var swiper = this;\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n          if (typeof moduleParams !== 'object' || moduleParams === null) { return; }\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) { return; }\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = { enabled: true };\n          }\n          if (\n            typeof params[moduleParamName] === 'object'\n            && !('enabled' in params[moduleParamName])\n          ) {\n            params[moduleParamName].enabled = true;\n          }\n          if (!params[moduleParamName]) { params[moduleParamName] = { enabled: false }; }\n        }\n      });\n\n      // Extend defaults with modules params\n      var swiperParams = Utils.extend({}, defaults);\n      swiper.useModulesParams(swiperParams);\n\n      // Extend defaults with passed params\n      swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = Utils.extend({}, swiper.params);\n      swiper.passedParams = Utils.extend({}, params);\n\n      // Save Dom lib\n      swiper.$ = $;\n\n      // Find el\n      var $el = $(swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return undefined;\n      }\n\n      if ($el.length > 1) {\n        var swipers = [];\n        $el.each(function (index, containerEl) {\n          var newParams = Utils.extend({}, params, { el: containerEl });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      }\n\n      el.swiper = swiper;\n      $el.data('swiper', swiper);\n\n      // Find Wrapper\n      var $wrapperEl = $el.children((\".\" + (swiper.params.wrapperClass)));\n\n      // Extend Swiper\n      Utils.extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n\n        // Classes\n        classNames: [],\n\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // RTL\n        rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n\n        //\n        isBeginning: true,\n        isEnd: false,\n\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n\n        // Touch Events\n        touchEvents: (function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n          if (Support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          } else if (Support.prefixedPointerEvents) {\n            desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n          }\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2],\n          };\n          return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }()),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          formElements: 'input, select, option, textarea, button, video',\n          // Last click time\n          lastClickTime: Utils.now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined,\n        },\n\n        // Clicks\n        allowClick: true,\n\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0,\n        },\n\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0,\n\n      });\n\n      // Install Modules\n      swiper.useModules();\n\n      // Init\n      if (swiper.params.init) {\n        swiper.init();\n      }\n\n      // Return app instance\n      return swiper;\n    }\n\n    if ( SwiperClass$$1 ) Swiper.__proto__ = SwiperClass$$1;\n    Swiper.prototype = Object.create( SwiperClass$$1 && SwiperClass$$1.prototype );\n    Swiper.prototype.constructor = Swiper;\n\n    var staticAccessors = { extendedDefaults: { configurable: true },defaults: { configurable: true },Class: { configurable: true },$: { configurable: true } };\n\n    Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic () {\n      var swiper = this;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      var slidesGrid = swiper.slidesGrid;\n      var swiperSize = swiper.size;\n      var activeIndex = swiper.activeIndex;\n      var spv = 1;\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n        for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {\n          if (slides[i$1] && !breakLoop) {\n            slideSize += slides[i$1].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n      } else {\n        for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {\n          if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n      return spv;\n    };\n\n    Swiper.prototype.update = function update$$1 () {\n      var swiper = this;\n      if (!swiper || swiper.destroyed) { return; }\n      var snapGrid = swiper.snapGrid;\n      var params = swiper.params;\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      var translated;\n      if (swiper.params.freeMode) {\n        setTranslate();\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n        if (!translated) {\n          setTranslate();\n        }\n      }\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n      swiper.emit('update');\n    };\n\n    Swiper.prototype.init = function init () {\n      var swiper = this;\n      if (swiper.initialized) { return; }\n\n      swiper.emit('beforeInit');\n\n      // Set breakpoint\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Add Classes\n      swiper.addClasses();\n\n      // Create loop\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      }\n\n      // Update size\n      swiper.updateSize();\n\n      // Update slides\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      }\n\n      // Set Grab Cursor\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      }\n\n      // Slide To Initial Slide\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n      }\n\n      // Attach events\n      swiper.attachEvents();\n\n      // Init Flag\n      swiper.initialized = true;\n\n      // Emit\n      swiper.emit('init');\n    };\n\n    Swiper.prototype.destroy = function destroy (deleteInstance, cleanStyles) {\n      if ( deleteInstance === void 0 ) deleteInstance = true;\n      if ( cleanStyles === void 0 ) cleanStyles = true;\n\n      var swiper = this;\n      var params = swiper.params;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy');\n\n      // Init Flag\n      swiper.initialized = false;\n\n      // Detach events\n      swiper.detachEvents();\n\n      // Destroy loop\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      // Cleanup styles\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n        if (slides && slides.length) {\n          slides\n            .removeClass([\n              params.slideVisibleClass,\n              params.slideActiveClass,\n              params.slideNextClass,\n              params.slidePrevClass ].join(' '))\n            .removeAttr('style')\n            .removeAttr('data-swiper-slide-index')\n            .removeAttr('data-swiper-column')\n            .removeAttr('data-swiper-row');\n        }\n      }\n\n      swiper.emit('destroy');\n\n      // Detach emitter events\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        swiper.$el.data('swiper', null);\n        Utils.deleteProps(swiper);\n      }\n      swiper.destroyed = true;\n\n      return null;\n    };\n\n    Swiper.extendDefaults = function extendDefaults (newDefaults) {\n      Utils.extend(extendedDefaults, newDefaults);\n    };\n\n    staticAccessors.extendedDefaults.get = function () {\n      return extendedDefaults;\n    };\n\n    staticAccessors.defaults.get = function () {\n      return defaults;\n    };\n\n    staticAccessors.Class.get = function () {\n      return SwiperClass$$1;\n    };\n\n    staticAccessors.$.get = function () {\n      return $;\n    };\n\n    Object.defineProperties( Swiper, staticAccessors );\n\n    return Swiper;\n  }(SwiperClass));\n\n  var Device$1 = {\n    name: 'device',\n    proto: {\n      device: Device,\n    },\n    static: {\n      device: Device,\n    },\n  };\n\n  var Support$1 = {\n    name: 'support',\n    proto: {\n      support: Support,\n    },\n    static: {\n      support: Support,\n    },\n  };\n\n  var Browser$1 = {\n    name: 'browser',\n    proto: {\n      browser: Browser,\n    },\n    static: {\n      browser: Browser,\n    },\n  };\n\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        resize: {\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('orientationchange');\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        // Emit resize\n        win.addEventListener('resize', swiper.resize.resizeHandler);\n\n        // Emit orientationchange\n        win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        win.removeEventListener('resize', swiper.resize.resizeHandler);\n        win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n    },\n  };\n\n  var Observer = {\n    func: win.MutationObserver || win.WebkitMutationObserver,\n    attach: function attach(target, options) {\n      if ( options === void 0 ) options = {};\n\n      var swiper = this;\n\n      var ObserverFunc = Observer.func;\n      var observer = new ObserverFunc(function (mutations) {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          swiper.emit('observerUpdate', mutations[0]);\n          return;\n        }\n        var observerUpdate = function observerUpdate() {\n          swiper.emit('observerUpdate', mutations[0]);\n        };\n\n        if (win.requestAnimationFrame) {\n          win.requestAnimationFrame(observerUpdate);\n        } else {\n          win.setTimeout(observerUpdate, 0);\n        }\n      });\n\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n      });\n\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n      if (!Support.observer || !swiper.params.observer) { return; }\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      }\n      // Observe container\n      swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n      // Observe wrapper\n      swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    },\n  };\n\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n      observeSlideChildren: false,\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        observer: {\n          init: Observer.init.bind(swiper),\n          attach: Observer.attach.bind(swiper),\n          destroy: Observer.destroy.bind(swiper),\n          observers: [],\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.observer.init();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.observer.destroy();\n      },\n    },\n  };\n\n  var Virtual = {\n    update: function update(force) {\n      var swiper = this;\n      var ref = swiper.params;\n      var slidesPerView = ref.slidesPerView;\n      var slidesPerGroup = ref.slidesPerGroup;\n      var centeredSlides = ref.centeredSlides;\n      var ref$1 = swiper.params.virtual;\n      var addSlidesBefore = ref$1.addSlidesBefore;\n      var addSlidesAfter = ref$1.addSlidesAfter;\n      var ref$2 = swiper.virtual;\n      var previousFrom = ref$2.from;\n      var previousTo = ref$2.to;\n      var slides = ref$2.slides;\n      var previousSlidesGrid = ref$2.slidesGrid;\n      var renderSlide = ref$2.renderSlide;\n      var previousOffset = ref$2.offset;\n      swiper.updateActiveIndex();\n      var activeIndex = swiper.activeIndex || 0;\n\n      var offsetProp;\n      if (swiper.rtlTranslate) { offsetProp = 'right'; }\n      else { offsetProp = swiper.isHorizontal() ? 'left' : 'top'; }\n\n      var slidesAfter;\n      var slidesBefore;\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n        slidesBefore = slidesPerGroup + addSlidesAfter;\n      }\n      var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n      Utils.extend(swiper.virtual, {\n        from: from,\n        to: to,\n        offset: offset,\n        slidesGrid: swiper.slidesGrid,\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, (offset + \"px\"));\n        }\n        swiper.updateProgress();\n        return;\n      }\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset: offset,\n          from: from,\n          to: to,\n          slides: (function getSlides() {\n            var slidesToRender = [];\n            for (var i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n            return slidesToRender;\n          }()),\n        });\n        onRendered();\n        return;\n      }\n      var prependIndexes = [];\n      var appendIndexes = [];\n      if (force) {\n        swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass))).remove();\n      } else {\n        for (var i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\")).remove();\n          }\n        }\n      }\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (i$1 >= from && i$1 <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(i$1);\n          } else {\n            if (i$1 > previousTo) { appendIndexes.push(i$1); }\n            if (i$1 < previousFrom) { prependIndexes.push(i$1); }\n          }\n        }\n      }\n      appendIndexes.forEach(function (index) {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort(function (a, b) { return b - a; }).forEach(function (index) {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, (offset + \"px\"));\n      onRendered();\n    },\n    renderSlide: function renderSlide(slide, index) {\n      var swiper = this;\n      var params = swiper.params.virtual;\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n      var $slideEl = params.renderSlide\n        ? $(params.renderSlide.call(swiper, slide, index))\n        : $((\"<div class=\\\"\" + (swiper.params.slideClass) + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\"));\n      if (!$slideEl.attr('data-swiper-slide-index')) { $slideEl.attr('data-swiper-slide-index', index); }\n      if (params.cache) { swiper.virtual.cache[index] = $slideEl; }\n      return $slideEl;\n    },\n    appendSlide: function appendSlide(slide) {\n      var swiper = this;\n      swiper.virtual.slides.push(slide);\n      swiper.virtual.update(true);\n    },\n    prependSlide: function prependSlide(slide) {\n      var swiper = this;\n      swiper.virtual.slides.unshift(slide);\n      if (swiper.params.virtual.cache) {\n        var cache = swiper.virtual.cache;\n        var newCache = {};\n        Object.keys(cache).forEach(function (cachedIndex) {\n          newCache[cachedIndex + 1] = cache[cachedIndex];\n        });\n        swiper.virtual.cache = newCache;\n      }\n      swiper.virtual.update(true);\n      swiper.slideNext(0);\n    },\n  };\n\n  var Virtual$1 = {\n    name: 'virtual',\n    params: {\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n        addSlidesBefore: 0,\n        addSlidesAfter: 0,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        virtual: {\n          update: Virtual.update.bind(swiper),\n          appendSlide: Virtual.appendSlide.bind(swiper),\n          prependSlide: Virtual.prependSlide.bind(swiper),\n          renderSlide: Virtual.renderSlide.bind(swiper),\n          slides: swiper.params.virtual.slides,\n          cache: {},\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"virtual\"));\n        var overwriteParams = {\n          watchSlidesProgress: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n\n        if (!swiper.params.initialSlide) {\n          swiper.virtual.update();\n        }\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.virtual.update();\n      },\n    },\n  };\n\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var kc = e.keyCode || e.charCode;\n      // Directions locks\n      if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n        return false;\n      }\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n      if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n      if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n        var inView = false;\n        // Check that swiper should be inside of visible area of window\n        if (swiper.$el.parents((\".\" + (swiper.params.slideClass))).length > 0 && swiper.$el.parents((\".\" + (swiper.params.slideActiveClass))).length === 0) {\n          return undefined;\n        }\n        var windowWidth = win.innerWidth;\n        var windowHeight = win.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n        if (rtl) { swiperOffset.left -= swiper.$el[0].scrollLeft; }\n        var swiperCoord = [\n          [swiperOffset.left, swiperOffset.top],\n          [swiperOffset.left + swiper.width, swiperOffset.top],\n          [swiperOffset.left, swiperOffset.top + swiper.height],\n          [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height] ];\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n          if (\n            point[0] >= 0 && point[0] <= windowWidth\n            && point[1] >= 0 && point[1] <= windowHeight\n          ) {\n            inView = true;\n          }\n        }\n        if (!inView) { return undefined; }\n      }\n      if (swiper.isHorizontal()) {\n        if (kc === 37 || kc === 39) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if ((kc === 39 && !rtl) || (kc === 37 && rtl)) { swiper.slideNext(); }\n        if ((kc === 37 && !rtl) || (kc === 39 && rtl)) { swiper.slidePrev(); }\n      } else {\n        if (kc === 38 || kc === 40) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if (kc === 40) { swiper.slideNext(); }\n        if (kc === 38) { swiper.slidePrev(); }\n      }\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (swiper.keyboard.enabled) { return; }\n      $(doc).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!swiper.keyboard.enabled) { return; }\n      $(doc).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    },\n  };\n\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        keyboard: {\n          enabled: false,\n          enable: Keyboard.enable.bind(swiper),\n          disable: Keyboard.disable.bind(swiper),\n          handle: Keyboard.handle.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      },\n    },\n  };\n\n  function isEventSupported() {\n    var eventName = 'onwheel';\n    var isSupported = eventName in doc;\n\n    if (!isSupported) {\n      var element = doc.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof element[eventName] === 'function';\n    }\n\n    if (!isSupported\n      && doc.implementation\n      && doc.implementation.hasFeature\n      // always returns true in newer browsers as per the standard.\n      // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n      && doc.implementation.hasFeature('', '') !== true\n    ) {\n      // This is the only way to test support for the `wheel` event in IE9+.\n      isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n    }\n\n    return isSupported;\n  }\n  var Mousewheel = {\n    lastScrollTime: Utils.now(),\n    event: (function getEvent() {\n      if (win.navigator.userAgent.indexOf('firefox') > -1) { return 'DOMMouseScroll'; }\n      return isEventSupported() ? 'wheel' : 'mousewheel';\n    }()),\n    normalize: function normalize(e) {\n      // Reasonable defaults\n      var PIXEL_STEP = 10;\n      var LINE_HEIGHT = 40;\n      var PAGE_HEIGHT = 800;\n\n      var sX = 0;\n      var sY = 0; // spinX, spinY\n      var pX = 0;\n      var pY = 0; // pixelX, pixelY\n\n      // Legacy\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      }\n\n      // side scrolling on FF with DOMMouseScroll\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) { // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else { // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      }\n\n      // Fall-back if spin cannot be determined\n      if (pX && !sX) {\n        sX = (pX < 1) ? -1 : 1;\n      }\n      if (pY && !sY) {\n        sY = (pY < 1) ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY,\n      };\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      var swiper = this;\n      swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      var swiper = this;\n      swiper.mouseEntered = false;\n    },\n    handle: function handle(event) {\n      var e = event;\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (!swiper.mouseEntered && !params.releaseOnEdges) { return true; }\n\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var delta = 0;\n      var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n      var data = Mousewheel.normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) { delta = data.pixelX * rtlFactor; }\n          else { return true; }\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) { delta = data.pixelY; }\n        else { return true; }\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) { return true; }\n\n      if (params.invert) { delta = -delta; }\n\n      if (!swiper.params.freeMode) {\n        if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n          if (delta < 0) {\n            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n              swiper.slideNext();\n              swiper.emit('scroll', e);\n            } else if (params.releaseOnEdges) { return true; }\n          } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n            swiper.slidePrev();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) { return true; }\n        }\n        swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();\n      } else {\n        // Freemode or scrollContainer:\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        var position = swiper.getTranslate() + (delta * params.sensitivity);\n        var wasBeginning = swiper.isBeginning;\n        var wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) { position = swiper.minTranslate(); }\n        if (position <= swiper.maxTranslate()) { position = swiper.maxTranslate(); }\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = Utils.nextTick(function () {\n            swiper.slideToClosest();\n          }, 300);\n        }\n        // Emit event\n        swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) { swiper.autoplay.stop(); }\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) { return true; }\n      }\n\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      return false;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n      target.on(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = true;\n      return true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (!swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.off(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = false;\n      return true;\n    },\n  };\n\n  var Mousewheel$1 = {\n    name: 'mousewheel',\n    params: {\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarged: 'container',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        mousewheel: {\n          enabled: false,\n          enable: Mousewheel.enable.bind(swiper),\n          disable: Mousewheel.disable.bind(swiper),\n          handle: Mousewheel.handle.bind(swiper),\n          handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n          handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n          lastScrollTime: Utils.now(),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.mousewheel.enabled) { swiper.mousewheel.enable(); }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.mousewheel.enabled) { swiper.mousewheel.disable(); }\n      },\n    },\n  };\n\n  var Navigation = {\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          $prevEl.addClass(params.disabledClass);\n        } else {\n          $prevEl.removeClass(params.disabledClass);\n        }\n        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          $nextEl.addClass(params.disabledClass);\n        } else {\n          $nextEl.removeClass(params.disabledClass);\n        }\n        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    onPrevClick: function onPrevClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isBeginning && !swiper.params.loop) { return; }\n      swiper.slidePrev();\n    },\n    onNextClick: function onNextClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isEnd && !swiper.params.loop) { return; }\n      swiper.slideNext();\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n      if (!(params.nextEl || params.prevEl)) { return; }\n\n      var $nextEl;\n      var $prevEl;\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.nextEl === 'string'\n          && $nextEl.length > 1\n          && swiper.$el.find(params.nextEl).length === 1\n        ) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.prevEl === 'string'\n          && $prevEl.length > 1\n          && swiper.$el.find(params.prevEl).length === 1\n        ) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', swiper.navigation.onNextClick);\n      }\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', swiper.navigation.onPrevClick);\n      }\n\n      Utils.extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click', swiper.navigation.onNextClick);\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click', swiper.navigation.onPrevClick);\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    },\n  };\n\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        navigation: {\n          init: Navigation.init.bind(swiper),\n          update: Navigation.update.bind(swiper),\n          destroy: Navigation.destroy.bind(swiper),\n          onNextClick: Navigation.onNextClick.bind(swiper),\n          onPrevClick: Navigation.onPrevClick.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.navigation.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n        if (\n          swiper.params.navigation.hideOnClick\n          && !$(e.target).is($prevEl)\n          && !$(e.target).is($nextEl)\n        ) {\n          if ($nextEl) { $nextEl.toggleClass(swiper.params.navigation.hiddenClass); }\n          if ($prevEl) { $prevEl.toggleClass(swiper.params.navigation.hiddenClass); }\n        }\n      },\n    },\n  };\n\n  var Pagination = {\n    update: function update() {\n      // Render || Update Pagination bullets/items\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el;\n      // Current/Total\n      var current;\n      var total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n        if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n          current -= (slidesLength - (swiper.loopedSlides * 2));\n        }\n        if (current > total - 1) { current -= total; }\n        if (current < 0 && swiper.params.paginationType !== 'bullets') { current = total + current; }\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      }\n      // Types\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        var bullets = swiper.pagination.bullets;\n        var firstIndex;\n        var lastIndex;\n        var midIndex;\n        if (params.dynamicBullets) {\n          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', ((swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)) + \"px\"));\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n            if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (swiper.pagination.dynamicBulletIndex < 0) {\n              swiper.pagination.dynamicBulletIndex = 0;\n            }\n          }\n          firstIndex = current - swiper.pagination.dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n        bullets.removeClass(((params.bulletActiveClass) + \" \" + (params.bulletActiveClass) + \"-next \" + (params.bulletActiveClass) + \"-next-next \" + (params.bulletActiveClass) + \"-prev \" + (params.bulletActiveClass) + \"-prev-prev \" + (params.bulletActiveClass) + \"-main\"));\n        if ($el.length > 1) {\n          bullets.each(function (index, bullet) {\n            var $bullet = $(bullet);\n            var bulletIndex = $bullet.index();\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(((params.bulletActiveClass) + \"-main\"));\n              }\n              if (bulletIndex === firstIndex) {\n                $bullet\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev\"))\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n              }\n              if (bulletIndex === lastIndex) {\n                $bullet\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next\"))\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next-next\"));\n              }\n            }\n          });\n        } else {\n          var $bullet = bullets.eq(current);\n          $bullet.addClass(params.bulletActiveClass);\n          if (params.dynamicBullets) {\n            var $firstDisplayedBullet = bullets.eq(firstIndex);\n            var $lastDisplayedBullet = bullets.eq(lastIndex);\n            for (var i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(((params.bulletActiveClass) + \"-main\"));\n            }\n            $firstDisplayedBullet\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev\"))\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n            $lastDisplayedBullet\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next\"))\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next-next\"));\n          }\n        }\n        if (params.dynamicBullets) {\n          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          var bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n          var offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', (bulletsOffset + \"px\"));\n        }\n      }\n      if (params.type === 'fraction') {\n        $el.find((\".\" + (params.currentClass))).text(params.formatFractionCurrent(current + 1));\n        $el.find((\".\" + (params.totalClass))).text(params.formatFractionTotal(total));\n      }\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        $el.find((\".\" + (params.progressbarFillClass))).transform((\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\")).transition(swiper.params.speed);\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        swiper.emit('paginationRender', swiper, $el[0]);\n      } else {\n        swiper.emit('paginationUpdate', swiper, $el[0]);\n      }\n      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function render() {\n      // Render Container\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n      var $el = swiper.pagination.$el;\n      var paginationHTML = '';\n      if (params.type === 'bullets') {\n        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        for (var i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += \"<\" + (params.bulletElement) + \" class=\\\"\" + (params.bulletClass) + \"\\\"></\" + (params.bulletElement) + \">\";\n          }\n        }\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find((\".\" + (params.bulletClass)));\n      }\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.currentClass) + \"\\\"></span>\"\n          + ' / '\n          + \"<span class=\\\"\" + (params.totalClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.progressbarFillClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type !== 'custom') {\n        swiper.emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el) { return; }\n\n      var $el = $(params.el);\n      if ($el.length === 0) { return; }\n\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.el === 'string'\n        && $el.length > 1\n        && swiper.$el.find(params.el).length === 1\n      ) {\n        $el = swiper.$el.find(params.el);\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass((\"\" + (params.modifierClass) + (params.type) + \"-dynamic\"));\n        swiper.pagination.dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', (\".\" + (params.bulletClass)), function onClick(e) {\n          e.preventDefault();\n          var index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) { index += swiper.loopedSlides; }\n          swiper.slideTo(index);\n        });\n      }\n\n      Utils.extend(swiper.pagination, {\n        $el: $el,\n        el: $el[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var $el = swiper.pagination.$el;\n\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      if (swiper.pagination.bullets) { swiper.pagination.bullets.removeClass(params.bulletActiveClass); }\n      if (params.clickable) {\n        $el.off('click', (\".\" + (params.bulletClass)));\n      }\n    },\n  };\n\n  var Pagination$1 = {\n    name: 'pagination',\n    params: {\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function (number) { return number; },\n        formatFractionTotal: function (number) { return number; },\n        bulletClass: 'swiper-pagination-bullet',\n        bulletActiveClass: 'swiper-pagination-bullet-active',\n        modifierClass: 'swiper-pagination-', // NEW\n        currentClass: 'swiper-pagination-current',\n        totalClass: 'swiper-pagination-total',\n        hiddenClass: 'swiper-pagination-hidden',\n        progressbarFillClass: 'swiper-pagination-progressbar-fill',\n        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n        clickableClass: 'swiper-pagination-clickable', // NEW\n        lockClass: 'swiper-pagination-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        pagination: {\n          init: Pagination.init.bind(swiper),\n          render: Pagination.render.bind(swiper),\n          update: Pagination.update.bind(swiper),\n          destroy: Pagination.destroy.bind(swiper),\n          dynamicBulletIndex: 0,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.pagination.init();\n        swiper.pagination.render();\n        swiper.pagination.update();\n      },\n      activeIndexChange: function activeIndexChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          swiper.pagination.update();\n        }\n      },\n      snapIndexChange: function snapIndexChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.update();\n        }\n      },\n      slidesLengthChange: function slidesLengthChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      snapGridLengthChange: function snapGridLengthChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.pagination.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        if (\n          swiper.params.pagination.el\n          && swiper.params.pagination.hideOnClick\n          && swiper.pagination.$el.length > 0\n          && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n        ) {\n          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      },\n    },\n  };\n\n  var Scrollbar = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var progress = swiper.progress;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n      var params = swiper.params.scrollbar;\n\n      var newSize = dragSize;\n      var newPos = (trackSize - dragSize) * progress;\n      if (rtl) {\n        newPos = -newPos;\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n      if (swiper.isHorizontal()) {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(\" + newPos + \"px, 0, 0)\"));\n        } else {\n          $dragEl.transform((\"translateX(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.width = newSize + \"px\";\n      } else {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(0px, \" + newPos + \"px, 0)\"));\n        } else {\n          $dragEl.transform((\"translateY(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.height = newSize + \"px\";\n      }\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.timeout);\n        $el[0].style.opacity = 1;\n        swiper.scrollbar.timeout = setTimeout(function () {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function updateSize() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n\n      var scrollbar = swiper.scrollbar;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n      var divider = swiper.size / swiper.virtualSize;\n      var moveDivider = divider * (trackSize / swiper.size);\n      var dragSize;\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = dragSize + \"px\";\n      } else {\n        $dragEl[0].style.height = dragSize + \"px\";\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n      if (swiper.params.scrollbarHide) {\n        $el[0].style.opacity = 0;\n      }\n      Utils.extend(scrollbar, {\n        trackSize: trackSize,\n        divider: divider,\n        moveDivider: moveDivider,\n        dragSize: dragSize,\n      });\n      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    setDragPosition: function setDragPosition(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var $el = scrollbar.$el;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n\n      var pointerPosition;\n      if (swiper.isHorizontal()) {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n      } else {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n      }\n      var positionRatio;\n      positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      var position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    },\n    onDragStart: function onDragStart(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n      swiper.scrollbar.isTouched = true;\n      e.preventDefault();\n      e.stopPropagation();\n\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      scrollbar.setDragPosition(e);\n\n      clearTimeout(swiper.scrollbar.dragTimeout);\n\n      $el.transition(0);\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n      swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function onDragMove(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      scrollbar.setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var swiper = this;\n\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $el = scrollbar.$el;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      swiper.scrollbar.isTouched = false;\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n      swiper.emit('scrollbarDragEnd', e);\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    },\n    enableDraggable: function enableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEventsTouch = swiper.touchEventsTouch;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch) {\n        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    disableDraggable: function disableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEventsTouch = swiper.touchEventsTouch;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch) {\n        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var $swiperEl = swiper.$el;\n      var params = swiper.params.scrollbar;\n\n      var $el = $(params.el);\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      var $dragEl = $el.find((\".\" + (swiper.params.scrollbar.dragClass)));\n      if ($dragEl.length === 0) {\n        $dragEl = $((\"<div class=\\\"\" + (swiper.params.scrollbar.dragClass) + \"\\\"></div>\"));\n        $el.append($dragEl);\n      }\n\n      Utils.extend(scrollbar, {\n        $el: $el,\n        el: $el[0],\n        $dragEl: $dragEl,\n        dragEl: $dragEl[0],\n      });\n\n      if (params.draggable) {\n        scrollbar.enableDraggable();\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.scrollbar.disableDraggable();\n    },\n  };\n\n  var Scrollbar$1 = {\n    name: 'scrollbar',\n    params: {\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        scrollbar: {\n          init: Scrollbar.init.bind(swiper),\n          destroy: Scrollbar.destroy.bind(swiper),\n          updateSize: Scrollbar.updateSize.bind(swiper),\n          setTranslate: Scrollbar.setTranslate.bind(swiper),\n          setTransition: Scrollbar.setTransition.bind(swiper),\n          enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n          disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n          setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n          onDragStart: Scrollbar.onDragStart.bind(swiper),\n          onDragMove: Scrollbar.onDragMove.bind(swiper),\n          onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n          isTouched: false,\n          timeout: null,\n          dragTimeout: null,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.scrollbar.init();\n        swiper.scrollbar.updateSize();\n        swiper.scrollbar.setTranslate();\n      },\n      update: function update() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      resize: function resize() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        swiper.scrollbar.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        swiper.scrollbar.setTransition(duration);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.scrollbar.destroy();\n      },\n    },\n  };\n\n  var Parallax = {\n    setTransform: function setTransform(el, progress) {\n      var swiper = this;\n      var rtl = swiper.rtl;\n\n      var $el = $(el);\n      var rtlFactor = rtl ? -1 : 1;\n\n      var p = $el.attr('data-swiper-parallax') || '0';\n      var x = $el.attr('data-swiper-parallax-x');\n      var y = $el.attr('data-swiper-parallax-y');\n      var scale = $el.attr('data-swiper-parallax-scale');\n      var opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if ((x).indexOf('%') >= 0) {\n        x = (parseInt(x, 10) * progress * rtlFactor) + \"%\";\n      } else {\n        x = (x * progress * rtlFactor) + \"px\";\n      }\n      if ((y).indexOf('%') >= 0) {\n        y = (parseInt(y, 10) * progress) + \"%\";\n      } else {\n        y = (y * progress) + \"px\";\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        var currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n        $el[0].style.opacity = currentOpacity;\n      }\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px)\"));\n      } else {\n        var currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\"));\n      }\n    },\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      var progress = swiper.progress;\n      var snapGrid = swiper.snapGrid;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, el) {\n          swiper.parallax.setTransform(el, progress);\n        });\n      slides.each(function (slideIndex, slideEl) {\n        var slideProgress = slideEl.progress;\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n        }\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n          .each(function (index, el) {\n            swiper.parallax.setTransform(el, slideProgress);\n          });\n      });\n    },\n    setTransition: function setTransition(duration) {\n      if ( duration === void 0 ) duration = this.params.speed;\n\n      var swiper = this;\n      var $el = swiper.$el;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, parallaxEl) {\n          var $parallaxEl = $(parallaxEl);\n          var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n          if (duration === 0) { parallaxDuration = 0; }\n          $parallaxEl.transition(parallaxDuration);\n        });\n    },\n  };\n\n  var Parallax$1 = {\n    name: 'parallax',\n    params: {\n      parallax: {\n        enabled: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        parallax: {\n          setTransform: Parallax.setTransform.bind(swiper),\n          setTranslate: Parallax.setTranslate.bind(swiper),\n          setTransition: Parallax.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTransition(duration);\n      },\n    },\n  };\n\n  var Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) { return 1; }\n      var x1 = e.targetTouches[0].pageX;\n      var y1 = e.targetTouches[0].pageY;\n      var x2 = e.targetTouches[1].pageX;\n      var y2 = e.targetTouches[1].pageY;\n      var distance = Math.sqrt((Math.pow( (x2 - x1), 2 )) + (Math.pow( (y2 - y1), 2 )));\n      return distance;\n    },\n    // Events\n    onGestureStart: function onGestureStart(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n      if (!Support.gestures) {\n        if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureTouched = true;\n        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest('.swiper-slide');\n        if (gesture.$slideEl.length === 0) { gesture.$slideEl = swiper.slides.eq(swiper.activeIndex); }\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n      gesture.$imageEl.transition(0);\n      swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function onGestureChange(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureMoved = true;\n        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (Support.gestures) {\n        zoom.scale = e.scale * zoom.currentScale;\n      } else {\n        zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n      }\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = (gesture.maxRatio - 1) + (Math.pow( ((zoom.scale - gesture.maxRatio) + 1), 0.5 ));\n      }\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = (params.minRatio + 1) - (Math.pow( ((params.minRatio - zoom.scale) + 1), 0.5 ));\n      }\n      gesture.$imageEl.transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    onGestureEnd: function onGestureEnd(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n          return;\n        }\n        if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n          return;\n        }\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n      zoom.currentScale = zoom.scale;\n      zoom.isScaling = false;\n      if (zoom.scale === 1) { gesture.$slideEl = undefined; }\n    },\n    onTouchStart: function onTouchStart(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (image.isTouched) { return; }\n      if (Device.android) { e.preventDefault(); }\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function onTouchMove(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) { return; }\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n        if (swiper.rtl) {\n          image.startX = -image.startX;\n          image.startY = -image.startY;\n        }\n      }\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) { return; }\n\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !zoom.isScaling) {\n        if (\n          swiper.isHorizontal()\n          && (\n            (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n            || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        } if (\n          !swiper.isHorizontal()\n          && (\n            (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n            || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        }\n      }\n      e.preventDefault();\n      e.stopPropagation();\n\n      image.isMoved = true;\n      image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n      image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = (image.minX + 1) - (Math.pow( ((image.minX - image.currentX) + 1), 0.8 ));\n      }\n      if (image.currentX > image.maxX) {\n        image.currentX = (image.maxX - 1) + (Math.pow( ((image.currentX - image.maxX) + 1), 0.8 ));\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = (image.minY + 1) - (Math.pow( ((image.minY - image.currentY) + 1), 0.8 ));\n      }\n      if (image.currentY > image.maxY) {\n        image.currentY = (image.maxY - 1) + (Math.pow( ((image.currentY - image.maxY) + 1), 0.8 ));\n      }\n\n      // Velocity\n      if (!velocity.prevPositionX) { velocity.prevPositionX = image.touchesCurrent.x; }\n      if (!velocity.prevPositionY) { velocity.prevPositionY = image.touchesCurrent.y; }\n      if (!velocity.prevTime) { velocity.prevTime = Date.now(); }\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) { velocity.x = 0; }\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) { velocity.y = 0; }\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n\n      gesture.$imageWrapEl.transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTouchEnd: function onTouchEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n      image.isTouched = false;\n      image.isMoved = false;\n      var momentumDurationX = 300;\n      var momentumDurationY = 300;\n      var momentumDistanceX = velocity.x * momentumDurationX;\n      var newPositionX = image.currentX + momentumDistanceX;\n      var momentumDistanceY = velocity.y * momentumDurationY;\n      var newPositionY = image.currentY + momentumDistanceY;\n\n      // Fix duration\n      if (velocity.x !== 0) { momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x); }\n      if (velocity.y !== 0) { momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y); }\n      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n      image.currentX = newPositionX;\n      image.currentY = newPositionY;\n\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n      gesture.$imageWrapEl.transition(momentumDuration).transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n      }\n    },\n    // Toggle Zoom\n    toggle: function toggle(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoom.out();\n      } else {\n        // Zoom In\n        zoom.in(e);\n      }\n    },\n    in: function in$1(e) {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      gesture.$slideEl.addClass((\"\" + (params.zoomedSlideClass)));\n\n      var touchX;\n      var touchY;\n      var offsetX;\n      var offsetY;\n      var diffX;\n      var diffY;\n      var translateX;\n      var translateY;\n      var imageWidth;\n      var imageHeight;\n      var scaledWidth;\n      var scaledHeight;\n      var translateMinX;\n      var translateMinY;\n      var translateMaxX;\n      var translateMaxY;\n      var slideWidth;\n      var slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left;\n        offsetY = gesture.$slideEl.offset().top;\n        diffX = (offsetX + (slideWidth / 2)) - touchX;\n        diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n\n        translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n        translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n      gesture.$imageWrapEl.transition(300).transform((\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\"));\n      gesture.$imageEl.transition(300).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    out: function out() {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass((\"\" + (params.zoomedSlideClass)));\n      gesture.$slideEl = undefined;\n    },\n    // Attach/Detach Events\n    enable: function enable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (zoom.enabled) { return; }\n      zoom.enabled = true;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.on(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n    disable: function disable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (!zoom.enabled) { return; }\n\n      swiper.zoom.enabled = false;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.off(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n  };\n\n  var Zoom$1 = {\n    name: 'zoom',\n    params: {\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      var zoom = {\n        enabled: false,\n        scale: 1,\n        currentScale: 1,\n        isScaling: false,\n        gesture: {\n          $slideEl: undefined,\n          slideWidth: undefined,\n          slideHeight: undefined,\n          $imageEl: undefined,\n          $imageWrapEl: undefined,\n          maxRatio: 3,\n        },\n        image: {\n          isTouched: undefined,\n          isMoved: undefined,\n          currentX: undefined,\n          currentY: undefined,\n          minX: undefined,\n          minY: undefined,\n          maxX: undefined,\n          maxY: undefined,\n          width: undefined,\n          height: undefined,\n          startX: undefined,\n          startY: undefined,\n          touchesStart: {},\n          touchesCurrent: {},\n        },\n        velocity: {\n          x: undefined,\n          y: undefined,\n          prevPositionX: undefined,\n          prevPositionY: undefined,\n          prevTime: undefined,\n        },\n      };\n\n      ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach(function (methodName) {\n        zoom[methodName] = Zoom[methodName].bind(swiper);\n      });\n      Utils.extend(swiper, {\n        zoom: zoom,\n      });\n\n      var scale = 1;\n      Object.defineProperty(swiper.zoom, 'scale', {\n        get: function get() {\n          return scale;\n        },\n        set: function set(value) {\n          if (scale !== value) {\n            var imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n            var slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n            swiper.emit('zoomChange', value, imageEl, slideEl);\n          }\n          scale = value;\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.zoom.enabled) {\n          swiper.zoom.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.zoom.disable();\n      },\n      touchStart: function touchStart(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchStart(e);\n      },\n      touchEnd: function touchEnd(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchEnd(e);\n      },\n      doubleTap: function doubleTap(e) {\n        var swiper = this;\n        if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          swiper.zoom.toggle(e);\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n    },\n  };\n\n  var Lazy = {\n    loadInSlide: function loadInSlide(index, loadInDuplicate) {\n      if ( loadInDuplicate === void 0 ) loadInDuplicate = true;\n\n      var swiper = this;\n      var params = swiper.params.lazy;\n      if (typeof index === 'undefined') { return; }\n      if (swiper.slides.length === 0) { return; }\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      var $slideEl = isVirtual\n        ? swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\"))\n        : swiper.slides.eq(index);\n\n      var $images = $slideEl.find((\".\" + (params.elementClass) + \":not(.\" + (params.loadedClass) + \"):not(.\" + (params.loadingClass) + \")\"));\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images = $images.add($slideEl[0]);\n      }\n      if ($images.length === 0) { return; }\n\n      $images.each(function (imageIndex, imageEl) {\n        var $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n\n        var background = $imageEl.attr('data-background');\n        var src = $imageEl.attr('data-src');\n        var srcset = $imageEl.attr('data-srcset');\n        var sizes = $imageEl.attr('data-sizes');\n\n        swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, function () {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) { return; }\n          if (background) {\n            $imageEl.css('background-image', (\"url(\\\"\" + background + \"\\\")\"));\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find((\".\" + (params.preloaderClass))).remove();\n          if (swiper.params.loop && loadInDuplicate) {\n            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              var originalSlide = swiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + (swiper.params.slideDuplicateClass) + \")\"));\n              swiper.lazy.loadInSlide(originalSlide.index(), false);\n            } else {\n              var duplicatedSlide = swiper.$wrapperEl.children((\".\" + (swiper.params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\"));\n              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        });\n\n        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    },\n    load: function load() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var swiperParams = swiper.params;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      var params = swiperParams.lazy;\n\n      var slidesPerView = swiperParams.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children((\".\" + (swiperParams.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\")).length) {\n            return true;\n          }\n        } else if (slides[index]) { return true; }\n        return false;\n      }\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n        return $(slideEl).index();\n      }\n\n      if (!swiper.lazy.initialImageLoaded) { swiper.lazy.initialImageLoaded = true; }\n      if (swiper.params.watchSlidesVisibility) {\n        $wrapperEl.children((\".\" + (swiperParams.slideVisibleClass))).each(function (elIndex, slideEl) {\n          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          swiper.lazy.loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) { swiper.lazy.loadInSlide(i); }\n        }\n      } else {\n        swiper.lazy.loadInSlide(activeIndex);\n      }\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n          var amount = params.loadPrevNextAmount;\n          var spv = slidesPerView;\n          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n          // Next Slides\n          for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {\n            if (slideExist(i$1)) { swiper.lazy.loadInSlide(i$1); }\n          }\n          // Prev Slides\n          for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {\n            if (slideExist(i$2)) { swiper.lazy.loadInSlide(i$2); }\n          }\n        } else {\n          var nextSlide = $wrapperEl.children((\".\" + (swiperParams.slideNextClass)));\n          if (nextSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(nextSlide)); }\n\n          var prevSlide = $wrapperEl.children((\".\" + (swiperParams.slidePrevClass)));\n          if (prevSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(prevSlide)); }\n        }\n      }\n    },\n  };\n\n  var Lazy$1 = {\n    name: 'lazy',\n    params: {\n      lazy: {\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        lazy: {\n          initialImageLoaded: false,\n          load: Lazy.load.bind(swiper),\n          loadInSlide: Lazy.loadInSlide.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n          swiper.lazy.load();\n        }\n      },\n      scroll: function scroll() {\n        var swiper = this;\n        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n          swiper.lazy.load();\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      scrollbarDragMove: function scrollbarDragMove() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      transitionStart: function transitionStart() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n            swiper.lazy.load();\n          }\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          swiper.lazy.load();\n        }\n      },\n    },\n  };\n\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\n  var Controller = {\n    LinearSpline: function LinearSpline(x, y) {\n      var binarySearch = (function search() {\n        var maxIndex;\n        var minIndex;\n        var guess;\n        return function (array, val) {\n          minIndex = -1;\n          maxIndex = array.length;\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n          return maxIndex;\n        };\n      }());\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1;\n      // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n      var i1;\n      var i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) { return 0; }\n\n        // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1;\n\n        // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n        return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n      };\n      return this;\n    },\n    // xxx: for now i will just save one spline function to to\n    getInterpolateFunction: function getInterpolateFunction(c) {\n      var swiper = this;\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop\n          ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n          : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    },\n    setTranslate: function setTranslate(setTranslate$1, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var multiplier;\n      var controlledTranslate;\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n        if (swiper.params.controller.by === 'slide') {\n          swiper.controller.getInterpolateFunction(c);\n          // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n      if (Array.isArray(controlled)) {\n        for (var i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    },\n    setTransition: function setTransition(duration, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var i;\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n        if (duration !== 0) {\n          c.transitionStart();\n          if (c.params.autoHeight) {\n            Utils.nextTick(function () {\n              c.updateAutoHeight();\n            });\n          }\n          c.$wrapperEl.transitionEnd(function () {\n            if (!controlled) { return; }\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n            c.transitionEnd();\n          });\n        }\n      }\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    },\n  };\n  var Controller$1 = {\n    name: 'controller',\n    params: {\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide', // or 'container'\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        controller: {\n          control: swiper.params.controller.control,\n          getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n          setTranslate: Controller.setTranslate.bind(swiper),\n          setTransition: Controller.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      update: function update() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      setTranslate: function setTranslate(translate, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTranslate(translate, byController);\n      },\n      setTransition: function setTransition(duration, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTransition(duration, byController);\n      },\n    },\n  };\n\n  var a11y = {\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterKey: function onEnterKey(e) {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (e.keyCode !== 13) { return; }\n      var $targetEl = $(e.target);\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n      if (swiper.pagination && $targetEl.is((\".\" + (swiper.params.pagination.bulletClass)))) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n      if (notification.length === 0) { return; }\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n        }\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n          swiper.a11y.addElRole($bulletEl, 'button');\n          swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n\n      swiper.$el.append(swiper.a11y.liveRegion);\n\n      // Navigation\n      var params = swiper.params.a11y;\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        swiper.a11y.makeElFocusable($nextEl);\n        swiper.a11y.addElRole($nextEl, 'button');\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        $nextEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        swiper.a11y.makeElFocusable($prevEl);\n        swiper.a11y.addElRole($prevEl, 'button');\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        $prevEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) { swiper.a11y.liveRegion.remove(); }\n\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n  };\n  var A11y = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        a11y: {\n          liveRegion: $((\"<span class=\\\"\" + (swiper.params.a11y.notificationClass) + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")),\n        },\n      });\n      Object.keys(a11y).forEach(function (methodName) {\n        swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.destroy();\n      },\n    },\n  };\n\n  var History = {\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.history) { return; }\n      if (!win.history || !win.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n      var history = swiper.history;\n      history.initialized = true;\n      history.paths = History.getPathValues();\n      if (!history.paths.key && !history.paths.value) { return; }\n      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n      if (!swiper.params.history.replaceState) {\n        win.addEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (!swiper.params.history.replaceState) {\n        win.removeEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    setHistoryPopState: function setHistoryPopState() {\n      var swiper = this;\n      swiper.history.paths = History.getPathValues();\n      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n    },\n    getPathValues: function getPathValues() {\n      var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) { return part !== ''; });\n      var total = pathArray.length;\n      var key = pathArray[total - 2];\n      var value = pathArray[total - 1];\n      return { key: key, value: value };\n    },\n    setHistory: function setHistory(key, index) {\n      var swiper = this;\n      if (!swiper.history.initialized || !swiper.params.history.enabled) { return; }\n      var slide = swiper.slides.eq(index);\n      var value = History.slugify(slide.attr('data-history'));\n      if (!win.location.pathname.includes(key)) {\n        value = key + \"/\" + value;\n      }\n      var currentState = win.history.state;\n      if (currentState && currentState.value === value) {\n        return;\n      }\n      if (swiper.params.history.replaceState) {\n        win.history.replaceState({ value: value }, null, value);\n      } else {\n        win.history.pushState({ value: value }, null, value);\n      }\n    },\n    slugify: function slugify(text) {\n      return text.toString().toLowerCase()\n        .replace(/\\s+/g, '-')\n        .replace(/[^\\w-]+/g, '')\n        .replace(/--+/g, '-')\n        .replace(/^-+/, '')\n        .replace(/-+$/, '');\n    },\n    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n      var swiper = this;\n      if (value) {\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHistory = History.slugify(slide.attr('data-history'));\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    },\n  };\n\n  var History$1 = {\n    name: 'history',\n    params: {\n      history: {\n        enabled: false,\n        replaceState: false,\n        key: 'slides',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        history: {\n          init: History.init.bind(swiper),\n          setHistory: History.setHistory.bind(swiper),\n          setHistoryPopState: History.setHistoryPopState.bind(swiper),\n          scrollToSlide: History.scrollToSlide.bind(swiper),\n          destroy: History.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.history.initialized) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n    },\n  };\n\n  var HashNavigation = {\n    onHashCange: function onHashCange() {\n      var swiper = this;\n      var newHash = doc.location.hash.replace('#', '');\n      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n      if (newHash !== activeSlideHash) {\n        var newIndex = swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-hash=\\\"\" + newHash + \"\\\"]\")).index();\n        if (typeof newIndex === 'undefined') { return; }\n        swiper.slideTo(newIndex);\n      }\n    },\n    setHash: function setHash() {\n      var swiper = this;\n      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) { return; }\n      if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {\n        win.history.replaceState(null, null, ((\"#\" + (swiper.slides.eq(swiper.activeIndex).attr('data-hash'))) || ''));\n      } else {\n        var slide = swiper.slides.eq(swiper.activeIndex);\n        var hash = slide.attr('data-hash') || slide.attr('data-history');\n        doc.location.hash = hash || '';\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) { return; }\n      swiper.hashNavigation.initialized = true;\n      var hash = doc.location.hash.replace('#', '');\n      if (hash) {\n        var speed = 0;\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).on('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).off('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n  };\n  var HashNavigation$1 = {\n    name: 'hash-navigation',\n    params: {\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        hashNavigation: {\n          initialized: false,\n          init: HashNavigation.init.bind(swiper),\n          destroy: HashNavigation.destroy.bind(swiper),\n          setHash: HashNavigation.setHash.bind(swiper),\n          onHashCange: HashNavigation.onHashCange.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.hashNavigation.initialized) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n    },\n  };\n\n  /* eslint no-underscore-dangle: \"off\" */\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n      swiper.autoplay.timeout = Utils.nextTick(function () {\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n      if (typeof swiper.autoplay.timeout !== 'undefined') { return false; }\n      if (swiper.autoplay.running) { return false; }\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return false; }\n      if (typeof swiper.autoplay.timeout === 'undefined') { return false; }\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return; }\n      if (swiper.autoplay.paused) { return; }\n      if (swiper.autoplay.timeout) { clearTimeout(swiper.autoplay.timeout); }\n      swiper.autoplay.paused = true;\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      }\n    },\n  };\n\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        autoplay: {\n          running: false,\n          paused: false,\n          run: Autoplay.run.bind(swiper),\n          start: Autoplay.start.bind(swiper),\n          stop: Autoplay.stop.bind(swiper),\n          pause: Autoplay.pause.bind(swiper),\n          onTransitionEnd: function onTransitionEnd(e) {\n            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n            swiper.autoplay.paused = false;\n            if (!swiper.autoplay.running) {\n              swiper.autoplay.stop();\n            } else {\n              swiper.autoplay.run();\n            }\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(speed, internal) {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n      },\n    },\n  };\n\n  var Fade = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = swiper.slides.eq(i);\n        var offset = $slideEl[0].swiperSlideOffset;\n        var tx = -offset;\n        if (!swiper.params.virtualTranslate) { tx -= swiper.translate; }\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n        var slideOpacity = swiper.params.fadeEffect.crossFade\n          ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n          : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl\n          .css({\n            opacity: slideOpacity,\n          })\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        slides.transitionEnd(function () {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFade = {\n    name: 'effect-fade',\n    params: {\n      fadeEffect: {\n        crossFade: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        fadeEffect: {\n          setTranslate: Fade.setTranslate.bind(swiper),\n          setTransition: Fade.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"fade\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Cube = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var rtl = swiper.rtlTranslate;\n      var swiperSize = swiper.size;\n      var params = swiper.params.cubeEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var wrapperRotate = 0;\n      var $cubeShadowEl;\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n          $cubeShadowEl.css({ height: (swiperWidth + \"px\") });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideIndex = i;\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n        var slideAngle = slideIndex * 90;\n        var round = Math.floor(slideAngle / 360);\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        var tx = 0;\n        var ty = 0;\n        var tz = 0;\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + (round * 4 * swiperSize);\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = (3 * swiperSize) + (swiperSize * 4 * round);\n        }\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = (slideIndex * 90) + (progress * 90);\n          if (rtl) { wrapperRotate = (-slideIndex * 90) - (progress * 90); }\n        }\n        $slideEl.transform(transform);\n        if (params.slideShadows) {\n          // Set shadows\n          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n      }\n      $wrapperEl.css({\n        '-webkit-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-moz-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-ms-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        'transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform((\"translate3d(0px, \" + ((swiperWidth / 2) + params.shadowOffset) + \"px, \" + (-swiperWidth / 2) + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + (params.shadowScale) + \")\"));\n        } else {\n          var shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n          var multiplier = 1.5 - (\n            (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n            + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n          );\n          var scale1 = params.shadowScale;\n          var scale2 = params.shadowScale / multiplier;\n          var offset = params.shadowOffset;\n          $cubeShadowEl.transform((\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + ((swiperHeight / 2) + offset) + \"px, \" + (-swiperHeight / 2 / scale2) + \"px) rotateX(-90deg)\"));\n        }\n      }\n      var zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n      $wrapperEl\n        .transform((\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\"));\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    },\n  };\n\n  var EffectCube = {\n    name: 'effect-cube',\n    params: {\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        cubeEffect: {\n          setTranslate: Cube.setTranslate.bind(swiper),\n          setTransition: Cube.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"cube\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Flip = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      var rtl = swiper.rtlTranslate;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var progress = $slideEl[0].progress;\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n        var offset = $slideEl[0].swiperSlideOffset;\n        var rotate = -180 * progress;\n        var rotateY = rotate;\n        var rotateX = 0;\n        var tx = -offset;\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (swiper.params.flipEffect.slideShadows) {\n          // Set shadows\n          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n        $slideEl\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        // eslint-disable-next-line\n        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFlip = {\n    name: 'effect-flip',\n    params: {\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        flipEffect: {\n          setTranslate: Flip.setTranslate.bind(swiper),\n          setTransition: Flip.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"flip\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Coverflow = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesSizesGrid = swiper.slidesSizesGrid;\n      var params = swiper.params.coverflowEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var transform = swiper.translate;\n      var center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n      var rotate = isHorizontal ? params.rotate : -params.rotate;\n      var translate = params.depth;\n      // Each slide offset from center\n      for (var i = 0, length = slides.length; i < length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideSize = slidesSizesGrid[i];\n        var slideOffset = $slideEl[0].swiperSlideOffset;\n        var offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n        // var rotateZ = 0\n        var translateZ = -translate * Math.abs(offsetMultiplier);\n\n        var translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n        var translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n        // Fix for ultra small values\n        if (Math.abs(translateX) < 0.001) { translateX = 0; }\n        if (Math.abs(translateY) < 0.001) { translateY = 0; }\n        if (Math.abs(translateZ) < 0.001) { translateZ = 0; }\n        if (Math.abs(rotateY) < 0.001) { rotateY = 0; }\n        if (Math.abs(rotateX) < 0.001) { rotateX = 0; }\n\n        var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\";\n\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n        if (params.slideShadows) {\n          // Set shadows\n          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append($shadowBeforeEl);\n          }\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append($shadowAfterEl);\n          }\n          if ($shadowBeforeEl.length) { $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0; }\n          if ($shadowAfterEl.length) { $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0; }\n        }\n      }\n\n      // Set correct perspective for IE10\n      if (Support.pointerEvents || Support.prefixedPointerEvents) {\n        var ws = $wrapperEl[0].style;\n        ws.perspectiveOrigin = center + \"px 50%\";\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      swiper.slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n    },\n  };\n\n  var EffectCoverflow = {\n    name: 'effect-coverflow',\n    params: {\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        coverflowEffect: {\n          setTranslate: Coverflow.setTranslate.bind(swiper),\n          setTransition: Coverflow.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"coverflow\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Thumbs = {\n    init: function init() {\n      var swiper = this;\n      var ref = swiper.params;\n      var thumbsParams = ref.thumbs;\n      var SwiperClass = swiper.constructor;\n      if (thumbsParams.swiper instanceof SwiperClass) {\n        swiper.thumbs.swiper = thumbsParams.swiper;\n        Utils.extend(swiper.thumbs.swiper.originalParams, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        });\n        Utils.extend(swiper.thumbs.swiper.params, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        });\n      } else if (Utils.isObject(thumbsParams.swiper)) {\n        swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n          watchSlidesVisibility: true,\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        }));\n        swiper.thumbs.swiperCreated = true;\n      }\n      swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n      swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n    },\n    onThumbClick: function onThumbClick() {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) { return; }\n      var clickedIndex = thumbsSwiper.clickedIndex;\n      var clickedSlide = thumbsSwiper.clickedSlide;\n      if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) { return; }\n      if (typeof clickedIndex === 'undefined' || clickedIndex === null) { return; }\n      var slideToIndex;\n      if (thumbsSwiper.params.loop) {\n        slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      } else {\n        slideToIndex = clickedIndex;\n      }\n      if (swiper.params.loop) {\n        var currentIndex = swiper.activeIndex;\n        if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n          swiper.loopFix();\n          // eslint-disable-next-line\n          swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n          currentIndex = swiper.activeIndex;\n        }\n        var prevIndex = swiper.slides.eq(currentIndex).prevAll((\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\")).eq(0).index();\n        var nextIndex = swiper.slides.eq(currentIndex).nextAll((\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\")).eq(0).index();\n        if (typeof prevIndex === 'undefined') { slideToIndex = nextIndex; }\n        else if (typeof nextIndex === 'undefined') { slideToIndex = prevIndex; }\n        else if (nextIndex - currentIndex < currentIndex - prevIndex) { slideToIndex = nextIndex; }\n        else { slideToIndex = prevIndex; }\n      }\n      swiper.slideTo(slideToIndex);\n    },\n    update: function update(initial) {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) { return; }\n\n      var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n        ? thumbsSwiper.slidesPerViewDynamic()\n        : thumbsSwiper.params.slidesPerView;\n\n      if (swiper.realIndex !== thumbsSwiper.realIndex) {\n        var currentThumbsIndex = thumbsSwiper.activeIndex;\n        var newThumbsIndex;\n        if (thumbsSwiper.params.loop) {\n          if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n            thumbsSwiper.loopFix();\n            // eslint-disable-next-line\n            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n            currentThumbsIndex = thumbsSwiper.activeIndex;\n          }\n          // Find actual thumbs index to slide to\n          var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex) + \"\\\"]\")).eq(0).index();\n          var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex) + \"\\\"]\")).eq(0).index();\n          if (typeof prevThumbsIndex === 'undefined') { newThumbsIndex = nextThumbsIndex; }\n          else if (typeof nextThumbsIndex === 'undefined') { newThumbsIndex = prevThumbsIndex; }\n          else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) { newThumbsIndex = currentThumbsIndex; }\n          else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) { newThumbsIndex = nextThumbsIndex; }\n          else { newThumbsIndex = prevThumbsIndex; }\n        } else {\n          newThumbsIndex = swiper.realIndex;\n        }\n        if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n          if (thumbsSwiper.params.centeredSlides) {\n            if (newThumbsIndex > currentThumbsIndex) {\n              newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n            } else {\n              newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n            }\n          } else if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n          }\n          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n        }\n      }\n\n      // Activate thumbs\n      var thumbsToActivate = 1;\n      var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n        thumbsToActivate = swiper.params.slidesPerView;\n      }\n\n      thumbsSwiper.slides.removeClass(thumbActiveClass);\n      if (thumbsSwiper.params.loop) {\n        for (var i = 0; i < thumbsToActivate; i += 1) {\n          thumbsSwiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex + i) + \"\\\"]\")).addClass(thumbActiveClass);\n        }\n      } else {\n        for (var i$1 = 0; i$1 < thumbsToActivate; i$1 += 1) {\n          thumbsSwiper.slides.eq(swiper.realIndex + i$1).addClass(thumbActiveClass);\n        }\n      }\n    },\n  };\n  var Thumbs$1 = {\n    name: 'thumbs',\n    params: {\n      thumbs: {\n        swiper: null,\n        slideThumbActiveClass: 'swiper-slide-thumb-active',\n        thumbsContainerClass: 'swiper-container-thumbs',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        thumbs: {\n          swiper: null,\n          init: Thumbs.init.bind(swiper),\n          update: Thumbs.update.bind(swiper),\n          onThumbClick: Thumbs.onThumbClick.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        var ref = swiper.params;\n        var thumbs = ref.thumbs;\n        if (!thumbs || !thumbs.swiper) { return; }\n        swiper.thumbs.init();\n        swiper.thumbs.update(true);\n      },\n      slideChange: function slideChange() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      update: function update() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) { return; }\n        thumbsSwiper.setTransition(duration);\n      },\n      beforeDestroy: function beforeDestroy() {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) { return; }\n        if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n          thumbsSwiper.destroy();\n        }\n      },\n    },\n  };\n\n  // Swiper Class\n\n  var components = [\n    Device$1,\n    Support$1,\n    Browser$1,\n    Resize,\n    Observer$1,\n    Virtual$1,\n    Keyboard$1,\n    Mousewheel$1,\n    Navigation$1,\n    Pagination$1,\n    Scrollbar$1,\n    Parallax$1,\n    Zoom$1,\n    Lazy$1,\n    Controller$1,\n    A11y,\n    History$1,\n    HashNavigation$1,\n    Autoplay$1,\n    EffectFade,\n    EffectCube,\n    EffectFlip,\n    EffectCoverflow,\n    Thumbs$1\n  ];\n\n  if (typeof Swiper.use === 'undefined') {\n    Swiper.use = Swiper.Class.use;\n    Swiper.installModule = Swiper.Class.installModule;\n  }\n\n  Swiper.use(components);\n\n  return Swiper;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/dist/js/swiper.js\n// module id = 214\n// module chunks = 2","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"slider\"},[_c('swiper',{ref:\"mySwiper\",staticClass:\"slide\",attrs:{\"options\":_vm.swiperOption}},[(this.language == 'en')?[_c('swiper-slide',[_c('img',{attrs:{\"src\":require(\"./assets/slide_en_1.jpg\"),\"alt\":\"slide_en_1.jpg\"}})]),_vm._v(\" \"),_c('swiper-slide',[_c('img',{attrs:{\"src\":require(\"./assets/slide_en_2.jpg\"),\"alt\":\"slide_en_2.jpg\"}})])]:[_c('swiper-slide',[_c('img',{attrs:{\"src\":require(\"./assets/slide_uk_1.jpg\"),\"alt\":\"slide_uk_2.jpg\"}})]),_vm._v(\" \"),_c('swiper-slide',[_c('img',{attrs:{\"src\":require(\"./assets/slide_uk_2.jpg\"),\"alt\":\"slide_uk_2.jpg\"}})])],_vm._v(\" \"),_c('div',{staticClass:\"swiper-pagination\",attrs:{\"slot\":\"pagination\"},slot:\"pagination\"})],2),_vm._v(\" \"),_c('div',{staticClass:\"swiper-button-next swiper-button-white\"}),_vm._v(\" \"),_c('div',{staticClass:\"swiper-button-prev swiper-button-white\"})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-777cb022\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/assets/js/components/body/Home/components/carrousel/carrousel.vue\n// module id = 215\n// module chunks = 2","module.exports = __webpack_public_path__ + \"../images/slide_en_1.jpg?711999ae8d7047c318e6b4a8e525eb38\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/assets/js/components/body/Home/components/carrousel/assets/slide_en_1.jpg\n// module id = 216\n// module chunks = 2","module.exports = __webpack_public_path__ + \"../images/slide_en_2.jpg?61b62f8fb54346ab789c472d7cb6398e\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/assets/js/components/body/Home/components/carrousel/assets/slide_en_2.jpg\n// module id = 217\n// module chunks = 2","module.exports = __webpack_public_path__ + \"../images/slide_uk_1.jpg?170b02d7304d8d035f4419e96f3f6678\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/assets/js/components/body/Home/components/carrousel/assets/slide_uk_1.jpg\n// module id = 218\n// module chunks = 2","module.exports = __webpack_public_path__ + \"../images/slide_uk_2.jpg?82261bc767b4d6553e3bfe1fd00b3f68\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/assets/js/components/body/Home/components/carrousel/assets/slide_uk_2.jpg\n// module id = 219\n// module chunks = 2"],"sourceRoot":""}